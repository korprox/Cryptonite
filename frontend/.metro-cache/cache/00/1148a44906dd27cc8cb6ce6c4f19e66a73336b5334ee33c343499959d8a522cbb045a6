{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deepClone = deepClone;\n  exports.isSdpTypeValid = isSdpTypeValid;\n  exports.normalizeConstraints = normalizeConstraints;\n  exports.normalizeOfferOptions = normalizeOfferOptions;\n  exports.uniqueID = uniqueID;\n  const DEFAULT_AUDIO_CONSTRAINTS = {};\n  const DEFAULT_VIDEO_CONSTRAINTS = {\n    facingMode: 'user',\n    frameRate: 30,\n    height: 720,\n    width: 1280\n  };\n  const FACING_MODES = ['user', 'environment'];\n  const ASPECT_RATIO = 16 / 9;\n  const STANDARD_OFFER_OPTIONS = {\n    icerestart: 'IceRestart',\n    offertoreceiveaudio: 'OfferToReceiveAudio',\n    offertoreceivevideo: 'OfferToReceiveVideo',\n    voiceactivitydetection: 'VoiceActivityDetection'\n  };\n  const SDP_TYPES = ['offer', 'pranswer', 'answer', 'rollback'];\n  function getDefaultMediaConstraints(mediaType) {\n    switch (mediaType) {\n      case 'audio':\n        return DEFAULT_AUDIO_CONSTRAINTS;\n      case 'video':\n        return DEFAULT_VIDEO_CONSTRAINTS;\n      default:\n        throw new TypeError(`Invalid media type: ${mediaType}`);\n    }\n  }\n  function extractString(constraints, prop) {\n    const value = constraints[prop];\n    const type = typeof value;\n    if (type === 'object') {\n      for (const v of ['exact', 'ideal']) {\n        if (value[v]) {\n          return value[v];\n        }\n      }\n    } else if (type === 'string') {\n      return value;\n    }\n  }\n  function extractNumber(constraints, prop) {\n    const value = constraints[prop];\n    const type = typeof value;\n    if (type === 'number') {\n      return Number.parseInt(value);\n    } else if (type === 'object') {\n      for (const v of ['exact', 'ideal', 'max', 'min']) {\n        if (value[v]) {\n          return Number.parseInt(value[v]);\n        }\n      }\n    }\n  }\n  function normalizeMediaConstraints(constraints, mediaType) {\n    switch (mediaType) {\n      case 'audio':\n        return constraints;\n      case 'video':\n        {\n          const c = {\n            deviceId: extractString(constraints, 'deviceId'),\n            facingMode: extractString(constraints, 'facingMode'),\n            frameRate: extractNumber(constraints, 'frameRate'),\n            height: extractNumber(constraints, 'height'),\n            width: extractNumber(constraints, 'width')\n          };\n          if (!c.deviceId) {\n            delete c.deviceId;\n          }\n          if (!FACING_MODES.includes(c.facingMode)) {\n            c.facingMode = DEFAULT_VIDEO_CONSTRAINTS.facingMode;\n          }\n          if (!c.frameRate) {\n            c.frameRate = DEFAULT_VIDEO_CONSTRAINTS.frameRate;\n          }\n          if (!c.height && !c.width) {\n            c.height = DEFAULT_VIDEO_CONSTRAINTS.height;\n            c.width = DEFAULT_VIDEO_CONSTRAINTS.width;\n          } else if (!c.height && c.width) {\n            c.height = Math.round(c.width / ASPECT_RATIO);\n          } else if (!c.width && c.height) {\n            c.width = Math.round(c.height * ASPECT_RATIO);\n          }\n          return c;\n        }\n      default:\n        throw new TypeError(`Invalid media type: ${mediaType}`);\n    }\n  }\n\n  /**\n   * Utility for creating short random strings from float point values.\n   * We take 4 characters from the end after converting to a string.\n   * Conversion to string gives us some letters as we don't want just numbers.\n   * Should be suitable to pass for enough randomness.\n   *\n   * @return {String} 4 random characters\n   */\n  function chr4() {\n    return Math.random().toString(16).slice(-4);\n  }\n\n  /**\n   * Put together a random string in UUIDv4 format {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\n   *\n   * @return {String} uuidv4\n   */\n  function uniqueID() {\n    return `${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n  }\n\n  /**\n   * Utility for deep cloning an object. Object.assign() only does a shallow copy.\n   *\n   * @param {Object} obj - object to be cloned\n   * @return {Object} cloned obj\n   */\n  function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  /**\n   * Checks whether an SDP type is valid or not.\n   *\n   * @param type SDP type to check.\n   * @returns Whether the SDP type is valid or not.\n   */\n  function isSdpTypeValid(type) {\n    return SDP_TYPES.includes(type);\n  }\n\n  /**\n   * Normalize options passed to createOffer().\n   *\n   * @param options - user supplied options\n   * @return Normalized options\n   */\n  function normalizeOfferOptions(options) {\n    const newOptions = {};\n    if (typeof options !== 'object') {\n      return newOptions;\n    }\n\n    // Convert standard options into WebRTC internal constant names.\n    // See: https://github.com/jitsi/webrtc/blob/0cd6ce4de669bed94ba47b88cb71b9be0341bb81/sdk/media_constraints.cc#L113\n    for (const [key, value] of Object.entries(options)) {\n      const newKey = STANDARD_OFFER_OPTIONS[key.toLowerCase()];\n      if (newKey) {\n        newOptions[newKey] = String(Boolean(value));\n      }\n    }\n    return newOptions;\n  }\n\n  /**\n   * Normalize the given constraints in something we can work with.\n   */\n  function normalizeConstraints(constraints) {\n    const c = deepClone(constraints);\n    for (const mediaType of ['audio', 'video']) {\n      const mediaTypeConstraints = c[mediaType];\n      const typeofMediaTypeConstraints = typeof mediaTypeConstraints;\n      if (typeofMediaTypeConstraints !== 'undefined') {\n        if (typeofMediaTypeConstraints === 'boolean') {\n          if (mediaTypeConstraints) {\n            c[mediaType] = getDefaultMediaConstraints(mediaType);\n          }\n        } else if (typeofMediaTypeConstraints === 'object') {\n          c[mediaType] = normalizeMediaConstraints(mediaTypeConstraints, mediaType);\n        } else {\n          throw new TypeError(`constraints.${mediaType} is neither a boolean nor a dictionary`);\n        }\n      }\n    }\n    return c;\n  }\n});","lineCount":187,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"deepClone"],[7,19,6,17],[7,22,6,20,"deepClone"],[7,31,6,29],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"isSdpTypeValid"],[8,24,7,22],[8,27,7,25,"isSdpTypeValid"],[8,41,7,39],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"normalizeConstraints"],[9,30,8,28],[9,33,8,31,"normalizeConstraints"],[9,53,8,51],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"normalizeOfferOptions"],[10,31,9,29],[10,34,9,32,"normalizeOfferOptions"],[10,55,9,53],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"uniqueID"],[11,18,10,16],[11,21,10,19,"uniqueID"],[11,29,10,27],[12,2,11,0],[12,8,11,6,"DEFAULT_AUDIO_CONSTRAINTS"],[12,33,11,31],[12,36,11,34],[12,37,11,35],[12,38,11,36],[13,2,12,0],[13,8,12,6,"DEFAULT_VIDEO_CONSTRAINTS"],[13,33,12,31],[13,36,12,34],[14,4,13,2,"facingMode"],[14,14,13,12],[14,16,13,14],[14,22,13,20],[15,4,14,2,"frameRate"],[15,13,14,11],[15,15,14,13],[15,17,14,15],[16,4,15,2,"height"],[16,10,15,8],[16,12,15,10],[16,15,15,13],[17,4,16,2,"width"],[17,9,16,7],[17,11,16,9],[18,2,17,0],[18,3,17,1],[19,2,18,0],[19,8,18,6,"FACING_MODES"],[19,20,18,18],[19,23,18,21],[19,24,18,22],[19,30,18,28],[19,32,18,30],[19,45,18,43],[19,46,18,44],[20,2,19,0],[20,8,19,6,"ASPECT_RATIO"],[20,20,19,18],[20,23,19,21],[20,25,19,23],[20,28,19,26],[20,29,19,27],[21,2,20,0],[21,8,20,6,"STANDARD_OFFER_OPTIONS"],[21,30,20,28],[21,33,20,31],[22,4,21,2,"icerestart"],[22,14,21,12],[22,16,21,14],[22,28,21,26],[23,4,22,2,"offertoreceiveaudio"],[23,23,22,21],[23,25,22,23],[23,46,22,44],[24,4,23,2,"offertoreceivevideo"],[24,23,23,21],[24,25,23,23],[24,46,23,44],[25,4,24,2,"voiceactivitydetection"],[25,26,24,24],[25,28,24,26],[26,2,25,0],[26,3,25,1],[27,2,26,0],[27,8,26,6,"SDP_TYPES"],[27,17,26,15],[27,20,26,18],[27,21,26,19],[27,28,26,26],[27,30,26,28],[27,40,26,38],[27,42,26,40],[27,50,26,48],[27,52,26,50],[27,62,26,60],[27,63,26,61],[28,2,27,0],[28,11,27,9,"getDefaultMediaConstraints"],[28,37,27,35,"getDefaultMediaConstraints"],[28,38,27,36,"mediaType"],[28,47,27,45],[28,49,27,47],[29,4,28,2],[29,12,28,10,"mediaType"],[29,21,28,19],[30,6,29,4],[30,11,29,9],[30,18,29,16],[31,8,30,6],[31,15,30,13,"DEFAULT_AUDIO_CONSTRAINTS"],[31,40,30,38],[32,6,31,4],[32,11,31,9],[32,18,31,16],[33,8,32,6],[33,15,32,13,"DEFAULT_VIDEO_CONSTRAINTS"],[33,40,32,38],[34,6,33,4],[35,8,34,6],[35,14,34,12],[35,18,34,16,"TypeError"],[35,27,34,25],[35,28,34,26],[35,51,34,49,"mediaType"],[35,60,34,58],[35,62,34,60],[35,63,34,61],[36,4,35,2],[37,2,36,0],[38,2,37,0],[38,11,37,9,"extractString"],[38,24,37,22,"extractString"],[38,25,37,23,"constraints"],[38,36,37,34],[38,38,37,36,"prop"],[38,42,37,40],[38,44,37,42],[39,4,38,2],[39,10,38,8,"value"],[39,15,38,13],[39,18,38,16,"constraints"],[39,29,38,27],[39,30,38,28,"prop"],[39,34,38,32],[39,35,38,33],[40,4,39,2],[40,10,39,8,"type"],[40,14,39,12],[40,17,39,15],[40,24,39,22,"value"],[40,29,39,27],[41,4,40,2],[41,8,40,6,"type"],[41,12,40,10],[41,17,40,15],[41,25,40,23],[41,27,40,25],[42,6,41,4],[42,11,41,9],[42,17,41,15,"v"],[42,18,41,16],[42,22,41,20],[42,23,41,21],[42,30,41,28],[42,32,41,30],[42,39,41,37],[42,40,41,38],[42,42,41,40],[43,8,42,6],[43,12,42,10,"value"],[43,17,42,15],[43,18,42,16,"v"],[43,19,42,17],[43,20,42,18],[43,22,42,20],[44,10,43,8],[44,17,43,15,"value"],[44,22,43,20],[44,23,43,21,"v"],[44,24,43,22],[44,25,43,23],[45,8,44,6],[46,6,45,4],[47,4,46,2],[47,5,46,3],[47,11,46,9],[47,15,46,13,"type"],[47,19,46,17],[47,24,46,22],[47,32,46,30],[47,34,46,32],[48,6,47,4],[48,13,47,11,"value"],[48,18,47,16],[49,4,48,2],[50,2,49,0],[51,2,50,0],[51,11,50,9,"extractNumber"],[51,24,50,22,"extractNumber"],[51,25,50,23,"constraints"],[51,36,50,34],[51,38,50,36,"prop"],[51,42,50,40],[51,44,50,42],[52,4,51,2],[52,10,51,8,"value"],[52,15,51,13],[52,18,51,16,"constraints"],[52,29,51,27],[52,30,51,28,"prop"],[52,34,51,32],[52,35,51,33],[53,4,52,2],[53,10,52,8,"type"],[53,14,52,12],[53,17,52,15],[53,24,52,22,"value"],[53,29,52,27],[54,4,53,2],[54,8,53,6,"type"],[54,12,53,10],[54,17,53,15],[54,25,53,23],[54,27,53,25],[55,6,54,4],[55,13,54,11,"Number"],[55,19,54,17],[55,20,54,18,"parseInt"],[55,28,54,26],[55,29,54,27,"value"],[55,34,54,32],[55,35,54,33],[56,4,55,2],[56,5,55,3],[56,11,55,9],[56,15,55,13,"type"],[56,19,55,17],[56,24,55,22],[56,32,55,30],[56,34,55,32],[57,6,56,4],[57,11,56,9],[57,17,56,15,"v"],[57,18,56,16],[57,22,56,20],[57,23,56,21],[57,30,56,28],[57,32,56,30],[57,39,56,37],[57,41,56,39],[57,46,56,44],[57,48,56,46],[57,53,56,51],[57,54,56,52],[57,56,56,54],[58,8,57,6],[58,12,57,10,"value"],[58,17,57,15],[58,18,57,16,"v"],[58,19,57,17],[58,20,57,18],[58,22,57,20],[59,10,58,8],[59,17,58,15,"Number"],[59,23,58,21],[59,24,58,22,"parseInt"],[59,32,58,30],[59,33,58,31,"value"],[59,38,58,36],[59,39,58,37,"v"],[59,40,58,38],[59,41,58,39],[59,42,58,40],[60,8,59,6],[61,6,60,4],[62,4,61,2],[63,2,62,0],[64,2,63,0],[64,11,63,9,"normalizeMediaConstraints"],[64,36,63,34,"normalizeMediaConstraints"],[64,37,63,35,"constraints"],[64,48,63,46],[64,50,63,48,"mediaType"],[64,59,63,57],[64,61,63,59],[65,4,64,2],[65,12,64,10,"mediaType"],[65,21,64,19],[66,6,65,4],[66,11,65,9],[66,18,65,16],[67,8,66,6],[67,15,66,13,"constraints"],[67,26,66,24],[68,6,67,4],[68,11,67,9],[68,18,67,16],[69,8,68,6],[70,10,69,8],[70,16,69,14,"c"],[70,17,69,15],[70,20,69,18],[71,12,70,10,"deviceId"],[71,20,70,18],[71,22,70,20,"extractString"],[71,35,70,33],[71,36,70,34,"constraints"],[71,47,70,45],[71,49,70,47],[71,59,70,57],[71,60,70,58],[72,12,71,10,"facingMode"],[72,22,71,20],[72,24,71,22,"extractString"],[72,37,71,35],[72,38,71,36,"constraints"],[72,49,71,47],[72,51,71,49],[72,63,71,61],[72,64,71,62],[73,12,72,10,"frameRate"],[73,21,72,19],[73,23,72,21,"extractNumber"],[73,36,72,34],[73,37,72,35,"constraints"],[73,48,72,46],[73,50,72,48],[73,61,72,59],[73,62,72,60],[74,12,73,10,"height"],[74,18,73,16],[74,20,73,18,"extractNumber"],[74,33,73,31],[74,34,73,32,"constraints"],[74,45,73,43],[74,47,73,45],[74,55,73,53],[74,56,73,54],[75,12,74,10,"width"],[75,17,74,15],[75,19,74,17,"extractNumber"],[75,32,74,30],[75,33,74,31,"constraints"],[75,44,74,42],[75,46,74,44],[75,53,74,51],[76,10,75,8],[76,11,75,9],[77,10,76,8],[77,14,76,12],[77,15,76,13,"c"],[77,16,76,14],[77,17,76,15,"deviceId"],[77,25,76,23],[77,27,76,25],[78,12,77,10],[78,19,77,17,"c"],[78,20,77,18],[78,21,77,19,"deviceId"],[78,29,77,27],[79,10,78,8],[80,10,79,8],[80,14,79,12],[80,15,79,13,"FACING_MODES"],[80,27,79,25],[80,28,79,26,"includes"],[80,36,79,34],[80,37,79,35,"c"],[80,38,79,36],[80,39,79,37,"facingMode"],[80,49,79,47],[80,50,79,48],[80,52,79,50],[81,12,80,10,"c"],[81,13,80,11],[81,14,80,12,"facingMode"],[81,24,80,22],[81,27,80,25,"DEFAULT_VIDEO_CONSTRAINTS"],[81,52,80,50],[81,53,80,51,"facingMode"],[81,63,80,61],[82,10,81,8],[83,10,82,8],[83,14,82,12],[83,15,82,13,"c"],[83,16,82,14],[83,17,82,15,"frameRate"],[83,26,82,24],[83,28,82,26],[84,12,83,10,"c"],[84,13,83,11],[84,14,83,12,"frameRate"],[84,23,83,21],[84,26,83,24,"DEFAULT_VIDEO_CONSTRAINTS"],[84,51,83,49],[84,52,83,50,"frameRate"],[84,61,83,59],[85,10,84,8],[86,10,85,8],[86,14,85,12],[86,15,85,13,"c"],[86,16,85,14],[86,17,85,15,"height"],[86,23,85,21],[86,27,85,25],[86,28,85,26,"c"],[86,29,85,27],[86,30,85,28,"width"],[86,35,85,33],[86,37,85,35],[87,12,86,10,"c"],[87,13,86,11],[87,14,86,12,"height"],[87,20,86,18],[87,23,86,21,"DEFAULT_VIDEO_CONSTRAINTS"],[87,48,86,46],[87,49,86,47,"height"],[87,55,86,53],[88,12,87,10,"c"],[88,13,87,11],[88,14,87,12,"width"],[88,19,87,17],[88,22,87,20,"DEFAULT_VIDEO_CONSTRAINTS"],[88,47,87,45],[88,48,87,46,"width"],[88,53,87,51],[89,10,88,8],[89,11,88,9],[89,17,88,15],[89,21,88,19],[89,22,88,20,"c"],[89,23,88,21],[89,24,88,22,"height"],[89,30,88,28],[89,34,88,32,"c"],[89,35,88,33],[89,36,88,34,"width"],[89,41,88,39],[89,43,88,41],[90,12,89,10,"c"],[90,13,89,11],[90,14,89,12,"height"],[90,20,89,18],[90,23,89,21,"Math"],[90,27,89,25],[90,28,89,26,"round"],[90,33,89,31],[90,34,89,32,"c"],[90,35,89,33],[90,36,89,34,"width"],[90,41,89,39],[90,44,89,42,"ASPECT_RATIO"],[90,56,89,54],[90,57,89,55],[91,10,90,8],[91,11,90,9],[91,17,90,15],[91,21,90,19],[91,22,90,20,"c"],[91,23,90,21],[91,24,90,22,"width"],[91,29,90,27],[91,33,90,31,"c"],[91,34,90,32],[91,35,90,33,"height"],[91,41,90,39],[91,43,90,41],[92,12,91,10,"c"],[92,13,91,11],[92,14,91,12,"width"],[92,19,91,17],[92,22,91,20,"Math"],[92,26,91,24],[92,27,91,25,"round"],[92,32,91,30],[92,33,91,31,"c"],[92,34,91,32],[92,35,91,33,"height"],[92,41,91,39],[92,44,91,42,"ASPECT_RATIO"],[92,56,91,54],[92,57,91,55],[93,10,92,8],[94,10,93,8],[94,17,93,15,"c"],[94,18,93,16],[95,8,94,6],[96,6,95,4],[97,8,96,6],[97,14,96,12],[97,18,96,16,"TypeError"],[97,27,96,25],[97,28,96,26],[97,51,96,49,"mediaType"],[97,60,96,58],[97,62,96,60],[97,63,96,61],[98,4,97,2],[99,2,98,0],[101,2,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,2,108,0],[109,11,108,9,"chr4"],[109,15,108,13,"chr4"],[109,16,108,13],[109,18,108,16],[110,4,109,2],[110,11,109,9,"Math"],[110,15,109,13],[110,16,109,14,"random"],[110,22,109,20],[110,23,109,21],[110,24,109,22],[110,25,109,23,"toString"],[110,33,109,31],[110,34,109,32],[110,36,109,34],[110,37,109,35],[110,38,109,36,"slice"],[110,43,109,41],[110,44,109,42],[110,45,109,43],[110,46,109,44],[110,47,109,45],[111,2,110,0],[113,2,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,2,117,0],[118,11,117,9,"uniqueID"],[118,19,117,17,"uniqueID"],[118,20,117,17],[118,22,117,20],[119,4,118,2],[119,11,118,9],[119,14,118,12,"chr4"],[119,18,118,16],[119,19,118,17],[119,20,118,18],[119,23,118,21,"chr4"],[119,27,118,25],[119,28,118,26],[119,29,118,27],[119,33,118,31,"chr4"],[119,37,118,35],[119,38,118,36],[119,39,118,37],[119,43,118,41,"chr4"],[119,47,118,45],[119,48,118,46],[119,49,118,47],[119,53,118,51,"chr4"],[119,57,118,55],[119,58,118,56],[119,59,118,57],[119,63,118,61,"chr4"],[119,67,118,65],[119,68,118,66],[119,69,118,67],[119,72,118,70,"chr4"],[119,76,118,74],[119,77,118,75],[119,78,118,76],[119,81,118,79,"chr4"],[119,85,118,83],[119,86,118,84],[119,87,118,85],[119,89,118,87],[120,2,119,0],[122,2,121,0],[123,0,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,0,126,0],[128,2,127,0],[128,11,127,9,"deepClone"],[128,20,127,18,"deepClone"],[128,21,127,19,"obj"],[128,24,127,22],[128,26,127,24],[129,4,128,2],[129,11,128,9,"JSON"],[129,15,128,13],[129,16,128,14,"parse"],[129,21,128,19],[129,22,128,20,"JSON"],[129,26,128,24],[129,27,128,25,"stringify"],[129,36,128,34],[129,37,128,35,"obj"],[129,40,128,38],[129,41,128,39],[129,42,128,40],[130,2,129,0],[132,2,131,0],[133,0,132,0],[134,0,133,0],[135,0,134,0],[136,0,135,0],[137,0,136,0],[138,2,137,0],[138,11,137,9,"isSdpTypeValid"],[138,25,137,23,"isSdpTypeValid"],[138,26,137,24,"type"],[138,30,137,28],[138,32,137,30],[139,4,138,2],[139,11,138,9,"SDP_TYPES"],[139,20,138,18],[139,21,138,19,"includes"],[139,29,138,27],[139,30,138,28,"type"],[139,34,138,32],[139,35,138,33],[140,2,139,0],[142,2,141,0],[143,0,142,0],[144,0,143,0],[145,0,144,0],[146,0,145,0],[147,0,146,0],[148,2,147,0],[148,11,147,9,"normalizeOfferOptions"],[148,32,147,30,"normalizeOfferOptions"],[148,33,147,31,"options"],[148,40,147,38],[148,42,147,40],[149,4,148,2],[149,10,148,8,"newOptions"],[149,20,148,18],[149,23,148,21],[149,24,148,22],[149,25,148,23],[150,4,149,2],[150,8,149,6],[150,15,149,13,"options"],[150,22,149,20],[150,27,149,25],[150,35,149,33],[150,37,149,35],[151,6,150,4],[151,13,150,11,"newOptions"],[151,23,150,21],[152,4,151,2],[154,4,153,2],[155,4,154,2],[156,4,155,2],[156,9,155,7],[156,15,155,13],[156,16,155,14,"key"],[156,19,155,17],[156,21,155,19,"value"],[156,26,155,24],[156,27,155,25],[156,31,155,29,"Object"],[156,37,155,35],[156,38,155,36,"entries"],[156,45,155,43],[156,46,155,44,"options"],[156,53,155,51],[156,54,155,52],[156,56,155,54],[157,6,156,4],[157,12,156,10,"newKey"],[157,18,156,16],[157,21,156,19,"STANDARD_OFFER_OPTIONS"],[157,43,156,41],[157,44,156,42,"key"],[157,47,156,45],[157,48,156,46,"toLowerCase"],[157,59,156,57],[157,60,156,58],[157,61,156,59],[157,62,156,60],[158,6,157,4],[158,10,157,8,"newKey"],[158,16,157,14],[158,18,157,16],[159,8,158,6,"newOptions"],[159,18,158,16],[159,19,158,17,"newKey"],[159,25,158,23],[159,26,158,24],[159,29,158,27,"String"],[159,35,158,33],[159,36,158,34,"Boolean"],[159,43,158,41],[159,44,158,42,"value"],[159,49,158,47],[159,50,158,48],[159,51,158,49],[160,6,159,4],[161,4,160,2],[162,4,161,2],[162,11,161,9,"newOptions"],[162,21,161,19],[163,2,162,0],[165,2,164,0],[166,0,165,0],[167,0,166,0],[168,2,167,0],[168,11,167,9,"normalizeConstraints"],[168,31,167,29,"normalizeConstraints"],[168,32,167,30,"constraints"],[168,43,167,41],[168,45,167,43],[169,4,168,2],[169,10,168,8,"c"],[169,11,168,9],[169,14,168,12,"deepClone"],[169,23,168,21],[169,24,168,22,"constraints"],[169,35,168,33],[169,36,168,34],[170,4,169,2],[170,9,169,7],[170,15,169,13,"mediaType"],[170,24,169,22],[170,28,169,26],[170,29,169,27],[170,36,169,34],[170,38,169,36],[170,45,169,43],[170,46,169,44],[170,48,169,46],[171,6,170,4],[171,12,170,10,"mediaTypeConstraints"],[171,32,170,30],[171,35,170,33,"c"],[171,36,170,34],[171,37,170,35,"mediaType"],[171,46,170,44],[171,47,170,45],[172,6,171,4],[172,12,171,10,"typeofMediaTypeConstraints"],[172,38,171,36],[172,41,171,39],[172,48,171,46,"mediaTypeConstraints"],[172,68,171,66],[173,6,172,4],[173,10,172,8,"typeofMediaTypeConstraints"],[173,36,172,34],[173,41,172,39],[173,52,172,50],[173,54,172,52],[174,8,173,6],[174,12,173,10,"typeofMediaTypeConstraints"],[174,38,173,36],[174,43,173,41],[174,52,173,50],[174,54,173,52],[175,10,174,8],[175,14,174,12,"mediaTypeConstraints"],[175,34,174,32],[175,36,174,34],[176,12,175,10,"c"],[176,13,175,11],[176,14,175,12,"mediaType"],[176,23,175,21],[176,24,175,22],[176,27,175,25,"getDefaultMediaConstraints"],[176,53,175,51],[176,54,175,52,"mediaType"],[176,63,175,61],[176,64,175,62],[177,10,176,8],[178,8,177,6],[178,9,177,7],[178,15,177,13],[178,19,177,17,"typeofMediaTypeConstraints"],[178,45,177,43],[178,50,177,48],[178,58,177,56],[178,60,177,58],[179,10,178,8,"c"],[179,11,178,9],[179,12,178,10,"mediaType"],[179,21,178,19],[179,22,178,20],[179,25,178,23,"normalizeMediaConstraints"],[179,50,178,48],[179,51,178,49,"mediaTypeConstraints"],[179,71,178,69],[179,73,178,71,"mediaType"],[179,82,178,80],[179,83,178,81],[180,8,179,6],[180,9,179,7],[180,15,179,13],[181,10,180,8],[181,16,180,14],[181,20,180,18,"TypeError"],[181,29,180,27],[181,30,180,28],[181,45,180,43,"mediaType"],[181,54,180,52],[181,94,180,92],[181,95,180,93],[182,8,181,6],[183,6,182,4],[184,4,183,2],[185,4,184,2],[185,11,184,9,"c"],[185,12,184,10],[186,2,185,0],[187,0,185,1],[187,3]],"functionMap":{"names":["<global>","getDefaultMediaConstraints","extractString","extractNumber","normalizeMediaConstraints","chr4","uniqueID","deepClone","isSdpTypeValid","normalizeOfferOptions","normalizeConstraints"],"mappings":"AAA;AC0B;CDS;AEC;CFY;AGC;CHY;AIC;CJmC;AKU;CLE;AMO;CNE;AOQ;CPE;AQQ;CRE;ASQ;CTe;AUK;CVkB"}},"type":"js/module"}]}