{"dependencies":[{"name":"event-target-shim/index","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":119},"end":{"line":7,"column":47,"index":153}}],"key":"lAMe6Stmd6W2EsY6ThqwJOtUy+Q=","exportNames":["*"]}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"]}},{"name":"./EventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":20,"index":219},"end":{"line":9,"column":45,"index":244}}],"key":"Fpc6EruamBjjSIs3GH0Tb1A2oLU=","exportNames":["*"]}},{"name":"./Logger","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":37,"index":283},"end":{"line":10,"column":56,"index":302}}],"key":"GgaoAMvcSOWuK+KeK4ZJlNiPYEg=","exportNames":["*"]}},{"name":"./MediaStream","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":42,"index":347},"end":{"line":11,"column":66,"index":371}}],"key":"nZV8max2EFkhaNXETTgeNKilUJk=","exportNames":["*"]}},{"name":"./MediaStreamTrack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":47,"index":421},"end":{"line":12,"column":76,"index":450}}],"key":"o0F23v+3OKyCF3fnMyw+QVl2Ke0=","exportNames":["*"]}},{"name":"./MediaStreamTrackEvent","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":52,"index":505},"end":{"line":13,"column":86,"index":539}}],"key":"KV5B1D4qqWoN1B8REGnjDIsBZBQ=","exportNames":["*"]}},{"name":"./RTCDataChannel","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":45,"index":587},"end":{"line":14,"column":72,"index":614}}],"key":"I9kgzxEGiqa57GHCT7e53iH3V+c=","exportNames":["*"]}},{"name":"./RTCDataChannelEvent","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":50,"index":667},"end":{"line":15,"column":82,"index":699}}],"key":"8bjQBYdichLIoVScytDimma+9mY=","exportNames":["*"]}},{"name":"./RTCIceCandidate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":46,"index":748},"end":{"line":16,"column":74,"index":776}}],"key":"JWkovdKxHlOHlEqQFLOZ91b+7EA=","exportNames":["*"]}},{"name":"./RTCIceCandidateEvent","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":51,"index":830},"end":{"line":17,"column":84,"index":863}}],"key":"IRHCNUaSqzpR/If9rrwq/amVAbs=","exportNames":["*"]}},{"name":"./RTCRtpReceiveParameters","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":54,"index":920},"end":{"line":18,"column":90,"index":956}}],"key":"lLasS1QcY/zUYTXulisylSzTaMA=","exportNames":["*"]}},{"name":"./RTCRtpReceiver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":45,"index":1004},"end":{"line":19,"column":72,"index":1031}}],"key":"e/AEzUWbHeRbRwAdGu18gmbqdvM=","exportNames":["*"]}},{"name":"./RTCRtpSendParameters","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":51,"index":1085},"end":{"line":20,"column":84,"index":1118}}],"key":"DjcDxm3Ya79O/jRM1OApzFmU+Ys=","exportNames":["*"]}},{"name":"./RTCRtpSender","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":43,"index":1164},"end":{"line":21,"column":68,"index":1189}}],"key":"xOpwxMxc/Ebo9IY9jSkY1IS9aIw=","exportNames":["*"]}},{"name":"./RTCRtpTransceiver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":48,"index":1240},"end":{"line":22,"column":78,"index":1270}}],"key":"YIPfNmXBzQ4SF6XPXUoY50dNNCk=","exportNames":["*"]}},{"name":"./RTCSessionDescription","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":52,"index":1325},"end":{"line":23,"column":86,"index":1359}}],"key":"nhWsc3KJBK7jK/qBhxvPZjOFsZM=","exportNames":["*"]}},{"name":"./RTCTrackEvent","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":44,"index":1406},"end":{"line":24,"column":70,"index":1432}}],"key":"sj6YpF5FKHt/id4hPawBdxtXVVw=","exportNames":["*"]}},{"name":"./RTCUtil","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":38,"index":1473},"end":{"line":25,"column":58,"index":1493}}],"key":"Vec4jd22qPLTEFX0oFYI4F3/9lQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _index = require(_dependencyMap[0], \"event-target-shim/index\");\n  var _reactNative = require(_dependencyMap[1], \"react-native-web/dist/index\");\n  var _EventEmitter = require(_dependencyMap[2], \"./EventEmitter\");\n  var _Logger = _interopRequireDefault(require(_dependencyMap[3], \"./Logger\"));\n  var _MediaStream = _interopRequireDefault(require(_dependencyMap[4], \"./MediaStream\"));\n  var _MediaStreamTrack = _interopRequireDefault(require(_dependencyMap[5], \"./MediaStreamTrack\"));\n  var _MediaStreamTrackEvent = _interopRequireDefault(require(_dependencyMap[6], \"./MediaStreamTrackEvent\"));\n  var _RTCDataChannel = _interopRequireDefault(require(_dependencyMap[7], \"./RTCDataChannel\"));\n  var _RTCDataChannelEvent = _interopRequireDefault(require(_dependencyMap[8], \"./RTCDataChannelEvent\"));\n  var _RTCIceCandidate = _interopRequireDefault(require(_dependencyMap[9], \"./RTCIceCandidate\"));\n  var _RTCIceCandidateEvent = _interopRequireDefault(require(_dependencyMap[10], \"./RTCIceCandidateEvent\"));\n  var _RTCRtpReceiveParameters = _interopRequireDefault(require(_dependencyMap[11], \"./RTCRtpReceiveParameters\"));\n  var _RTCRtpReceiver = _interopRequireDefault(require(_dependencyMap[12], \"./RTCRtpReceiver\"));\n  var _RTCRtpSendParameters = _interopRequireDefault(require(_dependencyMap[13], \"./RTCRtpSendParameters\"));\n  var _RTCRtpSender = _interopRequireDefault(require(_dependencyMap[14], \"./RTCRtpSender\"));\n  var _RTCRtpTransceiver = _interopRequireDefault(require(_dependencyMap[15], \"./RTCRtpTransceiver\"));\n  var _RTCSessionDescription = _interopRequireDefault(require(_dependencyMap[16], \"./RTCSessionDescription\"));\n  var _RTCTrackEvent = _interopRequireDefault(require(_dependencyMap[17], \"./RTCTrackEvent\"));\n  var RTCUtil = _interopRequireWildcard(require(_dependencyMap[18], \"./RTCUtil\"));\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function (nodeInterop) {\n      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const log = new _Logger.default('pc');\n  const {\n    WebRTCModule\n  } = _reactNative.NativeModules;\n  let nextPeerConnectionId = 0;\n  class RTCPeerConnection extends _index.EventTarget {\n    constructor(configuration) {\n      super();\n      _defineProperty(this, \"localDescription\", null);\n      _defineProperty(this, \"remoteDescription\", null);\n      _defineProperty(this, \"signalingState\", 'stable');\n      _defineProperty(this, \"iceGatheringState\", 'new');\n      _defineProperty(this, \"connectionState\", 'new');\n      _defineProperty(this, \"iceConnectionState\", 'new');\n      _defineProperty(this, \"_pcId\", void 0);\n      _defineProperty(this, \"_transceivers\", void 0);\n      _defineProperty(this, \"_remoteStreams\", void 0);\n      _defineProperty(this, \"_pendingTrackEvents\", void 0);\n      this._pcId = nextPeerConnectionId++;\n\n      // Sanitize ICE servers.\n      if (configuration) {\n        var _configuration$iceSer;\n        const servers = (_configuration$iceSer = configuration === null || configuration === void 0 ? void 0 : configuration.iceServers) !== null && _configuration$iceSer !== void 0 ? _configuration$iceSer : [];\n        for (const server of servers) {\n          let urls = server.url || server.urls;\n          delete server.url;\n          delete server.urls;\n          if (!urls) {\n            continue;\n          }\n          if (!Array.isArray(urls)) {\n            urls = [urls];\n          }\n\n          // Native WebRTC does case sensitive parsing.\n          server.urls = urls.map(url => url.toLowerCase());\n        }\n\n        // Filter out bogus servers.\n        configuration.iceServers = servers.filter(s => s.urls);\n      }\n      if (!WebRTCModule.peerConnectionInit(configuration, this._pcId)) {\n        throw new Error('Failed to initialize PeerConnection, check the native logs!');\n      }\n      this._transceivers = [];\n      this._remoteStreams = new Map();\n      this._pendingTrackEvents = [];\n      this._registerEvents();\n      log.debug(`${this._pcId} ctor`);\n    }\n    async createOffer(options) {\n      log.debug(`${this._pcId} createOffer`);\n      const {\n        sdpInfo,\n        newTransceivers,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionCreateOffer(this._pcId, RTCUtil.normalizeOfferOptions(options));\n      log.debug(`${this._pcId} createOffer OK`);\n      newTransceivers === null || newTransceivers === void 0 ? void 0 : newTransceivers.forEach(t => {\n        const {\n          transceiverOrder,\n          transceiver\n        } = t;\n        const newSender = new _RTCRtpSender.default({\n          ...transceiver.sender,\n          track: null\n        });\n        const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n        const newReceiver = new _RTCRtpReceiver.default({\n          ...transceiver.receiver,\n          track: remoteTrack\n        });\n        const newTransceiver = new _RTCRtpTransceiver.default({\n          ...transceiver,\n          sender: newSender,\n          receiver: newReceiver\n        });\n        this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      });\n      this._updateTransceivers(transceiversInfo);\n      return sdpInfo;\n    }\n    async createAnswer() {\n      log.debug(`${this._pcId} createAnswer`);\n      const {\n        sdpInfo,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionCreateAnswer(this._pcId, {});\n      this._updateTransceivers(transceiversInfo);\n      return sdpInfo;\n    }\n    setConfiguration(configuration) {\n      WebRTCModule.peerConnectionSetConfiguration(configuration, this._pcId);\n    }\n    async setLocalDescription(sessionDescription) {\n      var _desc;\n      log.debug(`${this._pcId} setLocalDescription`);\n      let desc;\n      if (sessionDescription) {\n        var _sessionDescription$s;\n        desc = {\n          type: sessionDescription.type,\n          sdp: (_sessionDescription$s = sessionDescription.sdp) !== null && _sessionDescription$s !== void 0 ? _sessionDescription$s : ''\n        };\n        if (!RTCUtil.isSdpTypeValid(desc.type)) {\n          throw new Error(`Invalid session description: invalid type: ${desc.type}`);\n        }\n      } else {\n        desc = null;\n      }\n      const {\n        sdpInfo,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionSetLocalDescription(this._pcId, desc);\n      if (sdpInfo.type && sdpInfo.sdp) {\n        this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n      } else {\n        this.localDescription = null;\n      }\n      this._updateTransceivers(transceiversInfo, /* removeStopped */((_desc = desc) === null || _desc === void 0 ? void 0 : _desc.type) === 'answer');\n      log.debug(`${this._pcId} setLocalDescription OK`);\n    }\n    async setRemoteDescription(sessionDescription) {\n      var _sessionDescription$s2, _desc$type;\n      log.debug(`${this._pcId} setRemoteDescription`);\n      if (!sessionDescription) {\n        return Promise.reject(new Error('No session description provided'));\n      }\n      const desc = {\n        type: sessionDescription.type,\n        sdp: (_sessionDescription$s2 = sessionDescription.sdp) !== null && _sessionDescription$s2 !== void 0 ? _sessionDescription$s2 : ''\n      };\n      if (!RTCUtil.isSdpTypeValid((_desc$type = desc.type) !== null && _desc$type !== void 0 ? _desc$type : '')) {\n        throw new Error(`Invalid session description: invalid type: ${desc.type}`);\n      }\n      const {\n        sdpInfo,\n        newTransceivers,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionSetRemoteDescription(this._pcId, desc);\n      if (sdpInfo.type && sdpInfo.sdp) {\n        this.remoteDescription = new _RTCSessionDescription.default(sdpInfo);\n      } else {\n        this.remoteDescription = null;\n      }\n      newTransceivers === null || newTransceivers === void 0 ? void 0 : newTransceivers.forEach(t => {\n        const {\n          transceiverOrder,\n          transceiver\n        } = t;\n        const newSender = new _RTCRtpSender.default({\n          ...transceiver.sender,\n          track: null\n        });\n        const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n        const newReceiver = new _RTCRtpReceiver.default({\n          ...transceiver.receiver,\n          track: remoteTrack\n        });\n        const newTransceiver = new _RTCRtpTransceiver.default({\n          ...transceiver,\n          sender: newSender,\n          receiver: newReceiver\n        });\n        this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      });\n      this._updateTransceivers(transceiversInfo, /* removeStopped */desc.type === 'answer');\n\n      // Fire track events. They must fire before sRD resolves.\n      const pendingTrackEvents = this._pendingTrackEvents;\n      this._pendingTrackEvents = [];\n      for (const ev of pendingTrackEvents) {\n        const [transceiver] = this.getTransceivers().filter(t => t.receiver.id === ev.receiver.id);\n\n        // We need to fire this event for an existing track sometimes, like\n        // when the transceiver direction (on the sending side) switches from\n        // sendrecv to recvonly and then back.\n\n        // @ts-ignore\n        const track = transceiver.receiver.track;\n        transceiver._mid = ev.transceiver.mid;\n        transceiver._currentDirection = ev.transceiver.currentDirection;\n        transceiver._direction = ev.transceiver.direction;\n\n        // Get the stream object from the event. Create if necessary.\n        const streams = ev.streams.map(streamInfo => {\n          // Here we are making sure that we don't create stream objects that already exist\n          // So that event listeners do get the same object if it has been created before.\n          if (!this._remoteStreams.has(streamInfo.streamId)) {\n            const stream = new _MediaStream.default({\n              streamId: streamInfo.streamId,\n              streamReactTag: streamInfo.streamReactTag,\n              tracks: []\n            });\n            this._remoteStreams.set(streamInfo.streamId, stream);\n          }\n          const stream = this._remoteStreams.get(streamInfo.streamId);\n          if (!(stream !== null && stream !== void 0 && stream._tracks.includes(track))) {\n            stream === null || stream === void 0 ? void 0 : stream._tracks.push(track);\n          }\n          return stream;\n        });\n        const eventData = {\n          streams,\n          transceiver,\n          track,\n          receiver: transceiver.receiver\n        };\n        this.dispatchEvent(new _RTCTrackEvent.default('track', eventData));\n        streams.forEach(stream => {\n          stream.dispatchEvent(new _MediaStreamTrackEvent.default('addtrack', {\n            track\n          }));\n        });\n\n        // Dispatch an unmute event for the track.\n        track._setMutedInternal(false);\n      }\n      log.debug(`${this._pcId} setRemoteDescription OK`);\n    }\n    async addIceCandidate(candidate) {\n      log.debug(`${this._pcId} addIceCandidate`);\n      if (!candidate || !candidate.candidate) {\n        // XXX end-of candidates is not implemented: https://bugs.chromium.org/p/webrtc/issues/detail?id=9218\n        return;\n      }\n      if ((candidate.sdpMLineIndex === null || candidate.sdpMLineIndex === undefined) && (candidate.sdpMid === null || candidate.sdpMid === undefined)) {\n        throw new TypeError('`sdpMLineIndex` and `sdpMid` must not be both null or undefined');\n      }\n      const newSdp = await WebRTCModule.peerConnectionAddICECandidate(this._pcId, RTCUtil.deepClone(candidate));\n      this.remoteDescription = new _RTCSessionDescription.default(newSdp);\n    }\n\n    /**\n     * @brief Adds a new track to the {@link RTCPeerConnection},\n     * and indicates that it is contained in the specified {@link MediaStream}s.\n     * This method has to be synchronous as the W3C API expects a track to be returned\n     * @param {MediaStreamTrack} track The track to be added\n     * @param {...MediaStream} streams One or more {@link MediaStream}s the track needs to be added to\n     * https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtrack\n     */\n    addTrack(track) {\n      log.debug(`${this._pcId} addTrack`);\n      if (this.connectionState === 'closed') {\n        throw new Error('Peer Connection is closed');\n      }\n      if (this._trackExists(track)) {\n        throw new Error('Track already exists in a sender');\n      }\n      for (var _len = arguments.length, streams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        streams[_key - 1] = arguments[_key];\n      }\n      const streamIds = streams.map(s => s.id);\n      const result = WebRTCModule.peerConnectionAddTrack(this._pcId, track.id, {\n        streamIds\n      });\n      if (result === null) {\n        throw new Error('Could not add sender');\n      }\n      const {\n        transceiverOrder,\n        transceiver,\n        sender\n      } = result;\n\n      // According to the W3C docs, the sender could have been reused, and\n      // so we check if that is the case, and update accordingly.\n      const [existingSender] = this.getSenders().filter(s => s.id === sender.id);\n      if (existingSender) {\n        // Update sender\n        existingSender._track = track;\n\n        // Update the corresponding transceiver as well\n        const [existingTransceiver] = this.getTransceivers().filter(t => t.sender.id === existingSender.id);\n        existingTransceiver._direction = transceiver.direction;\n        existingTransceiver._currentDirection = transceiver.currentDirection;\n        return existingSender;\n      }\n\n      // This is a new transceiver, should create a transceiver for it and add it\n      const newSender = new _RTCRtpSender.default({\n        ...transceiver.sender,\n        track\n      });\n      const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n      const newReceiver = new _RTCRtpReceiver.default({\n        ...transceiver.receiver,\n        track: remoteTrack\n      });\n      const newTransceiver = new _RTCRtpTransceiver.default({\n        ...transceiver,\n        sender: newSender,\n        receiver: newReceiver\n      });\n      this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      return newSender;\n    }\n    addTransceiver(source, init) {\n      log.debug(`${this._pcId} addTransceiver`);\n      let src = {};\n      if (source === 'audio') {\n        src = {\n          type: 'audio'\n        };\n      } else if (source === 'video') {\n        src = {\n          type: 'video'\n        };\n      } else {\n        src = {\n          trackId: source.id\n        };\n      }\n\n      // Extract the stream ids\n      if (init && init.streams) {\n        init.streamIds = init.streams.map(stream => stream.id);\n      }\n      const result = WebRTCModule.peerConnectionAddTransceiver(this._pcId, {\n        ...src,\n        init: {\n          ...init\n        }\n      });\n      if (result === null) {\n        throw new Error('Transceiver could not be added');\n      }\n      const t = result.transceiver;\n      let track = null;\n      if (typeof source === 'string') {\n        if (t.sender.track) {\n          track = new _MediaStreamTrack.default(t.sender.track);\n        }\n      } else {\n        // 'source' is a MediaStreamTrack\n        track = source;\n      }\n      const sender = new _RTCRtpSender.default({\n        ...t.sender,\n        track\n      });\n      const remoteTrack = t.receiver.track ? new _MediaStreamTrack.default(t.receiver.track) : null;\n      const receiver = new _RTCRtpReceiver.default({\n        ...t.receiver,\n        track: remoteTrack\n      });\n      const transceiver = new _RTCRtpTransceiver.default({\n        ...result.transceiver,\n        sender,\n        receiver\n      });\n      this._insertTransceiverSorted(result.transceiverOrder, transceiver);\n      return transceiver;\n    }\n    removeTrack(sender) {\n      log.debug(`${this._pcId} removeTrack`);\n      if (this._pcId !== sender._peerConnectionId) {\n        throw new Error('Sender does not belong to this peer connection');\n      }\n      if (this.connectionState === 'closed') {\n        throw new Error('Peer Connection is closed');\n      }\n      const existingSender = this.getSenders().find(s => s === sender);\n      if (!existingSender) {\n        throw new Error('Sender does not exist');\n      }\n      if (existingSender.track === null) {\n        return;\n      }\n\n      // Blocking!\n      WebRTCModule.peerConnectionRemoveTrack(this._pcId, sender.id);\n      existingSender._track = null;\n      const [existingTransceiver] = this.getTransceivers().filter(t => t.sender.id === existingSender.id);\n      existingTransceiver._direction = existingTransceiver.direction === 'sendrecv' ? 'recvonly' : 'inactive';\n    }\n    async getStats(selector) {\n      log.debug(`${this._pcId} getStats`);\n      if (!selector) {\n        const data = await WebRTCModule.peerConnectionGetStats(this._pcId);\n\n        /**\n         * On both Android and iOS it is faster to construct a single\n         * JSON string representing the Map of StatsReports and have it\n         * pass through the React Native bridge rather than the Map of\n         * StatsReports. While the implementations do try to be faster in\n         * general, the stress is on being faster to pass through the React\n         * Native bridge which is a bottleneck that tends to be visible in\n         * the UI when there is congestion involving UI-related passing.\n         */\n        return new Map(JSON.parse(data));\n      } else {\n        const senders = this.getSenders().filter(s => s.track === selector);\n        const receivers = this.getReceivers().filter(r => r.track === selector);\n        const matches = senders.length + receivers.length;\n        if (matches === 0) {\n          throw new Error('Invalid selector: could not find matching sender / receiver');\n        } else if (matches > 1) {\n          throw new Error('Invalid selector: multiple matching senders / receivers');\n        } else {\n          const sr = senders[0] || receivers[0];\n          return sr.getStats();\n        }\n      }\n    }\n    getTransceivers() {\n      return this._transceivers.map(e => e.transceiver);\n    }\n    getSenders() {\n      return this._transceivers.filter(e => !e.transceiver.stopped).map(e => e.transceiver.sender);\n    }\n    getReceivers() {\n      return this._transceivers.filter(e => !e.transceiver.stopped).map(e => e.transceiver.receiver);\n    }\n    close() {\n      log.debug(`${this._pcId} close`);\n      if (this.connectionState === 'closed') {\n        return;\n      }\n      WebRTCModule.peerConnectionClose(this._pcId);\n\n      // Mark transceivers as stopped.\n      this._transceivers.forEach(_ref => {\n        let {\n          transceiver\n        } = _ref;\n        transceiver._setStopped();\n      });\n    }\n    restartIce() {\n      WebRTCModule.peerConnectionRestartIce(this._pcId);\n    }\n    _registerEvents() {\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnRenegotiationNeeded', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.dispatchEvent(new _index.Event('negotiationneeded'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionIceConnectionChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.iceConnectionState = ev.iceConnectionState;\n        this.dispatchEvent(new _index.Event('iceconnectionstatechange'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionStateChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.connectionState = ev.connectionState;\n        this.dispatchEvent(new _index.Event('connectionstatechange'));\n        if (ev.connectionState === 'closed') {\n          // This PeerConnection is done, clean up.\n          (0, _EventEmitter.removeListener)(this);\n          WebRTCModule.peerConnectionDispose(this._pcId);\n        }\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionSignalingStateChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.signalingState = ev.signalingState;\n        this.dispatchEvent(new _index.Event('signalingstatechange'));\n      });\n\n      // Consider moving away from this event: https://github.com/WebKit/WebKit/pull/3953\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnTrack', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        log.debug(`${this._pcId} ontrack`);\n\n        // NOTE: We need to make sure the track event fires right before sRD completes,\n        // so we queue them up here and dispatch the events when sRD fires, but before completing it.\n        // In the future we should probably implement out own logic and drop this event altogether.\n        this._pendingTrackEvents.push(ev);\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnRemoveTrack', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        log.debug(`${this._pcId} onremovetrack ${ev.receiverId}`);\n        const receiver = this.getReceivers().find(r => r.id === ev.receiverId);\n        const track = receiver === null || receiver === void 0 ? void 0 : receiver.track;\n        if (receiver && track) {\n          // As per the spec:\n          // - Remove the track from any media streams that were previously passed to the `track` event.\n          // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-removetrack,\n          // - Mark the track as muted:\n          // https://w3c.github.io/webrtc-pc/#process-remote-track-removal\n          for (const stream of this._remoteStreams.values()) {\n            if (stream._tracks.includes(track)) {\n              const trackIdx = stream._tracks.indexOf(track);\n              log.debug(`${this._pcId} removetrack ${track.id}`);\n              stream._tracks.splice(trackIdx, 1);\n              stream.dispatchEvent(new _MediaStreamTrackEvent.default('removetrack', {\n                track\n              }));\n\n              // Dispatch a mute event for the track.\n              track._setMutedInternal(true);\n            }\n          }\n        }\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionGotICECandidate', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const sdpInfo = ev.sdp;\n\n        // Can happen when doing a rollback.\n        if (sdpInfo.type && sdpInfo.sdp) {\n          this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n        } else {\n          this.localDescription = null;\n        }\n        const candidate = new _RTCIceCandidate.default(ev.candidate);\n        this.dispatchEvent(new _RTCIceCandidateEvent.default('icecandidate', {\n          candidate\n        }));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionIceGatheringChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.iceGatheringState = ev.iceGatheringState;\n        if (this.iceGatheringState === 'complete') {\n          const sdpInfo = ev.sdp;\n\n          // Can happen when doing a rollback.\n          if (sdpInfo.type && sdpInfo.sdp) {\n            this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n          } else {\n            this.localDescription = null;\n          }\n          this.dispatchEvent(new _RTCIceCandidateEvent.default('icecandidate', {\n            candidate: null\n          }));\n        }\n        this.dispatchEvent(new _index.Event('icegatheringstatechange'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionDidOpenDataChannel', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const channel = new _RTCDataChannel.default(ev.dataChannel);\n        this.dispatchEvent(new _RTCDataChannelEvent.default('datachannel', {\n          channel\n        }));\n\n        // Send 'open' event. Native doesn't update the state since it's already\n        // set at this point.\n        channel.dispatchEvent(new _RTCDataChannelEvent.default('open', {\n          channel\n        }));\n      });\n      (0, _EventEmitter.addListener)(this, 'mediaStreamTrackMuteChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const [track] = this.getReceivers().map(r => r.track).filter(t => (t === null || t === void 0 ? void 0 : t.id) === ev.trackId);\n        if (track) {\n          track._setMutedInternal(ev.muted);\n        }\n      });\n    }\n\n    /**\n     * Creates a new RTCDataChannel object with the given label. The\n     * RTCDataChannelInit dictionary can be used to configure properties of the\n     * underlying channel such as data reliability.\n     *\n     * @param {string} label - the value with which the label attribute of the new\n     * instance is to be initialized\n     * @param {RTCDataChannelInit} dataChannelDict - an optional dictionary of\n     * values with which to initialize corresponding attributes of the new\n     * instance such as id\n     */\n    createDataChannel(label, dataChannelDict) {\n      if (arguments.length === 0) {\n        throw new TypeError('1 argument required, but 0 present');\n      }\n      if (dataChannelDict && 'id' in dataChannelDict) {\n        const id = dataChannelDict.id;\n        if (typeof id !== 'number') {\n          throw new TypeError('DataChannel id must be a number: ' + id);\n        }\n      }\n      const channelInfo = WebRTCModule.createDataChannel(this._pcId, String(label), dataChannelDict);\n      if (channelInfo === null) {\n        throw new TypeError('Failed to create new DataChannel');\n      }\n      return new _RTCDataChannel.default(channelInfo);\n    }\n\n    /**\n     * Check whether a media stream track exists already in a sender.\n     * See https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtrack for more information\n     */\n    _trackExists(track) {\n      const [sender] = this.getSenders().filter(sender => {\n        var _sender$track;\n        return ((_sender$track = sender.track) === null || _sender$track === void 0 ? void 0 : _sender$track.id) === track.id;\n      });\n      return sender ? true : false;\n    }\n\n    /**\n     * Updates transceivers after offer/answer updates if necessary.\n     */\n    _updateTransceivers(transceiverUpdates) {\n      let removeStopped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      for (const update of transceiverUpdates) {\n        const [transceiver] = this.getTransceivers().filter(t => t.sender.id === update.transceiverId);\n        if (!transceiver) {\n          continue;\n        }\n        if (update.currentDirection) {\n          transceiver._currentDirection = update.currentDirection;\n        }\n        transceiver._mid = update.mid;\n        transceiver._stopped = Boolean(update.isStopped);\n        transceiver._sender._rtpParameters = new _RTCRtpSendParameters.default(update.senderRtpParameters);\n        transceiver._receiver._rtpParameters = new _RTCRtpReceiveParameters.default(update.receiverRtpParameters);\n      }\n      if (removeStopped) {\n        const stopped = this.getTransceivers().filter(t => t.stopped);\n        const newTransceivers = this._transceivers.filter(t => !stopped.includes(t.transceiver));\n        this._transceivers = newTransceivers;\n      }\n    }\n\n    /**\n     * Inserts transceiver into the transceiver array in the order they are created (timestamp).\n     * @param order an index that refers to when it it was created relatively.\n     * @param transceiver the transceiver object to be inserted.\n     */\n    _insertTransceiverSorted(order, transceiver) {\n      this._transceivers.push({\n        order,\n        transceiver\n      });\n      this._transceivers.sort((a, b) => a.order - b.order);\n    }\n  }\n\n  /**\n   * Define the `onxxx` event handlers.\n   */\n  exports.default = RTCPeerConnection;\n  const proto = RTCPeerConnection.prototype;\n  (0, _index.defineEventAttribute)(proto, 'connectionstatechange');\n  (0, _index.defineEventAttribute)(proto, 'icecandidate');\n  (0, _index.defineEventAttribute)(proto, 'icecandidateerror');\n  (0, _index.defineEventAttribute)(proto, 'iceconnectionstatechange');\n  (0, _index.defineEventAttribute)(proto, 'icegatheringstatechange');\n  (0, _index.defineEventAttribute)(proto, 'negotiationneeded');\n  (0, _index.defineEventAttribute)(proto, 'signalingstatechange');\n  (0, _index.defineEventAttribute)(proto, 'datachannel');\n  (0, _index.defineEventAttribute)(proto, 'track');\n  (0, _index.defineEventAttribute)(proto, 'error');\n});","lineCount":748,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[8,6,7,4,"_index"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,67,7,46],[8,68,7,47],[9,2,7,48],[9,6,7,48,"_reactNative"],[9,18,7,48],[9,21,7,48,"require"],[9,28,7,48],[9,29,7,48,"_dependencyMap"],[9,43,7,48],[10,2,9,0],[10,6,9,4,"_EventEmitter"],[10,19,9,17],[10,22,9,20,"require"],[10,29,9,27],[10,30,9,27,"_dependencyMap"],[10,44,9,27],[10,65,9,44],[10,66,9,45],[11,2,10,0],[11,6,10,4,"_Logger"],[11,13,10,11],[11,16,10,14,"_interopRequireDefault"],[11,38,10,36],[11,39,10,37,"require"],[11,46,10,44],[11,47,10,44,"_dependencyMap"],[11,61,10,44],[11,76,10,55],[11,77,10,56],[11,78,10,57],[12,2,11,0],[12,6,11,4,"_MediaStream"],[12,18,11,16],[12,21,11,19,"_interopRequireDefault"],[12,43,11,41],[12,44,11,42,"require"],[12,51,11,49],[12,52,11,49,"_dependencyMap"],[12,66,11,49],[12,86,11,65],[12,87,11,66],[12,88,11,67],[13,2,12,0],[13,6,12,4,"_MediaStreamTrack"],[13,23,12,21],[13,26,12,24,"_interopRequireDefault"],[13,48,12,46],[13,49,12,47,"require"],[13,56,12,54],[13,57,12,54,"_dependencyMap"],[13,71,12,54],[13,96,12,75],[13,97,12,76],[13,98,12,77],[14,2,13,0],[14,6,13,4,"_MediaStreamTrackEvent"],[14,28,13,26],[14,31,13,29,"_interopRequireDefault"],[14,53,13,51],[14,54,13,52,"require"],[14,61,13,59],[14,62,13,59,"_dependencyMap"],[14,76,13,59],[14,106,13,85],[14,107,13,86],[14,108,13,87],[15,2,14,0],[15,6,14,4,"_RTCDataChannel"],[15,21,14,19],[15,24,14,22,"_interopRequireDefault"],[15,46,14,44],[15,47,14,45,"require"],[15,54,14,52],[15,55,14,52,"_dependencyMap"],[15,69,14,52],[15,92,14,71],[15,93,14,72],[15,94,14,73],[16,2,15,0],[16,6,15,4,"_RTCDataChannelEvent"],[16,26,15,24],[16,29,15,27,"_interopRequireDefault"],[16,51,15,49],[16,52,15,50,"require"],[16,59,15,57],[16,60,15,57,"_dependencyMap"],[16,74,15,57],[16,102,15,81],[16,103,15,82],[16,104,15,83],[17,2,16,0],[17,6,16,4,"_RTCIceCandidate"],[17,22,16,20],[17,25,16,23,"_interopRequireDefault"],[17,47,16,45],[17,48,16,46,"require"],[17,55,16,53],[17,56,16,53,"_dependencyMap"],[17,70,16,53],[17,94,16,73],[17,95,16,74],[17,96,16,75],[18,2,17,0],[18,6,17,4,"_RTCIceCandidateEvent"],[18,27,17,25],[18,30,17,28,"_interopRequireDefault"],[18,52,17,50],[18,53,17,51,"require"],[18,60,17,58],[18,61,17,58,"_dependencyMap"],[18,75,17,58],[18,105,17,83],[18,106,17,84],[18,107,17,85],[19,2,18,0],[19,6,18,4,"_RTCRtpReceiveParameters"],[19,30,18,28],[19,33,18,31,"_interopRequireDefault"],[19,55,18,53],[19,56,18,54,"require"],[19,63,18,61],[19,64,18,61,"_dependencyMap"],[19,78,18,61],[19,111,18,89],[19,112,18,90],[19,113,18,91],[20,2,19,0],[20,6,19,4,"_RTCRtpReceiver"],[20,21,19,19],[20,24,19,22,"_interopRequireDefault"],[20,46,19,44],[20,47,19,45,"require"],[20,54,19,52],[20,55,19,52,"_dependencyMap"],[20,69,19,52],[20,93,19,71],[20,94,19,72],[20,95,19,73],[21,2,20,0],[21,6,20,4,"_RTCRtpSendParameters"],[21,27,20,25],[21,30,20,28,"_interopRequireDefault"],[21,52,20,50],[21,53,20,51,"require"],[21,60,20,58],[21,61,20,58,"_dependencyMap"],[21,75,20,58],[21,105,20,83],[21,106,20,84],[21,107,20,85],[22,2,21,0],[22,6,21,4,"_RTCRtpSender"],[22,19,21,17],[22,22,21,20,"_interopRequireDefault"],[22,44,21,42],[22,45,21,43,"require"],[22,52,21,50],[22,53,21,50,"_dependencyMap"],[22,67,21,50],[22,89,21,67],[22,90,21,68],[22,91,21,69],[23,2,22,0],[23,6,22,4,"_RTCRtpTransceiver"],[23,24,22,22],[23,27,22,25,"_interopRequireDefault"],[23,49,22,47],[23,50,22,48,"require"],[23,57,22,55],[23,58,22,55,"_dependencyMap"],[23,72,22,55],[23,99,22,77],[23,100,22,78],[23,101,22,79],[24,2,23,0],[24,6,23,4,"_RTCSessionDescription"],[24,28,23,26],[24,31,23,29,"_interopRequireDefault"],[24,53,23,51],[24,54,23,52,"require"],[24,61,23,59],[24,62,23,59,"_dependencyMap"],[24,76,23,59],[24,107,23,85],[24,108,23,86],[24,109,23,87],[25,2,24,0],[25,6,24,4,"_RTCTrackEvent"],[25,20,24,18],[25,23,24,21,"_interopRequireDefault"],[25,45,24,43],[25,46,24,44,"require"],[25,53,24,51],[25,54,24,51,"_dependencyMap"],[25,68,24,51],[25,91,24,69],[25,92,24,70],[25,93,24,71],[26,2,25,0],[26,6,25,4,"RTCUtil"],[26,13,25,11],[26,16,25,14,"_interopRequireWildcard"],[26,39,25,37],[26,40,25,38,"require"],[26,47,25,45],[26,48,25,45,"_dependencyMap"],[26,62,25,45],[26,79,25,57],[26,80,25,58],[26,81,25,59],[27,2,26,0],[27,11,26,9,"_getRequireWildcardCache"],[27,35,26,33,"_getRequireWildcardCache"],[27,36,26,34,"nodeInterop"],[27,47,26,45],[27,49,26,47],[28,4,26,49],[28,8,26,53],[28,15,26,60,"WeakMap"],[28,22,26,67],[28,27,26,72],[28,37,26,82],[28,39,26,84],[28,46,26,91],[28,50,26,95],[29,4,26,97],[29,8,26,101,"cacheBabelInterop"],[29,25,26,118],[29,28,26,121],[29,32,26,125,"WeakMap"],[29,39,26,132],[29,40,26,133],[29,41,26,134],[30,4,26,136],[30,8,26,140,"cacheNodeInterop"],[30,24,26,156],[30,27,26,159],[30,31,26,163,"WeakMap"],[30,38,26,170],[30,39,26,171],[30,40,26,172],[31,4,26,174],[31,11,26,181],[31,12,26,182,"_getRequireWildcardCache"],[31,36,26,206],[31,39,26,209],[31,48,26,209,"_getRequireWildcardCache"],[31,49,26,219,"nodeInterop"],[31,60,26,230],[31,62,26,232],[32,6,26,234],[32,13,26,241,"nodeInterop"],[32,24,26,252],[32,27,26,255,"cacheNodeInterop"],[32,43,26,271],[32,46,26,274,"cacheBabelInterop"],[32,63,26,291],[33,4,26,293],[33,5,26,294],[33,7,26,296,"nodeInterop"],[33,18,26,307],[33,19,26,308],[34,2,26,310],[35,2,27,0],[35,11,27,9,"_interopRequireWildcard"],[35,34,27,32,"_interopRequireWildcard"],[35,35,27,33,"obj"],[35,38,27,36],[35,40,27,38,"nodeInterop"],[35,51,27,49],[35,53,27,51],[36,4,27,53],[36,8,27,57],[36,9,27,58,"nodeInterop"],[36,20,27,69],[36,24,27,73,"obj"],[36,27,27,76],[36,31,27,80,"obj"],[36,34,27,83],[36,35,27,84,"__esModule"],[36,45,27,94],[36,47,27,96],[37,6,27,98],[37,13,27,105,"obj"],[37,16,27,108],[38,4,27,110],[39,4,27,112],[39,8,27,116,"obj"],[39,11,27,119],[39,16,27,124],[39,20,27,128],[39,24,27,132],[39,31,27,139,"obj"],[39,34,27,142],[39,39,27,147],[39,47,27,155],[39,51,27,159],[39,58,27,166,"obj"],[39,61,27,169],[39,66,27,174],[39,76,27,184],[39,78,27,186],[40,6,27,188],[40,13,27,195],[41,8,27,197,"default"],[41,15,27,204],[41,17,27,206,"obj"],[42,6,27,210],[42,7,27,211],[43,4,27,213],[44,4,27,215],[44,8,27,219,"cache"],[44,13,27,224],[44,16,27,227,"_getRequireWildcardCache"],[44,40,27,251],[44,41,27,252,"nodeInterop"],[44,52,27,263],[44,53,27,264],[45,4,27,266],[45,8,27,270,"cache"],[45,13,27,275],[45,17,27,279,"cache"],[45,22,27,284],[45,23,27,285,"has"],[45,26,27,288],[45,27,27,289,"obj"],[45,30,27,292],[45,31,27,293],[45,33,27,295],[46,6,27,297],[46,13,27,304,"cache"],[46,18,27,309],[46,19,27,310,"get"],[46,22,27,313],[46,23,27,314,"obj"],[46,26,27,317],[46,27,27,318],[47,4,27,320],[48,4,27,322],[48,8,27,326,"newObj"],[48,14,27,332],[48,17,27,335],[48,18,27,336],[48,19,27,337],[49,4,27,339],[49,8,27,343,"hasPropertyDescriptor"],[49,29,27,364],[49,32,27,367,"Object"],[49,38,27,373],[49,39,27,374,"defineProperty"],[49,53,27,388],[49,57,27,392,"Object"],[49,63,27,398],[49,64,27,399,"getOwnPropertyDescriptor"],[49,88,27,423],[50,4,27,425],[50,9,27,430],[50,13,27,434,"key"],[50,16,27,437],[50,20,27,441,"obj"],[50,23,27,444],[50,25,27,446],[51,6,27,448],[51,10,27,452,"key"],[51,13,27,455],[51,18,27,460],[51,27,27,469],[51,31,27,473,"Object"],[51,37,27,479],[51,38,27,480,"prototype"],[51,47,27,489],[51,48,27,490,"hasOwnProperty"],[51,62,27,504],[51,63,27,505,"call"],[51,67,27,509],[51,68,27,510,"obj"],[51,71,27,513],[51,73,27,515,"key"],[51,76,27,518],[51,77,27,519],[51,79,27,521],[52,8,27,523],[52,12,27,527,"desc"],[52,16,27,531],[52,19,27,534,"hasPropertyDescriptor"],[52,40,27,555],[52,43,27,558,"Object"],[52,49,27,564],[52,50,27,565,"getOwnPropertyDescriptor"],[52,74,27,589],[52,75,27,590,"obj"],[52,78,27,593],[52,80,27,595,"key"],[52,83,27,598],[52,84,27,599],[52,87,27,602],[52,91,27,606],[53,8,27,608],[53,12,27,612,"desc"],[53,16,27,616],[53,21,27,621,"desc"],[53,25,27,625],[53,26,27,626,"get"],[53,29,27,629],[53,33,27,633,"desc"],[53,37,27,637],[53,38,27,638,"set"],[53,41,27,641],[53,42,27,642],[53,44,27,644],[54,10,27,646,"Object"],[54,16,27,652],[54,17,27,653,"defineProperty"],[54,31,27,667],[54,32,27,668,"newObj"],[54,38,27,674],[54,40,27,676,"key"],[54,43,27,679],[54,45,27,681,"desc"],[54,49,27,685],[54,50,27,686],[55,8,27,688],[55,9,27,689],[55,15,27,695],[56,10,27,697,"newObj"],[56,16,27,703],[56,17,27,704,"key"],[56,20,27,707],[56,21,27,708],[56,24,27,711,"obj"],[56,27,27,714],[56,28,27,715,"key"],[56,31,27,718],[56,32,27,719],[57,8,27,721],[58,6,27,723],[59,4,27,725],[60,4,27,727,"newObj"],[60,10,27,733],[60,11,27,734,"default"],[60,18,27,741],[60,21,27,744,"obj"],[60,24,27,747],[61,4,27,749],[61,8,27,753,"cache"],[61,13,27,758],[61,15,27,760],[62,6,27,762,"cache"],[62,11,27,767],[62,12,27,768,"set"],[62,15,27,771],[62,16,27,772,"obj"],[62,19,27,775],[62,21,27,777,"newObj"],[62,27,27,783],[62,28,27,784],[63,4,27,786],[64,4,27,788],[64,11,27,795,"newObj"],[64,17,27,801],[65,2,27,803],[66,2,28,0],[66,11,28,9,"_interopRequireDefault"],[66,33,28,31,"_interopRequireDefault"],[66,34,28,32,"obj"],[66,37,28,35],[66,39,28,37],[67,4,28,39],[67,11,28,46,"obj"],[67,14,28,49],[67,18,28,53,"obj"],[67,21,28,56],[67,22,28,57,"__esModule"],[67,32,28,67],[67,35,28,70,"obj"],[67,38,28,73],[67,41,28,76],[68,6,28,78,"default"],[68,13,28,85],[68,15,28,87,"obj"],[69,4,28,91],[69,5,28,92],[70,2,28,94],[71,2,29,0],[71,11,29,9,"_defineProperty"],[71,26,29,24,"_defineProperty"],[71,27,29,25,"obj"],[71,30,29,28],[71,32,29,30,"key"],[71,35,29,33],[71,37,29,35,"value"],[71,42,29,40],[71,44,29,42],[72,4,29,44],[72,8,29,48,"key"],[72,11,29,51],[72,15,29,55,"obj"],[72,18,29,58],[72,20,29,60],[73,6,29,62,"Object"],[73,12,29,68],[73,13,29,69,"defineProperty"],[73,27,29,83],[73,28,29,84,"obj"],[73,31,29,87],[73,33,29,89,"key"],[73,36,29,92],[73,38,29,94],[74,8,29,96,"value"],[74,13,29,101],[74,15,29,103,"value"],[74,20,29,108],[75,8,29,110,"enumerable"],[75,18,29,120],[75,20,29,122],[75,24,29,126],[76,8,29,128,"configurable"],[76,20,29,140],[76,22,29,142],[76,26,29,146],[77,8,29,148,"writable"],[77,16,29,156],[77,18,29,158],[78,6,29,163],[78,7,29,164],[78,8,29,165],[79,4,29,167],[79,5,29,168],[79,11,29,174],[80,6,29,176,"obj"],[80,9,29,179],[80,10,29,180,"key"],[80,13,29,183],[80,14,29,184],[80,17,29,187,"value"],[80,22,29,192],[81,4,29,194],[82,4,29,196],[82,11,29,203,"obj"],[82,14,29,206],[83,2,29,208],[84,2,30,0],[84,8,30,6,"log"],[84,11,30,9],[84,14,30,12],[84,18,30,16,"_Logger"],[84,25,30,23],[84,26,30,24,"default"],[84,33,30,31],[84,34,30,32],[84,38,30,36],[84,39,30,37],[85,2,31,0],[85,8,31,6],[86,4,32,2,"WebRTCModule"],[87,2,33,0],[87,3,33,1],[87,6,33,4,"_reactNative"],[87,18,33,16],[87,19,33,17,"NativeModules"],[87,32,33,30],[88,2,34,0],[88,6,34,4,"nextPeerConnectionId"],[88,26,34,24],[88,29,34,27],[88,30,34,28],[89,2,35,0],[89,8,35,6,"RTCPeerConnection"],[89,25,35,23],[89,34,35,32,"_index"],[89,40,35,38],[89,41,35,39,"EventTarget"],[89,52,35,50],[89,53,35,51],[90,4,36,2,"constructor"],[90,15,36,13,"constructor"],[90,16,36,14,"configuration"],[90,29,36,27],[90,31,36,29],[91,6,37,4],[91,11,37,9],[91,12,37,10],[91,13,37,11],[92,6,38,4,"_defineProperty"],[92,21,38,19],[92,22,38,20],[92,26,38,24],[92,28,38,26],[92,46,38,44],[92,48,38,46],[92,52,38,50],[92,53,38,51],[93,6,39,4,"_defineProperty"],[93,21,39,19],[93,22,39,20],[93,26,39,24],[93,28,39,26],[93,47,39,45],[93,49,39,47],[93,53,39,51],[93,54,39,52],[94,6,40,4,"_defineProperty"],[94,21,40,19],[94,22,40,20],[94,26,40,24],[94,28,40,26],[94,44,40,42],[94,46,40,44],[94,54,40,52],[94,55,40,53],[95,6,41,4,"_defineProperty"],[95,21,41,19],[95,22,41,20],[95,26,41,24],[95,28,41,26],[95,47,41,45],[95,49,41,47],[95,54,41,52],[95,55,41,53],[96,6,42,4,"_defineProperty"],[96,21,42,19],[96,22,42,20],[96,26,42,24],[96,28,42,26],[96,45,42,43],[96,47,42,45],[96,52,42,50],[96,53,42,51],[97,6,43,4,"_defineProperty"],[97,21,43,19],[97,22,43,20],[97,26,43,24],[97,28,43,26],[97,48,43,46],[97,50,43,48],[97,55,43,53],[97,56,43,54],[98,6,44,4,"_defineProperty"],[98,21,44,19],[98,22,44,20],[98,26,44,24],[98,28,44,26],[98,35,44,33],[98,37,44,35],[98,42,44,40],[98,43,44,41],[98,44,44,42],[99,6,45,4,"_defineProperty"],[99,21,45,19],[99,22,45,20],[99,26,45,24],[99,28,45,26],[99,43,45,41],[99,45,45,43],[99,50,45,48],[99,51,45,49],[99,52,45,50],[100,6,46,4,"_defineProperty"],[100,21,46,19],[100,22,46,20],[100,26,46,24],[100,28,46,26],[100,44,46,42],[100,46,46,44],[100,51,46,49],[100,52,46,50],[100,53,46,51],[101,6,47,4,"_defineProperty"],[101,21,47,19],[101,22,47,20],[101,26,47,24],[101,28,47,26],[101,49,47,47],[101,51,47,49],[101,56,47,54],[101,57,47,55],[101,58,47,56],[102,6,48,4],[102,10,48,8],[102,11,48,9,"_pcId"],[102,16,48,14],[102,19,48,17,"nextPeerConnectionId"],[102,39,48,37],[102,41,48,39],[104,6,50,4],[105,6,51,4],[105,10,51,8,"configuration"],[105,23,51,21],[105,25,51,23],[106,8,52,6],[106,12,52,10,"_configuration$iceSer"],[106,33,52,31],[107,8,53,6],[107,14,53,12,"servers"],[107,21,53,19],[107,24,53,22],[107,25,53,23,"_configuration$iceSer"],[107,46,53,44],[107,49,53,47,"configuration"],[107,62,53,60],[107,67,53,65],[107,71,53,69],[107,75,53,73,"configuration"],[107,88,53,86],[107,93,53,91],[107,98,53,96],[107,99,53,97],[107,102,53,100],[107,107,53,105],[107,108,53,106],[107,111,53,109,"configuration"],[107,124,53,122],[107,125,53,123,"iceServers"],[107,135,53,133],[107,141,53,139],[107,145,53,143],[107,149,53,147,"_configuration$iceSer"],[107,170,53,168],[107,175,53,173],[107,180,53,178],[107,181,53,179],[107,184,53,182,"_configuration$iceSer"],[107,205,53,203],[107,208,53,206],[107,210,53,208],[108,8,54,6],[108,13,54,11],[108,19,54,17,"server"],[108,25,54,23],[108,29,54,27,"servers"],[108,36,54,34],[108,38,54,36],[109,10,55,8],[109,14,55,12,"urls"],[109,18,55,16],[109,21,55,19,"server"],[109,27,55,25],[109,28,55,26,"url"],[109,31,55,29],[109,35,55,33,"server"],[109,41,55,39],[109,42,55,40,"urls"],[109,46,55,44],[110,10,56,8],[110,17,56,15,"server"],[110,23,56,21],[110,24,56,22,"url"],[110,27,56,25],[111,10,57,8],[111,17,57,15,"server"],[111,23,57,21],[111,24,57,22,"urls"],[111,28,57,26],[112,10,58,8],[112,14,58,12],[112,15,58,13,"urls"],[112,19,58,17],[112,21,58,19],[113,12,59,10],[114,10,60,8],[115,10,61,8],[115,14,61,12],[115,15,61,13,"Array"],[115,20,61,18],[115,21,61,19,"isArray"],[115,28,61,26],[115,29,61,27,"urls"],[115,33,61,31],[115,34,61,32],[115,36,61,34],[116,12,62,10,"urls"],[116,16,62,14],[116,19,62,17],[116,20,62,18,"urls"],[116,24,62,22],[116,25,62,23],[117,10,63,8],[119,10,65,8],[120,10,66,8,"server"],[120,16,66,14],[120,17,66,15,"urls"],[120,21,66,19],[120,24,66,22,"urls"],[120,28,66,26],[120,29,66,27,"map"],[120,32,66,30],[120,33,66,31,"url"],[120,36,66,34],[120,40,66,38,"url"],[120,43,66,41],[120,44,66,42,"toLowerCase"],[120,55,66,53],[120,56,66,54],[120,57,66,55],[120,58,66,56],[121,8,67,6],[123,8,69,6],[124,8,70,6,"configuration"],[124,21,70,19],[124,22,70,20,"iceServers"],[124,32,70,30],[124,35,70,33,"servers"],[124,42,70,40],[124,43,70,41,"filter"],[124,49,70,47],[124,50,70,48,"s"],[124,51,70,49],[124,55,70,53,"s"],[124,56,70,54],[124,57,70,55,"urls"],[124,61,70,59],[124,62,70,60],[125,6,71,4],[126,6,72,4],[126,10,72,8],[126,11,72,9,"WebRTCModule"],[126,23,72,21],[126,24,72,22,"peerConnectionInit"],[126,42,72,40],[126,43,72,41,"configuration"],[126,56,72,54],[126,58,72,56],[126,62,72,60],[126,63,72,61,"_pcId"],[126,68,72,66],[126,69,72,67],[126,71,72,69],[127,8,73,6],[127,14,73,12],[127,18,73,16,"Error"],[127,23,73,21],[127,24,73,22],[127,85,73,83],[127,86,73,84],[128,6,74,4],[129,6,75,4],[129,10,75,8],[129,11,75,9,"_transceivers"],[129,24,75,22],[129,27,75,25],[129,29,75,27],[130,6,76,4],[130,10,76,8],[130,11,76,9,"_remoteStreams"],[130,25,76,23],[130,28,76,26],[130,32,76,30,"Map"],[130,35,76,33],[130,36,76,34],[130,37,76,35],[131,6,77,4],[131,10,77,8],[131,11,77,9,"_pendingTrackEvents"],[131,30,77,28],[131,33,77,31],[131,35,77,33],[132,6,78,4],[132,10,78,8],[132,11,78,9,"_registerEvents"],[132,26,78,24],[132,27,78,25],[132,28,78,26],[133,6,79,4,"log"],[133,9,79,7],[133,10,79,8,"debug"],[133,15,79,13],[133,16,79,14],[133,19,79,17],[133,23,79,21],[133,24,79,22,"_pcId"],[133,29,79,27],[133,36,79,34],[133,37,79,35],[134,4,80,2],[135,4,81,2],[135,10,81,8,"createOffer"],[135,21,81,19,"createOffer"],[135,22,81,20,"options"],[135,29,81,27],[135,31,81,29],[136,6,82,4,"log"],[136,9,82,7],[136,10,82,8,"debug"],[136,15,82,13],[136,16,82,14],[136,19,82,17],[136,23,82,21],[136,24,82,22,"_pcId"],[136,29,82,27],[136,43,82,41],[136,44,82,42],[137,6,83,4],[137,12,83,10],[138,8,84,6,"sdpInfo"],[138,15,84,13],[139,8,85,6,"newTransceivers"],[139,23,85,21],[140,8,86,6,"transceiversInfo"],[141,6,87,4],[141,7,87,5],[141,10,87,8],[141,16,87,14,"WebRTCModule"],[141,28,87,26],[141,29,87,27,"peerConnectionCreateOffer"],[141,54,87,52],[141,55,87,53],[141,59,87,57],[141,60,87,58,"_pcId"],[141,65,87,63],[141,67,87,65,"RTCUtil"],[141,74,87,72],[141,75,87,73,"normalizeOfferOptions"],[141,96,87,94],[141,97,87,95,"options"],[141,104,87,102],[141,105,87,103],[141,106,87,104],[142,6,88,4,"log"],[142,9,88,7],[142,10,88,8,"debug"],[142,15,88,13],[142,16,88,14],[142,19,88,17],[142,23,88,21],[142,24,88,22,"_pcId"],[142,29,88,27],[142,46,88,44],[142,47,88,45],[143,6,89,4,"newTransceivers"],[143,21,89,19],[143,26,89,24],[143,30,89,28],[143,34,89,32,"newTransceivers"],[143,49,89,47],[143,54,89,52],[143,59,89,57],[143,60,89,58],[143,63,89,61],[143,68,89,66],[143,69,89,67],[143,72,89,70,"newTransceivers"],[143,87,89,85],[143,88,89,86,"forEach"],[143,95,89,93],[143,96,89,94,"t"],[143,97,89,95],[143,101,89,99],[144,8,90,6],[144,14,90,12],[145,10,91,8,"transceiverOrder"],[145,26,91,24],[146,10,92,8,"transceiver"],[147,8,93,6],[147,9,93,7],[147,12,93,10,"t"],[147,13,93,11],[148,8,94,6],[148,14,94,12,"newSender"],[148,23,94,21],[148,26,94,24],[148,30,94,28,"_RTCRtpSender"],[148,43,94,41],[148,44,94,42,"default"],[148,51,94,49],[148,52,94,50],[149,10,95,8],[149,13,95,11,"transceiver"],[149,24,95,22],[149,25,95,23,"sender"],[149,31,95,29],[150,10,96,8,"track"],[150,15,96,13],[150,17,96,15],[151,8,97,6],[151,9,97,7],[151,10,97,8],[152,8,98,6],[152,14,98,12,"remoteTrack"],[152,25,98,23],[152,28,98,26,"transceiver"],[152,39,98,37],[152,40,98,38,"receiver"],[152,48,98,46],[152,49,98,47,"track"],[152,54,98,52],[152,57,98,55],[152,61,98,59,"_MediaStreamTrack"],[152,78,98,76],[152,79,98,77,"default"],[152,86,98,84],[152,87,98,85,"transceiver"],[152,98,98,96],[152,99,98,97,"receiver"],[152,107,98,105],[152,108,98,106,"track"],[152,113,98,111],[152,114,98,112],[152,117,98,115],[152,121,98,119],[153,8,99,6],[153,14,99,12,"newReceiver"],[153,25,99,23],[153,28,99,26],[153,32,99,30,"_RTCRtpReceiver"],[153,47,99,45],[153,48,99,46,"default"],[153,55,99,53],[153,56,99,54],[154,10,100,8],[154,13,100,11,"transceiver"],[154,24,100,22],[154,25,100,23,"receiver"],[154,33,100,31],[155,10,101,8,"track"],[155,15,101,13],[155,17,101,15,"remoteTrack"],[156,8,102,6],[156,9,102,7],[156,10,102,8],[157,8,103,6],[157,14,103,12,"newTransceiver"],[157,28,103,26],[157,31,103,29],[157,35,103,33,"_RTCRtpTransceiver"],[157,53,103,51],[157,54,103,52,"default"],[157,61,103,59],[157,62,103,60],[158,10,104,8],[158,13,104,11,"transceiver"],[158,24,104,22],[159,10,105,8,"sender"],[159,16,105,14],[159,18,105,16,"newSender"],[159,27,105,25],[160,10,106,8,"receiver"],[160,18,106,16],[160,20,106,18,"newReceiver"],[161,8,107,6],[161,9,107,7],[161,10,107,8],[162,8,108,6],[162,12,108,10],[162,13,108,11,"_insertTransceiverSorted"],[162,37,108,35],[162,38,108,36,"transceiverOrder"],[162,54,108,52],[162,56,108,54,"newTransceiver"],[162,70,108,68],[162,71,108,69],[163,6,109,4],[163,7,109,5],[163,8,109,6],[164,6,110,4],[164,10,110,8],[164,11,110,9,"_updateTransceivers"],[164,30,110,28],[164,31,110,29,"transceiversInfo"],[164,47,110,45],[164,48,110,46],[165,6,111,4],[165,13,111,11,"sdpInfo"],[165,20,111,18],[166,4,112,2],[167,4,113,2],[167,10,113,8,"createAnswer"],[167,22,113,20,"createAnswer"],[167,23,113,20],[167,25,113,23],[168,6,114,4,"log"],[168,9,114,7],[168,10,114,8,"debug"],[168,15,114,13],[168,16,114,14],[168,19,114,17],[168,23,114,21],[168,24,114,22,"_pcId"],[168,29,114,27],[168,44,114,42],[168,45,114,43],[169,6,115,4],[169,12,115,10],[170,8,116,6,"sdpInfo"],[170,15,116,13],[171,8,117,6,"transceiversInfo"],[172,6,118,4],[172,7,118,5],[172,10,118,8],[172,16,118,14,"WebRTCModule"],[172,28,118,26],[172,29,118,27,"peerConnectionCreateAnswer"],[172,55,118,53],[172,56,118,54],[172,60,118,58],[172,61,118,59,"_pcId"],[172,66,118,64],[172,68,118,66],[172,69,118,67],[172,70,118,68],[172,71,118,69],[173,6,119,4],[173,10,119,8],[173,11,119,9,"_updateTransceivers"],[173,30,119,28],[173,31,119,29,"transceiversInfo"],[173,47,119,45],[173,48,119,46],[174,6,120,4],[174,13,120,11,"sdpInfo"],[174,20,120,18],[175,4,121,2],[176,4,122,2,"setConfiguration"],[176,20,122,18,"setConfiguration"],[176,21,122,19,"configuration"],[176,34,122,32],[176,36,122,34],[177,6,123,4,"WebRTCModule"],[177,18,123,16],[177,19,123,17,"peerConnectionSetConfiguration"],[177,49,123,47],[177,50,123,48,"configuration"],[177,63,123,61],[177,65,123,63],[177,69,123,67],[177,70,123,68,"_pcId"],[177,75,123,73],[177,76,123,74],[178,4,124,2],[179,4,125,2],[179,10,125,8,"setLocalDescription"],[179,29,125,27,"setLocalDescription"],[179,30,125,28,"sessionDescription"],[179,48,125,46],[179,50,125,48],[180,6,126,4],[180,10,126,8,"_desc"],[180,15,126,13],[181,6,127,4,"log"],[181,9,127,7],[181,10,127,8,"debug"],[181,15,127,13],[181,16,127,14],[181,19,127,17],[181,23,127,21],[181,24,127,22,"_pcId"],[181,29,127,27],[181,51,127,49],[181,52,127,50],[182,6,128,4],[182,10,128,8,"desc"],[182,14,128,12],[183,6,129,4],[183,10,129,8,"sessionDescription"],[183,28,129,26],[183,30,129,28],[184,8,130,6],[184,12,130,10,"_sessionDescription$s"],[184,33,130,31],[185,8,131,6,"desc"],[185,12,131,10],[185,15,131,13],[186,10,132,8,"type"],[186,14,132,12],[186,16,132,14,"sessionDescription"],[186,34,132,32],[186,35,132,33,"type"],[186,39,132,37],[187,10,133,8,"sdp"],[187,13,133,11],[187,15,133,13],[187,16,133,14,"_sessionDescription$s"],[187,37,133,35],[187,40,133,38,"sessionDescription"],[187,58,133,56],[187,59,133,57,"sdp"],[187,62,133,60],[187,68,133,66],[187,72,133,70],[187,76,133,74,"_sessionDescription$s"],[187,97,133,95],[187,102,133,100],[187,107,133,105],[187,108,133,106],[187,111,133,109,"_sessionDescription$s"],[187,132,133,130],[187,135,133,133],[188,8,134,6],[188,9,134,7],[189,8,135,6],[189,12,135,10],[189,13,135,11,"RTCUtil"],[189,20,135,18],[189,21,135,19,"isSdpTypeValid"],[189,35,135,33],[189,36,135,34,"desc"],[189,40,135,38],[189,41,135,39,"type"],[189,45,135,43],[189,46,135,44],[189,48,135,46],[190,10,136,8],[190,16,136,14],[190,20,136,18,"Error"],[190,25,136,23],[190,26,136,24],[190,72,136,70,"desc"],[190,76,136,74],[190,77,136,75,"type"],[190,81,136,79],[190,83,136,81],[190,84,136,82],[191,8,137,6],[192,6,138,4],[192,7,138,5],[192,13,138,11],[193,8,139,6,"desc"],[193,12,139,10],[193,15,139,13],[193,19,139,17],[194,6,140,4],[195,6,141,4],[195,12,141,10],[196,8,142,6,"sdpInfo"],[196,15,142,13],[197,8,143,6,"transceiversInfo"],[198,6,144,4],[198,7,144,5],[198,10,144,8],[198,16,144,14,"WebRTCModule"],[198,28,144,26],[198,29,144,27,"peerConnectionSetLocalDescription"],[198,62,144,60],[198,63,144,61],[198,67,144,65],[198,68,144,66,"_pcId"],[198,73,144,71],[198,75,144,73,"desc"],[198,79,144,77],[198,80,144,78],[199,6,145,4],[199,10,145,8,"sdpInfo"],[199,17,145,15],[199,18,145,16,"type"],[199,22,145,20],[199,26,145,24,"sdpInfo"],[199,33,145,31],[199,34,145,32,"sdp"],[199,37,145,35],[199,39,145,37],[200,8,146,6],[200,12,146,10],[200,13,146,11,"localDescription"],[200,29,146,27],[200,32,146,30],[200,36,146,34,"_RTCSessionDescription"],[200,58,146,56],[200,59,146,57,"default"],[200,66,146,64],[200,67,146,65,"sdpInfo"],[200,74,146,72],[200,75,146,73],[201,6,147,4],[201,7,147,5],[201,13,147,11],[202,8,148,6],[202,12,148,10],[202,13,148,11,"localDescription"],[202,29,148,27],[202,32,148,30],[202,36,148,34],[203,6,149,4],[204,6,150,4],[204,10,150,8],[204,11,150,9,"_updateTransceivers"],[204,30,150,28],[204,31,150,29,"transceiversInfo"],[204,47,150,45],[204,49,150,47],[204,68,150,66],[204,69,150,67],[204,70,150,68,"_desc"],[204,75,150,73],[204,78,150,76,"desc"],[204,82,150,80],[204,88,150,86],[204,92,150,90],[204,96,150,94,"_desc"],[204,101,150,99],[204,106,150,104],[204,111,150,109],[204,112,150,110],[204,115,150,113],[204,120,150,118],[204,121,150,119],[204,124,150,122,"_desc"],[204,129,150,127],[204,130,150,128,"type"],[204,134,150,132],[204,140,150,138],[204,148,150,146],[204,149,150,147],[205,6,151,4,"log"],[205,9,151,7],[205,10,151,8,"debug"],[205,15,151,13],[205,16,151,14],[205,19,151,17],[205,23,151,21],[205,24,151,22,"_pcId"],[205,29,151,27],[205,54,151,52],[205,55,151,53],[206,4,152,2],[207,4,153,2],[207,10,153,8,"setRemoteDescription"],[207,30,153,28,"setRemoteDescription"],[207,31,153,29,"sessionDescription"],[207,49,153,47],[207,51,153,49],[208,6,154,4],[208,10,154,8,"_sessionDescription$s2"],[208,32,154,30],[208,34,154,32,"_desc$type"],[208,44,154,42],[209,6,155,4,"log"],[209,9,155,7],[209,10,155,8,"debug"],[209,15,155,13],[209,16,155,14],[209,19,155,17],[209,23,155,21],[209,24,155,22,"_pcId"],[209,29,155,27],[209,52,155,50],[209,53,155,51],[210,6,156,4],[210,10,156,8],[210,11,156,9,"sessionDescription"],[210,29,156,27],[210,31,156,29],[211,8,157,6],[211,15,157,13,"Promise"],[211,22,157,20],[211,23,157,21,"reject"],[211,29,157,27],[211,30,157,28],[211,34,157,32,"Error"],[211,39,157,37],[211,40,157,38],[211,73,157,71],[211,74,157,72],[211,75,157,73],[212,6,158,4],[213,6,159,4],[213,12,159,10,"desc"],[213,16,159,14],[213,19,159,17],[214,8,160,6,"type"],[214,12,160,10],[214,14,160,12,"sessionDescription"],[214,32,160,30],[214,33,160,31,"type"],[214,37,160,35],[215,8,161,6,"sdp"],[215,11,161,9],[215,13,161,11],[215,14,161,12,"_sessionDescription$s2"],[215,36,161,34],[215,39,161,37,"sessionDescription"],[215,57,161,55],[215,58,161,56,"sdp"],[215,61,161,59],[215,67,161,65],[215,71,161,69],[215,75,161,73,"_sessionDescription$s2"],[215,97,161,95],[215,102,161,100],[215,107,161,105],[215,108,161,106],[215,111,161,109,"_sessionDescription$s2"],[215,133,161,131],[215,136,161,134],[216,6,162,4],[216,7,162,5],[217,6,163,4],[217,10,163,8],[217,11,163,9,"RTCUtil"],[217,18,163,16],[217,19,163,17,"isSdpTypeValid"],[217,33,163,31],[217,34,163,32],[217,35,163,33,"_desc$type"],[217,45,163,43],[217,48,163,46,"desc"],[217,52,163,50],[217,53,163,51,"type"],[217,57,163,55],[217,63,163,61],[217,67,163,65],[217,71,163,69,"_desc$type"],[217,81,163,79],[217,86,163,84],[217,91,163,89],[217,92,163,90],[217,95,163,93,"_desc$type"],[217,105,163,103],[217,108,163,106],[217,110,163,108],[217,111,163,109],[217,113,163,111],[218,8,164,6],[218,14,164,12],[218,18,164,16,"Error"],[218,23,164,21],[218,24,164,22],[218,70,164,68,"desc"],[218,74,164,72],[218,75,164,73,"type"],[218,79,164,77],[218,81,164,79],[218,82,164,80],[219,6,165,4],[220,6,166,4],[220,12,166,10],[221,8,167,6,"sdpInfo"],[221,15,167,13],[222,8,168,6,"newTransceivers"],[222,23,168,21],[223,8,169,6,"transceiversInfo"],[224,6,170,4],[224,7,170,5],[224,10,170,8],[224,16,170,14,"WebRTCModule"],[224,28,170,26],[224,29,170,27,"peerConnectionSetRemoteDescription"],[224,63,170,61],[224,64,170,62],[224,68,170,66],[224,69,170,67,"_pcId"],[224,74,170,72],[224,76,170,74,"desc"],[224,80,170,78],[224,81,170,79],[225,6,171,4],[225,10,171,8,"sdpInfo"],[225,17,171,15],[225,18,171,16,"type"],[225,22,171,20],[225,26,171,24,"sdpInfo"],[225,33,171,31],[225,34,171,32,"sdp"],[225,37,171,35],[225,39,171,37],[226,8,172,6],[226,12,172,10],[226,13,172,11,"remoteDescription"],[226,30,172,28],[226,33,172,31],[226,37,172,35,"_RTCSessionDescription"],[226,59,172,57],[226,60,172,58,"default"],[226,67,172,65],[226,68,172,66,"sdpInfo"],[226,75,172,73],[226,76,172,74],[227,6,173,4],[227,7,173,5],[227,13,173,11],[228,8,174,6],[228,12,174,10],[228,13,174,11,"remoteDescription"],[228,30,174,28],[228,33,174,31],[228,37,174,35],[229,6,175,4],[230,6,176,4,"newTransceivers"],[230,21,176,19],[230,26,176,24],[230,30,176,28],[230,34,176,32,"newTransceivers"],[230,49,176,47],[230,54,176,52],[230,59,176,57],[230,60,176,58],[230,63,176,61],[230,68,176,66],[230,69,176,67],[230,72,176,70,"newTransceivers"],[230,87,176,85],[230,88,176,86,"forEach"],[230,95,176,93],[230,96,176,94,"t"],[230,97,176,95],[230,101,176,99],[231,8,177,6],[231,14,177,12],[232,10,178,8,"transceiverOrder"],[232,26,178,24],[233,10,179,8,"transceiver"],[234,8,180,6],[234,9,180,7],[234,12,180,10,"t"],[234,13,180,11],[235,8,181,6],[235,14,181,12,"newSender"],[235,23,181,21],[235,26,181,24],[235,30,181,28,"_RTCRtpSender"],[235,43,181,41],[235,44,181,42,"default"],[235,51,181,49],[235,52,181,50],[236,10,182,8],[236,13,182,11,"transceiver"],[236,24,182,22],[236,25,182,23,"sender"],[236,31,182,29],[237,10,183,8,"track"],[237,15,183,13],[237,17,183,15],[238,8,184,6],[238,9,184,7],[238,10,184,8],[239,8,185,6],[239,14,185,12,"remoteTrack"],[239,25,185,23],[239,28,185,26,"transceiver"],[239,39,185,37],[239,40,185,38,"receiver"],[239,48,185,46],[239,49,185,47,"track"],[239,54,185,52],[239,57,185,55],[239,61,185,59,"_MediaStreamTrack"],[239,78,185,76],[239,79,185,77,"default"],[239,86,185,84],[239,87,185,85,"transceiver"],[239,98,185,96],[239,99,185,97,"receiver"],[239,107,185,105],[239,108,185,106,"track"],[239,113,185,111],[239,114,185,112],[239,117,185,115],[239,121,185,119],[240,8,186,6],[240,14,186,12,"newReceiver"],[240,25,186,23],[240,28,186,26],[240,32,186,30,"_RTCRtpReceiver"],[240,47,186,45],[240,48,186,46,"default"],[240,55,186,53],[240,56,186,54],[241,10,187,8],[241,13,187,11,"transceiver"],[241,24,187,22],[241,25,187,23,"receiver"],[241,33,187,31],[242,10,188,8,"track"],[242,15,188,13],[242,17,188,15,"remoteTrack"],[243,8,189,6],[243,9,189,7],[243,10,189,8],[244,8,190,6],[244,14,190,12,"newTransceiver"],[244,28,190,26],[244,31,190,29],[244,35,190,33,"_RTCRtpTransceiver"],[244,53,190,51],[244,54,190,52,"default"],[244,61,190,59],[244,62,190,60],[245,10,191,8],[245,13,191,11,"transceiver"],[245,24,191,22],[246,10,192,8,"sender"],[246,16,192,14],[246,18,192,16,"newSender"],[246,27,192,25],[247,10,193,8,"receiver"],[247,18,193,16],[247,20,193,18,"newReceiver"],[248,8,194,6],[248,9,194,7],[248,10,194,8],[249,8,195,6],[249,12,195,10],[249,13,195,11,"_insertTransceiverSorted"],[249,37,195,35],[249,38,195,36,"transceiverOrder"],[249,54,195,52],[249,56,195,54,"newTransceiver"],[249,70,195,68],[249,71,195,69],[250,6,196,4],[250,7,196,5],[250,8,196,6],[251,6,197,4],[251,10,197,8],[251,11,197,9,"_updateTransceivers"],[251,30,197,28],[251,31,197,29,"transceiversInfo"],[251,47,197,45],[251,49,197,47],[251,68,197,66,"desc"],[251,72,197,70],[251,73,197,71,"type"],[251,77,197,75],[251,82,197,80],[251,90,197,88],[251,91,197,89],[253,6,199,4],[254,6,200,4],[254,12,200,10,"pendingTrackEvents"],[254,30,200,28],[254,33,200,31],[254,37,200,35],[254,38,200,36,"_pendingTrackEvents"],[254,57,200,55],[255,6,201,4],[255,10,201,8],[255,11,201,9,"_pendingTrackEvents"],[255,30,201,28],[255,33,201,31],[255,35,201,33],[256,6,202,4],[256,11,202,9],[256,17,202,15,"ev"],[256,19,202,17],[256,23,202,21,"pendingTrackEvents"],[256,41,202,39],[256,43,202,41],[257,8,203,6],[257,14,203,12],[257,15,203,13,"transceiver"],[257,26,203,24],[257,27,203,25],[257,30,203,28],[257,34,203,32],[257,35,203,33,"getTransceivers"],[257,50,203,48],[257,51,203,49],[257,52,203,50],[257,53,203,51,"filter"],[257,59,203,57],[257,60,203,58,"t"],[257,61,203,59],[257,65,203,63,"t"],[257,66,203,64],[257,67,203,65,"receiver"],[257,75,203,73],[257,76,203,74,"id"],[257,78,203,76],[257,83,203,81,"ev"],[257,85,203,83],[257,86,203,84,"receiver"],[257,94,203,92],[257,95,203,93,"id"],[257,97,203,95],[257,98,203,96],[259,8,205,6],[260,8,206,6],[261,8,207,6],[263,8,209,6],[264,8,210,6],[264,14,210,12,"track"],[264,19,210,17],[264,22,210,20,"transceiver"],[264,33,210,31],[264,34,210,32,"receiver"],[264,42,210,40],[264,43,210,41,"track"],[264,48,210,46],[265,8,211,6,"transceiver"],[265,19,211,17],[265,20,211,18,"_mid"],[265,24,211,22],[265,27,211,25,"ev"],[265,29,211,27],[265,30,211,28,"transceiver"],[265,41,211,39],[265,42,211,40,"mid"],[265,45,211,43],[266,8,212,6,"transceiver"],[266,19,212,17],[266,20,212,18,"_currentDirection"],[266,37,212,35],[266,40,212,38,"ev"],[266,42,212,40],[266,43,212,41,"transceiver"],[266,54,212,52],[266,55,212,53,"currentDirection"],[266,71,212,69],[267,8,213,6,"transceiver"],[267,19,213,17],[267,20,213,18,"_direction"],[267,30,213,28],[267,33,213,31,"ev"],[267,35,213,33],[267,36,213,34,"transceiver"],[267,47,213,45],[267,48,213,46,"direction"],[267,57,213,55],[269,8,215,6],[270,8,216,6],[270,14,216,12,"streams"],[270,21,216,19],[270,24,216,22,"ev"],[270,26,216,24],[270,27,216,25,"streams"],[270,34,216,32],[270,35,216,33,"map"],[270,38,216,36],[270,39,216,37,"streamInfo"],[270,49,216,47],[270,53,216,51],[271,10,217,8],[272,10,218,8],[273,10,219,8],[273,14,219,12],[273,15,219,13],[273,19,219,17],[273,20,219,18,"_remoteStreams"],[273,34,219,32],[273,35,219,33,"has"],[273,38,219,36],[273,39,219,37,"streamInfo"],[273,49,219,47],[273,50,219,48,"streamId"],[273,58,219,56],[273,59,219,57],[273,61,219,59],[274,12,220,10],[274,18,220,16,"stream"],[274,24,220,22],[274,27,220,25],[274,31,220,29,"_MediaStream"],[274,43,220,41],[274,44,220,42,"default"],[274,51,220,49],[274,52,220,50],[275,14,221,12,"streamId"],[275,22,221,20],[275,24,221,22,"streamInfo"],[275,34,221,32],[275,35,221,33,"streamId"],[275,43,221,41],[276,14,222,12,"streamReactTag"],[276,28,222,26],[276,30,222,28,"streamInfo"],[276,40,222,38],[276,41,222,39,"streamReactTag"],[276,55,222,53],[277,14,223,12,"tracks"],[277,20,223,18],[277,22,223,20],[278,12,224,10],[278,13,224,11],[278,14,224,12],[279,12,225,10],[279,16,225,14],[279,17,225,15,"_remoteStreams"],[279,31,225,29],[279,32,225,30,"set"],[279,35,225,33],[279,36,225,34,"streamInfo"],[279,46,225,44],[279,47,225,45,"streamId"],[279,55,225,53],[279,57,225,55,"stream"],[279,63,225,61],[279,64,225,62],[280,10,226,8],[281,10,227,8],[281,16,227,14,"stream"],[281,22,227,20],[281,25,227,23],[281,29,227,27],[281,30,227,28,"_remoteStreams"],[281,44,227,42],[281,45,227,43,"get"],[281,48,227,46],[281,49,227,47,"streamInfo"],[281,59,227,57],[281,60,227,58,"streamId"],[281,68,227,66],[281,69,227,67],[282,10,228,8],[282,14,228,12],[282,16,228,14,"stream"],[282,22,228,20],[282,27,228,25],[282,31,228,29],[282,35,228,33,"stream"],[282,41,228,39],[282,46,228,44],[282,51,228,49],[282,52,228,50],[282,56,228,54,"stream"],[282,62,228,60],[282,63,228,61,"_tracks"],[282,70,228,68],[282,71,228,69,"includes"],[282,79,228,77],[282,80,228,78,"track"],[282,85,228,83],[282,86,228,84],[282,87,228,85],[282,89,228,87],[283,12,229,10,"stream"],[283,18,229,16],[283,23,229,21],[283,27,229,25],[283,31,229,29,"stream"],[283,37,229,35],[283,42,229,40],[283,47,229,45],[283,48,229,46],[283,51,229,49],[283,56,229,54],[283,57,229,55],[283,60,229,58,"stream"],[283,66,229,64],[283,67,229,65,"_tracks"],[283,74,229,72],[283,75,229,73,"push"],[283,79,229,77],[283,80,229,78,"track"],[283,85,229,83],[283,86,229,84],[284,10,230,8],[285,10,231,8],[285,17,231,15,"stream"],[285,23,231,21],[286,8,232,6],[286,9,232,7],[286,10,232,8],[287,8,233,6],[287,14,233,12,"eventData"],[287,23,233,21],[287,26,233,24],[288,10,234,8,"streams"],[288,17,234,15],[289,10,235,8,"transceiver"],[289,21,235,19],[290,10,236,8,"track"],[290,15,236,13],[291,10,237,8,"receiver"],[291,18,237,16],[291,20,237,18,"transceiver"],[291,31,237,29],[291,32,237,30,"receiver"],[292,8,238,6],[292,9,238,7],[293,8,239,6],[293,12,239,10],[293,13,239,11,"dispatchEvent"],[293,26,239,24],[293,27,239,25],[293,31,239,29,"_RTCTrackEvent"],[293,45,239,43],[293,46,239,44,"default"],[293,53,239,51],[293,54,239,52],[293,61,239,59],[293,63,239,61,"eventData"],[293,72,239,70],[293,73,239,71],[293,74,239,72],[294,8,240,6,"streams"],[294,15,240,13],[294,16,240,14,"forEach"],[294,23,240,21],[294,24,240,22,"stream"],[294,30,240,28],[294,34,240,32],[295,10,241,8,"stream"],[295,16,241,14],[295,17,241,15,"dispatchEvent"],[295,30,241,28],[295,31,241,29],[295,35,241,33,"_MediaStreamTrackEvent"],[295,57,241,55],[295,58,241,56,"default"],[295,65,241,63],[295,66,241,64],[295,76,241,74],[295,78,241,76],[296,12,242,10,"track"],[297,10,243,8],[297,11,243,9],[297,12,243,10],[297,13,243,11],[298,8,244,6],[298,9,244,7],[298,10,244,8],[300,8,246,6],[301,8,247,6,"track"],[301,13,247,11],[301,14,247,12,"_setMutedInternal"],[301,31,247,29],[301,32,247,30],[301,37,247,35],[301,38,247,36],[302,6,248,4],[303,6,249,4,"log"],[303,9,249,7],[303,10,249,8,"debug"],[303,15,249,13],[303,16,249,14],[303,19,249,17],[303,23,249,21],[303,24,249,22,"_pcId"],[303,29,249,27],[303,55,249,53],[303,56,249,54],[304,4,250,2],[305,4,251,2],[305,10,251,8,"addIceCandidate"],[305,25,251,23,"addIceCandidate"],[305,26,251,24,"candidate"],[305,35,251,33],[305,37,251,35],[306,6,252,4,"log"],[306,9,252,7],[306,10,252,8,"debug"],[306,15,252,13],[306,16,252,14],[306,19,252,17],[306,23,252,21],[306,24,252,22,"_pcId"],[306,29,252,27],[306,47,252,45],[306,48,252,46],[307,6,253,4],[307,10,253,8],[307,11,253,9,"candidate"],[307,20,253,18],[307,24,253,22],[307,25,253,23,"candidate"],[307,34,253,32],[307,35,253,33,"candidate"],[307,44,253,42],[307,46,253,44],[308,8,254,6],[309,8,255,6],[310,6,256,4],[311,6,257,4],[311,10,257,8],[311,11,257,9,"candidate"],[311,20,257,18],[311,21,257,19,"sdpMLineIndex"],[311,34,257,32],[311,39,257,37],[311,43,257,41],[311,47,257,45,"candidate"],[311,56,257,54],[311,57,257,55,"sdpMLineIndex"],[311,70,257,68],[311,75,257,73,"undefined"],[311,84,257,82],[311,90,257,88,"candidate"],[311,99,257,97],[311,100,257,98,"sdpMid"],[311,106,257,104],[311,111,257,109],[311,115,257,113],[311,119,257,117,"candidate"],[311,128,257,126],[311,129,257,127,"sdpMid"],[311,135,257,133],[311,140,257,138,"undefined"],[311,149,257,147],[311,150,257,148],[311,152,257,150],[312,8,258,6],[312,14,258,12],[312,18,258,16,"TypeError"],[312,27,258,25],[312,28,258,26],[312,93,258,91],[312,94,258,92],[313,6,259,4],[314,6,260,4],[314,12,260,10,"newSdp"],[314,18,260,16],[314,21,260,19],[314,27,260,25,"WebRTCModule"],[314,39,260,37],[314,40,260,38,"peerConnectionAddICECandidate"],[314,69,260,67],[314,70,260,68],[314,74,260,72],[314,75,260,73,"_pcId"],[314,80,260,78],[314,82,260,80,"RTCUtil"],[314,89,260,87],[314,90,260,88,"deepClone"],[314,99,260,97],[314,100,260,98,"candidate"],[314,109,260,107],[314,110,260,108],[314,111,260,109],[315,6,261,4],[315,10,261,8],[315,11,261,9,"remoteDescription"],[315,28,261,26],[315,31,261,29],[315,35,261,33,"_RTCSessionDescription"],[315,57,261,55],[315,58,261,56,"default"],[315,65,261,63],[315,66,261,64,"newSdp"],[315,72,261,70],[315,73,261,71],[316,4,262,2],[318,4,264,2],[319,0,265,0],[320,0,266,0],[321,0,267,0],[322,0,268,0],[323,0,269,0],[324,0,270,0],[325,0,271,0],[326,4,272,2,"addTrack"],[326,12,272,10,"addTrack"],[326,13,272,11,"track"],[326,18,272,16],[326,20,272,18],[327,6,273,4,"log"],[327,9,273,7],[327,10,273,8,"debug"],[327,15,273,13],[327,16,273,14],[327,19,273,17],[327,23,273,21],[327,24,273,22,"_pcId"],[327,29,273,27],[327,40,273,38],[327,41,273,39],[328,6,274,4],[328,10,274,8],[328,14,274,12],[328,15,274,13,"connectionState"],[328,30,274,28],[328,35,274,33],[328,43,274,41],[328,45,274,43],[329,8,275,6],[329,14,275,12],[329,18,275,16,"Error"],[329,23,275,21],[329,24,275,22],[329,51,275,49],[329,52,275,50],[330,6,276,4],[331,6,277,4],[331,10,277,8],[331,14,277,12],[331,15,277,13,"_trackExists"],[331,27,277,25],[331,28,277,26,"track"],[331,33,277,31],[331,34,277,32],[331,36,277,34],[332,8,278,6],[332,14,278,12],[332,18,278,16,"Error"],[332,23,278,21],[332,24,278,22],[332,58,278,56],[332,59,278,57],[333,6,279,4],[334,6,280,4],[334,11,280,9],[334,15,280,13,"_len"],[334,19,280,17],[334,22,280,20,"arguments"],[334,31,280,29],[334,32,280,30,"length"],[334,38,280,36],[334,40,280,38,"streams"],[334,47,280,45],[334,50,280,48],[334,54,280,52,"Array"],[334,59,280,57],[334,60,280,58,"_len"],[334,64,280,62],[334,67,280,65],[334,68,280,66],[334,71,280,69,"_len"],[334,75,280,73],[334,78,280,76],[334,79,280,77],[334,82,280,80],[334,83,280,81],[334,84,280,82],[334,86,280,84,"_key"],[334,90,280,88],[334,93,280,91],[334,94,280,92],[334,96,280,94,"_key"],[334,100,280,98],[334,103,280,101,"_len"],[334,107,280,105],[334,109,280,107,"_key"],[334,113,280,111],[334,115,280,113],[334,117,280,115],[335,8,281,6,"streams"],[335,15,281,13],[335,16,281,14,"_key"],[335,20,281,18],[335,23,281,21],[335,24,281,22],[335,25,281,23],[335,28,281,26,"arguments"],[335,37,281,35],[335,38,281,36,"_key"],[335,42,281,40],[335,43,281,41],[336,6,282,4],[337,6,283,4],[337,12,283,10,"streamIds"],[337,21,283,19],[337,24,283,22,"streams"],[337,31,283,29],[337,32,283,30,"map"],[337,35,283,33],[337,36,283,34,"s"],[337,37,283,35],[337,41,283,39,"s"],[337,42,283,40],[337,43,283,41,"id"],[337,45,283,43],[337,46,283,44],[338,6,284,4],[338,12,284,10,"result"],[338,18,284,16],[338,21,284,19,"WebRTCModule"],[338,33,284,31],[338,34,284,32,"peerConnectionAddTrack"],[338,56,284,54],[338,57,284,55],[338,61,284,59],[338,62,284,60,"_pcId"],[338,67,284,65],[338,69,284,67,"track"],[338,74,284,72],[338,75,284,73,"id"],[338,77,284,75],[338,79,284,77],[339,8,285,6,"streamIds"],[340,6,286,4],[340,7,286,5],[340,8,286,6],[341,6,287,4],[341,10,287,8,"result"],[341,16,287,14],[341,21,287,19],[341,25,287,23],[341,27,287,25],[342,8,288,6],[342,14,288,12],[342,18,288,16,"Error"],[342,23,288,21],[342,24,288,22],[342,46,288,44],[342,47,288,45],[343,6,289,4],[344,6,290,4],[344,12,290,10],[345,8,291,6,"transceiverOrder"],[345,24,291,22],[346,8,292,6,"transceiver"],[346,19,292,17],[347,8,293,6,"sender"],[348,6,294,4],[348,7,294,5],[348,10,294,8,"result"],[348,16,294,14],[350,6,296,4],[351,6,297,4],[352,6,298,4],[352,12,298,10],[352,13,298,11,"existingSender"],[352,27,298,25],[352,28,298,26],[352,31,298,29],[352,35,298,33],[352,36,298,34,"getSenders"],[352,46,298,44],[352,47,298,45],[352,48,298,46],[352,49,298,47,"filter"],[352,55,298,53],[352,56,298,54,"s"],[352,57,298,55],[352,61,298,59,"s"],[352,62,298,60],[352,63,298,61,"id"],[352,65,298,63],[352,70,298,68,"sender"],[352,76,298,74],[352,77,298,75,"id"],[352,79,298,77],[352,80,298,78],[353,6,299,4],[353,10,299,8,"existingSender"],[353,24,299,22],[353,26,299,24],[354,8,300,6],[355,8,301,6,"existingSender"],[355,22,301,20],[355,23,301,21,"_track"],[355,29,301,27],[355,32,301,30,"track"],[355,37,301,35],[357,8,303,6],[358,8,304,6],[358,14,304,12],[358,15,304,13,"existingTransceiver"],[358,34,304,32],[358,35,304,33],[358,38,304,36],[358,42,304,40],[358,43,304,41,"getTransceivers"],[358,58,304,56],[358,59,304,57],[358,60,304,58],[358,61,304,59,"filter"],[358,67,304,65],[358,68,304,66,"t"],[358,69,304,67],[358,73,304,71,"t"],[358,74,304,72],[358,75,304,73,"sender"],[358,81,304,79],[358,82,304,80,"id"],[358,84,304,82],[358,89,304,87,"existingSender"],[358,103,304,101],[358,104,304,102,"id"],[358,106,304,104],[358,107,304,105],[359,8,305,6,"existingTransceiver"],[359,27,305,25],[359,28,305,26,"_direction"],[359,38,305,36],[359,41,305,39,"transceiver"],[359,52,305,50],[359,53,305,51,"direction"],[359,62,305,60],[360,8,306,6,"existingTransceiver"],[360,27,306,25],[360,28,306,26,"_currentDirection"],[360,45,306,43],[360,48,306,46,"transceiver"],[360,59,306,57],[360,60,306,58,"currentDirection"],[360,76,306,74],[361,8,307,6],[361,15,307,13,"existingSender"],[361,29,307,27],[362,6,308,4],[364,6,310,4],[365,6,311,4],[365,12,311,10,"newSender"],[365,21,311,19],[365,24,311,22],[365,28,311,26,"_RTCRtpSender"],[365,41,311,39],[365,42,311,40,"default"],[365,49,311,47],[365,50,311,48],[366,8,312,6],[366,11,312,9,"transceiver"],[366,22,312,20],[366,23,312,21,"sender"],[366,29,312,27],[367,8,313,6,"track"],[368,6,314,4],[368,7,314,5],[368,8,314,6],[369,6,315,4],[369,12,315,10,"remoteTrack"],[369,23,315,21],[369,26,315,24,"transceiver"],[369,37,315,35],[369,38,315,36,"receiver"],[369,46,315,44],[369,47,315,45,"track"],[369,52,315,50],[369,55,315,53],[369,59,315,57,"_MediaStreamTrack"],[369,76,315,74],[369,77,315,75,"default"],[369,84,315,82],[369,85,315,83,"transceiver"],[369,96,315,94],[369,97,315,95,"receiver"],[369,105,315,103],[369,106,315,104,"track"],[369,111,315,109],[369,112,315,110],[369,115,315,113],[369,119,315,117],[370,6,316,4],[370,12,316,10,"newReceiver"],[370,23,316,21],[370,26,316,24],[370,30,316,28,"_RTCRtpReceiver"],[370,45,316,43],[370,46,316,44,"default"],[370,53,316,51],[370,54,316,52],[371,8,317,6],[371,11,317,9,"transceiver"],[371,22,317,20],[371,23,317,21,"receiver"],[371,31,317,29],[372,8,318,6,"track"],[372,13,318,11],[372,15,318,13,"remoteTrack"],[373,6,319,4],[373,7,319,5],[373,8,319,6],[374,6,320,4],[374,12,320,10,"newTransceiver"],[374,26,320,24],[374,29,320,27],[374,33,320,31,"_RTCRtpTransceiver"],[374,51,320,49],[374,52,320,50,"default"],[374,59,320,57],[374,60,320,58],[375,8,321,6],[375,11,321,9,"transceiver"],[375,22,321,20],[376,8,322,6,"sender"],[376,14,322,12],[376,16,322,14,"newSender"],[376,25,322,23],[377,8,323,6,"receiver"],[377,16,323,14],[377,18,323,16,"newReceiver"],[378,6,324,4],[378,7,324,5],[378,8,324,6],[379,6,325,4],[379,10,325,8],[379,11,325,9,"_insertTransceiverSorted"],[379,35,325,33],[379,36,325,34,"transceiverOrder"],[379,52,325,50],[379,54,325,52,"newTransceiver"],[379,68,325,66],[379,69,325,67],[380,6,326,4],[380,13,326,11,"newSender"],[380,22,326,20],[381,4,327,2],[382,4,328,2,"addTransceiver"],[382,18,328,16,"addTransceiver"],[382,19,328,17,"source"],[382,25,328,23],[382,27,328,25,"init"],[382,31,328,29],[382,33,328,31],[383,6,329,4,"log"],[383,9,329,7],[383,10,329,8,"debug"],[383,15,329,13],[383,16,329,14],[383,19,329,17],[383,23,329,21],[383,24,329,22,"_pcId"],[383,29,329,27],[383,46,329,44],[383,47,329,45],[384,6,330,4],[384,10,330,8,"src"],[384,13,330,11],[384,16,330,14],[384,17,330,15],[384,18,330,16],[385,6,331,4],[385,10,331,8,"source"],[385,16,331,14],[385,21,331,19],[385,28,331,26],[385,30,331,28],[386,8,332,6,"src"],[386,11,332,9],[386,14,332,12],[387,10,333,8,"type"],[387,14,333,12],[387,16,333,14],[388,8,334,6],[388,9,334,7],[389,6,335,4],[389,7,335,5],[389,13,335,11],[389,17,335,15,"source"],[389,23,335,21],[389,28,335,26],[389,35,335,33],[389,37,335,35],[390,8,336,6,"src"],[390,11,336,9],[390,14,336,12],[391,10,337,8,"type"],[391,14,337,12],[391,16,337,14],[392,8,338,6],[392,9,338,7],[393,6,339,4],[393,7,339,5],[393,13,339,11],[394,8,340,6,"src"],[394,11,340,9],[394,14,340,12],[395,10,341,8,"trackId"],[395,17,341,15],[395,19,341,17,"source"],[395,25,341,23],[395,26,341,24,"id"],[396,8,342,6],[396,9,342,7],[397,6,343,4],[399,6,345,4],[400,6,346,4],[400,10,346,8,"init"],[400,14,346,12],[400,18,346,16,"init"],[400,22,346,20],[400,23,346,21,"streams"],[400,30,346,28],[400,32,346,30],[401,8,347,6,"init"],[401,12,347,10],[401,13,347,11,"streamIds"],[401,22,347,20],[401,25,347,23,"init"],[401,29,347,27],[401,30,347,28,"streams"],[401,37,347,35],[401,38,347,36,"map"],[401,41,347,39],[401,42,347,40,"stream"],[401,48,347,46],[401,52,347,50,"stream"],[401,58,347,56],[401,59,347,57,"id"],[401,61,347,59],[401,62,347,60],[402,6,348,4],[403,6,349,4],[403,12,349,10,"result"],[403,18,349,16],[403,21,349,19,"WebRTCModule"],[403,33,349,31],[403,34,349,32,"peerConnectionAddTransceiver"],[403,62,349,60],[403,63,349,61],[403,67,349,65],[403,68,349,66,"_pcId"],[403,73,349,71],[403,75,349,73],[404,8,350,6],[404,11,350,9,"src"],[404,14,350,12],[405,8,351,6,"init"],[405,12,351,10],[405,14,351,12],[406,10,352,8],[406,13,352,11,"init"],[407,8,353,6],[408,6,354,4],[408,7,354,5],[408,8,354,6],[409,6,355,4],[409,10,355,8,"result"],[409,16,355,14],[409,21,355,19],[409,25,355,23],[409,27,355,25],[410,8,356,6],[410,14,356,12],[410,18,356,16,"Error"],[410,23,356,21],[410,24,356,22],[410,56,356,54],[410,57,356,55],[411,6,357,4],[412,6,358,4],[412,12,358,10,"t"],[412,13,358,11],[412,16,358,14,"result"],[412,22,358,20],[412,23,358,21,"transceiver"],[412,34,358,32],[413,6,359,4],[413,10,359,8,"track"],[413,15,359,13],[413,18,359,16],[413,22,359,20],[414,6,360,4],[414,10,360,8],[414,17,360,15,"source"],[414,23,360,21],[414,28,360,26],[414,36,360,34],[414,38,360,36],[415,8,361,6],[415,12,361,10,"t"],[415,13,361,11],[415,14,361,12,"sender"],[415,20,361,18],[415,21,361,19,"track"],[415,26,361,24],[415,28,361,26],[416,10,362,8,"track"],[416,15,362,13],[416,18,362,16],[416,22,362,20,"_MediaStreamTrack"],[416,39,362,37],[416,40,362,38,"default"],[416,47,362,45],[416,48,362,46,"t"],[416,49,362,47],[416,50,362,48,"sender"],[416,56,362,54],[416,57,362,55,"track"],[416,62,362,60],[416,63,362,61],[417,8,363,6],[418,6,364,4],[418,7,364,5],[418,13,364,11],[419,8,365,6],[420,8,366,6,"track"],[420,13,366,11],[420,16,366,14,"source"],[420,22,366,20],[421,6,367,4],[422,6,368,4],[422,12,368,10,"sender"],[422,18,368,16],[422,21,368,19],[422,25,368,23,"_RTCRtpSender"],[422,38,368,36],[422,39,368,37,"default"],[422,46,368,44],[422,47,368,45],[423,8,369,6],[423,11,369,9,"t"],[423,12,369,10],[423,13,369,11,"sender"],[423,19,369,17],[424,8,370,6,"track"],[425,6,371,4],[425,7,371,5],[425,8,371,6],[426,6,372,4],[426,12,372,10,"remoteTrack"],[426,23,372,21],[426,26,372,24,"t"],[426,27,372,25],[426,28,372,26,"receiver"],[426,36,372,34],[426,37,372,35,"track"],[426,42,372,40],[426,45,372,43],[426,49,372,47,"_MediaStreamTrack"],[426,66,372,64],[426,67,372,65,"default"],[426,74,372,72],[426,75,372,73,"t"],[426,76,372,74],[426,77,372,75,"receiver"],[426,85,372,83],[426,86,372,84,"track"],[426,91,372,89],[426,92,372,90],[426,95,372,93],[426,99,372,97],[427,6,373,4],[427,12,373,10,"receiver"],[427,20,373,18],[427,23,373,21],[427,27,373,25,"_RTCRtpReceiver"],[427,42,373,40],[427,43,373,41,"default"],[427,50,373,48],[427,51,373,49],[428,8,374,6],[428,11,374,9,"t"],[428,12,374,10],[428,13,374,11,"receiver"],[428,21,374,19],[429,8,375,6,"track"],[429,13,375,11],[429,15,375,13,"remoteTrack"],[430,6,376,4],[430,7,376,5],[430,8,376,6],[431,6,377,4],[431,12,377,10,"transceiver"],[431,23,377,21],[431,26,377,24],[431,30,377,28,"_RTCRtpTransceiver"],[431,48,377,46],[431,49,377,47,"default"],[431,56,377,54],[431,57,377,55],[432,8,378,6],[432,11,378,9,"result"],[432,17,378,15],[432,18,378,16,"transceiver"],[432,29,378,27],[433,8,379,6,"sender"],[433,14,379,12],[434,8,380,6,"receiver"],[435,6,381,4],[435,7,381,5],[435,8,381,6],[436,6,382,4],[436,10,382,8],[436,11,382,9,"_insertTransceiverSorted"],[436,35,382,33],[436,36,382,34,"result"],[436,42,382,40],[436,43,382,41,"transceiverOrder"],[436,59,382,57],[436,61,382,59,"transceiver"],[436,72,382,70],[436,73,382,71],[437,6,383,4],[437,13,383,11,"transceiver"],[437,24,383,22],[438,4,384,2],[439,4,385,2,"removeTrack"],[439,15,385,13,"removeTrack"],[439,16,385,14,"sender"],[439,22,385,20],[439,24,385,22],[440,6,386,4,"log"],[440,9,386,7],[440,10,386,8,"debug"],[440,15,386,13],[440,16,386,14],[440,19,386,17],[440,23,386,21],[440,24,386,22,"_pcId"],[440,29,386,27],[440,43,386,41],[440,44,386,42],[441,6,387,4],[441,10,387,8],[441,14,387,12],[441,15,387,13,"_pcId"],[441,20,387,18],[441,25,387,23,"sender"],[441,31,387,29],[441,32,387,30,"_peerConnectionId"],[441,49,387,47],[441,51,387,49],[442,8,388,6],[442,14,388,12],[442,18,388,16,"Error"],[442,23,388,21],[442,24,388,22],[442,72,388,70],[442,73,388,71],[443,6,389,4],[444,6,390,4],[444,10,390,8],[444,14,390,12],[444,15,390,13,"connectionState"],[444,30,390,28],[444,35,390,33],[444,43,390,41],[444,45,390,43],[445,8,391,6],[445,14,391,12],[445,18,391,16,"Error"],[445,23,391,21],[445,24,391,22],[445,51,391,49],[445,52,391,50],[446,6,392,4],[447,6,393,4],[447,12,393,10,"existingSender"],[447,26,393,24],[447,29,393,27],[447,33,393,31],[447,34,393,32,"getSenders"],[447,44,393,42],[447,45,393,43],[447,46,393,44],[447,47,393,45,"find"],[447,51,393,49],[447,52,393,50,"s"],[447,53,393,51],[447,57,393,55,"s"],[447,58,393,56],[447,63,393,61,"sender"],[447,69,393,67],[447,70,393,68],[448,6,394,4],[448,10,394,8],[448,11,394,9,"existingSender"],[448,25,394,23],[448,27,394,25],[449,8,395,6],[449,14,395,12],[449,18,395,16,"Error"],[449,23,395,21],[449,24,395,22],[449,47,395,45],[449,48,395,46],[450,6,396,4],[451,6,397,4],[451,10,397,8,"existingSender"],[451,24,397,22],[451,25,397,23,"track"],[451,30,397,28],[451,35,397,33],[451,39,397,37],[451,41,397,39],[452,8,398,6],[453,6,399,4],[455,6,401,4],[456,6,402,4,"WebRTCModule"],[456,18,402,16],[456,19,402,17,"peerConnectionRemoveTrack"],[456,44,402,42],[456,45,402,43],[456,49,402,47],[456,50,402,48,"_pcId"],[456,55,402,53],[456,57,402,55,"sender"],[456,63,402,61],[456,64,402,62,"id"],[456,66,402,64],[456,67,402,65],[457,6,403,4,"existingSender"],[457,20,403,18],[457,21,403,19,"_track"],[457,27,403,25],[457,30,403,28],[457,34,403,32],[458,6,404,4],[458,12,404,10],[458,13,404,11,"existingTransceiver"],[458,32,404,30],[458,33,404,31],[458,36,404,34],[458,40,404,38],[458,41,404,39,"getTransceivers"],[458,56,404,54],[458,57,404,55],[458,58,404,56],[458,59,404,57,"filter"],[458,65,404,63],[458,66,404,64,"t"],[458,67,404,65],[458,71,404,69,"t"],[458,72,404,70],[458,73,404,71,"sender"],[458,79,404,77],[458,80,404,78,"id"],[458,82,404,80],[458,87,404,85,"existingSender"],[458,101,404,99],[458,102,404,100,"id"],[458,104,404,102],[458,105,404,103],[459,6,405,4,"existingTransceiver"],[459,25,405,23],[459,26,405,24,"_direction"],[459,36,405,34],[459,39,405,37,"existingTransceiver"],[459,58,405,56],[459,59,405,57,"direction"],[459,68,405,66],[459,73,405,71],[459,83,405,81],[459,86,405,84],[459,96,405,94],[459,99,405,97],[459,109,405,107],[460,4,406,2],[461,4,407,2],[461,10,407,8,"getStats"],[461,18,407,16,"getStats"],[461,19,407,17,"selector"],[461,27,407,25],[461,29,407,27],[462,6,408,4,"log"],[462,9,408,7],[462,10,408,8,"debug"],[462,15,408,13],[462,16,408,14],[462,19,408,17],[462,23,408,21],[462,24,408,22,"_pcId"],[462,29,408,27],[462,40,408,38],[462,41,408,39],[463,6,409,4],[463,10,409,8],[463,11,409,9,"selector"],[463,19,409,17],[463,21,409,19],[464,8,410,6],[464,14,410,12,"data"],[464,18,410,16],[464,21,410,19],[464,27,410,25,"WebRTCModule"],[464,39,410,37],[464,40,410,38,"peerConnectionGetStats"],[464,62,410,60],[464,63,410,61],[464,67,410,65],[464,68,410,66,"_pcId"],[464,73,410,71],[464,74,410,72],[466,8,412,6],[467,0,413,0],[468,0,414,0],[469,0,415,0],[470,0,416,0],[471,0,417,0],[472,0,418,0],[473,0,419,0],[474,0,420,0],[475,8,421,6],[475,15,421,13],[475,19,421,17,"Map"],[475,22,421,20],[475,23,421,21,"JSON"],[475,27,421,25],[475,28,421,26,"parse"],[475,33,421,31],[475,34,421,32,"data"],[475,38,421,36],[475,39,421,37],[475,40,421,38],[476,6,422,4],[476,7,422,5],[476,13,422,11],[477,8,423,6],[477,14,423,12,"senders"],[477,21,423,19],[477,24,423,22],[477,28,423,26],[477,29,423,27,"getSenders"],[477,39,423,37],[477,40,423,38],[477,41,423,39],[477,42,423,40,"filter"],[477,48,423,46],[477,49,423,47,"s"],[477,50,423,48],[477,54,423,52,"s"],[477,55,423,53],[477,56,423,54,"track"],[477,61,423,59],[477,66,423,64,"selector"],[477,74,423,72],[477,75,423,73],[478,8,424,6],[478,14,424,12,"receivers"],[478,23,424,21],[478,26,424,24],[478,30,424,28],[478,31,424,29,"getReceivers"],[478,43,424,41],[478,44,424,42],[478,45,424,43],[478,46,424,44,"filter"],[478,52,424,50],[478,53,424,51,"r"],[478,54,424,52],[478,58,424,56,"r"],[478,59,424,57],[478,60,424,58,"track"],[478,65,424,63],[478,70,424,68,"selector"],[478,78,424,76],[478,79,424,77],[479,8,425,6],[479,14,425,12,"matches"],[479,21,425,19],[479,24,425,22,"senders"],[479,31,425,29],[479,32,425,30,"length"],[479,38,425,36],[479,41,425,39,"receivers"],[479,50,425,48],[479,51,425,49,"length"],[479,57,425,55],[480,8,426,6],[480,12,426,10,"matches"],[480,19,426,17],[480,24,426,22],[480,25,426,23],[480,27,426,25],[481,10,427,8],[481,16,427,14],[481,20,427,18,"Error"],[481,25,427,23],[481,26,427,24],[481,87,427,85],[481,88,427,86],[482,8,428,6],[482,9,428,7],[482,15,428,13],[482,19,428,17,"matches"],[482,26,428,24],[482,29,428,27],[482,30,428,28],[482,32,428,30],[483,10,429,8],[483,16,429,14],[483,20,429,18,"Error"],[483,25,429,23],[483,26,429,24],[483,83,429,81],[483,84,429,82],[484,8,430,6],[484,9,430,7],[484,15,430,13],[485,10,431,8],[485,16,431,14,"sr"],[485,18,431,16],[485,21,431,19,"senders"],[485,28,431,26],[485,29,431,27],[485,30,431,28],[485,31,431,29],[485,35,431,33,"receivers"],[485,44,431,42],[485,45,431,43],[485,46,431,44],[485,47,431,45],[486,10,432,8],[486,17,432,15,"sr"],[486,19,432,17],[486,20,432,18,"getStats"],[486,28,432,26],[486,29,432,27],[486,30,432,28],[487,8,433,6],[488,6,434,4],[489,4,435,2],[490,4,436,2,"getTransceivers"],[490,19,436,17,"getTransceivers"],[490,20,436,17],[490,22,436,20],[491,6,437,4],[491,13,437,11],[491,17,437,15],[491,18,437,16,"_transceivers"],[491,31,437,29],[491,32,437,30,"map"],[491,35,437,33],[491,36,437,34,"e"],[491,37,437,35],[491,41,437,39,"e"],[491,42,437,40],[491,43,437,41,"transceiver"],[491,54,437,52],[491,55,437,53],[492,4,438,2],[493,4,439,2,"getSenders"],[493,14,439,12,"getSenders"],[493,15,439,12],[493,17,439,15],[494,6,440,4],[494,13,440,11],[494,17,440,15],[494,18,440,16,"_transceivers"],[494,31,440,29],[494,32,440,30,"filter"],[494,38,440,36],[494,39,440,37,"e"],[494,40,440,38],[494,44,440,42],[494,45,440,43,"e"],[494,46,440,44],[494,47,440,45,"transceiver"],[494,58,440,56],[494,59,440,57,"stopped"],[494,66,440,64],[494,67,440,65],[494,68,440,66,"map"],[494,71,440,69],[494,72,440,70,"e"],[494,73,440,71],[494,77,440,75,"e"],[494,78,440,76],[494,79,440,77,"transceiver"],[494,90,440,88],[494,91,440,89,"sender"],[494,97,440,95],[494,98,440,96],[495,4,441,2],[496,4,442,2,"getReceivers"],[496,16,442,14,"getReceivers"],[496,17,442,14],[496,19,442,17],[497,6,443,4],[497,13,443,11],[497,17,443,15],[497,18,443,16,"_transceivers"],[497,31,443,29],[497,32,443,30,"filter"],[497,38,443,36],[497,39,443,37,"e"],[497,40,443,38],[497,44,443,42],[497,45,443,43,"e"],[497,46,443,44],[497,47,443,45,"transceiver"],[497,58,443,56],[497,59,443,57,"stopped"],[497,66,443,64],[497,67,443,65],[497,68,443,66,"map"],[497,71,443,69],[497,72,443,70,"e"],[497,73,443,71],[497,77,443,75,"e"],[497,78,443,76],[497,79,443,77,"transceiver"],[497,90,443,88],[497,91,443,89,"receiver"],[497,99,443,97],[497,100,443,98],[498,4,444,2],[499,4,445,2,"close"],[499,9,445,7,"close"],[499,10,445,7],[499,12,445,10],[500,6,446,4,"log"],[500,9,446,7],[500,10,446,8,"debug"],[500,15,446,13],[500,16,446,14],[500,19,446,17],[500,23,446,21],[500,24,446,22,"_pcId"],[500,29,446,27],[500,37,446,35],[500,38,446,36],[501,6,447,4],[501,10,447,8],[501,14,447,12],[501,15,447,13,"connectionState"],[501,30,447,28],[501,35,447,33],[501,43,447,41],[501,45,447,43],[502,8,448,6],[503,6,449,4],[504,6,450,4,"WebRTCModule"],[504,18,450,16],[504,19,450,17,"peerConnectionClose"],[504,38,450,36],[504,39,450,37],[504,43,450,41],[504,44,450,42,"_pcId"],[504,49,450,47],[504,50,450,48],[506,6,452,4],[507,6,453,4],[507,10,453,8],[507,11,453,9,"_transceivers"],[507,24,453,22],[507,25,453,23,"forEach"],[507,32,453,30],[507,33,453,31,"_ref"],[507,37,453,35],[507,41,453,39],[508,8,454,6],[508,12,454,10],[509,10,455,8,"transceiver"],[510,8,456,6],[510,9,456,7],[510,12,456,10,"_ref"],[510,16,456,14],[511,8,457,6,"transceiver"],[511,19,457,17],[511,20,457,18,"_setStopped"],[511,31,457,29],[511,32,457,30],[511,33,457,31],[512,6,458,4],[512,7,458,5],[512,8,458,6],[513,4,459,2],[514,4,460,2,"restartIce"],[514,14,460,12,"restartIce"],[514,15,460,12],[514,17,460,15],[515,6,461,4,"WebRTCModule"],[515,18,461,16],[515,19,461,17,"peerConnectionRestartIce"],[515,43,461,41],[515,44,461,42],[515,48,461,46],[515,49,461,47,"_pcId"],[515,54,461,52],[515,55,461,53],[516,4,462,2],[517,4,463,2,"_registerEvents"],[517,19,463,17,"_registerEvents"],[517,20,463,17],[517,22,463,20],[518,6,464,4],[518,7,464,5],[518,8,464,6],[518,10,464,8,"_EventEmitter"],[518,23,464,21],[518,24,464,22,"addListener"],[518,35,464,33],[518,37,464,35],[518,41,464,39],[518,43,464,41],[518,80,464,78],[518,82,464,80,"ev"],[518,84,464,82],[518,88,464,86],[519,8,465,6],[519,12,465,10,"ev"],[519,14,465,12],[519,15,465,13,"pcId"],[519,19,465,17],[519,24,465,22],[519,28,465,26],[519,29,465,27,"_pcId"],[519,34,465,32],[519,36,465,34],[520,10,466,8],[521,8,467,6],[522,8,468,6],[522,12,468,10],[522,13,468,11,"dispatchEvent"],[522,26,468,24],[522,27,468,25],[522,31,468,29,"_index"],[522,37,468,35],[522,38,468,36,"Event"],[522,43,468,41],[522,44,468,42],[522,63,468,61],[522,64,468,62],[522,65,468,63],[523,6,469,4],[523,7,469,5],[523,8,469,6],[524,6,470,4],[524,7,470,5],[524,8,470,6],[524,10,470,8,"_EventEmitter"],[524,23,470,21],[524,24,470,22,"addListener"],[524,35,470,33],[524,37,470,35],[524,41,470,39],[524,43,470,41],[524,79,470,77],[524,81,470,79,"ev"],[524,83,470,81],[524,87,470,85],[525,8,471,6],[525,12,471,10,"ev"],[525,14,471,12],[525,15,471,13,"pcId"],[525,19,471,17],[525,24,471,22],[525,28,471,26],[525,29,471,27,"_pcId"],[525,34,471,32],[525,36,471,34],[526,10,472,8],[527,8,473,6],[528,8,474,6],[528,12,474,10],[528,13,474,11,"iceConnectionState"],[528,31,474,29],[528,34,474,32,"ev"],[528,36,474,34],[528,37,474,35,"iceConnectionState"],[528,55,474,53],[529,8,475,6],[529,12,475,10],[529,13,475,11,"dispatchEvent"],[529,26,475,24],[529,27,475,25],[529,31,475,29,"_index"],[529,37,475,35],[529,38,475,36,"Event"],[529,43,475,41],[529,44,475,42],[529,70,475,68],[529,71,475,69],[529,72,475,70],[530,6,476,4],[530,7,476,5],[530,8,476,6],[531,6,477,4],[531,7,477,5],[531,8,477,6],[531,10,477,8,"_EventEmitter"],[531,23,477,21],[531,24,477,22,"addListener"],[531,35,477,33],[531,37,477,35],[531,41,477,39],[531,43,477,41],[531,71,477,69],[531,73,477,71,"ev"],[531,75,477,73],[531,79,477,77],[532,8,478,6],[532,12,478,10,"ev"],[532,14,478,12],[532,15,478,13,"pcId"],[532,19,478,17],[532,24,478,22],[532,28,478,26],[532,29,478,27,"_pcId"],[532,34,478,32],[532,36,478,34],[533,10,479,8],[534,8,480,6],[535,8,481,6],[535,12,481,10],[535,13,481,11,"connectionState"],[535,28,481,26],[535,31,481,29,"ev"],[535,33,481,31],[535,34,481,32,"connectionState"],[535,49,481,47],[536,8,482,6],[536,12,482,10],[536,13,482,11,"dispatchEvent"],[536,26,482,24],[536,27,482,25],[536,31,482,29,"_index"],[536,37,482,35],[536,38,482,36,"Event"],[536,43,482,41],[536,44,482,42],[536,67,482,65],[536,68,482,66],[536,69,482,67],[537,8,483,6],[537,12,483,10,"ev"],[537,14,483,12],[537,15,483,13,"connectionState"],[537,30,483,28],[537,35,483,33],[537,43,483,41],[537,45,483,43],[538,10,484,8],[539,10,485,8],[539,11,485,9],[539,12,485,10],[539,14,485,12,"_EventEmitter"],[539,27,485,25],[539,28,485,26,"removeListener"],[539,42,485,40],[539,44,485,42],[539,48,485,46],[539,49,485,47],[540,10,486,8,"WebRTCModule"],[540,22,486,20],[540,23,486,21,"peerConnectionDispose"],[540,44,486,42],[540,45,486,43],[540,49,486,47],[540,50,486,48,"_pcId"],[540,55,486,53],[540,56,486,54],[541,8,487,6],[542,6,488,4],[542,7,488,5],[542,8,488,6],[543,6,489,4],[543,7,489,5],[543,8,489,6],[543,10,489,8,"_EventEmitter"],[543,23,489,21],[543,24,489,22,"addListener"],[543,35,489,33],[543,37,489,35],[543,41,489,39],[543,43,489,41],[543,80,489,78],[543,82,489,80,"ev"],[543,84,489,82],[543,88,489,86],[544,8,490,6],[544,12,490,10,"ev"],[544,14,490,12],[544,15,490,13,"pcId"],[544,19,490,17],[544,24,490,22],[544,28,490,26],[544,29,490,27,"_pcId"],[544,34,490,32],[544,36,490,34],[545,10,491,8],[546,8,492,6],[547,8,493,6],[547,12,493,10],[547,13,493,11,"signalingState"],[547,27,493,25],[547,30,493,28,"ev"],[547,32,493,30],[547,33,493,31,"signalingState"],[547,47,493,45],[548,8,494,6],[548,12,494,10],[548,13,494,11,"dispatchEvent"],[548,26,494,24],[548,27,494,25],[548,31,494,29,"_index"],[548,37,494,35],[548,38,494,36,"Event"],[548,43,494,41],[548,44,494,42],[548,66,494,64],[548,67,494,65],[548,68,494,66],[549,6,495,4],[549,7,495,5],[549,8,495,6],[551,6,497,4],[552,6,498,4],[552,7,498,5],[552,8,498,6],[552,10,498,8,"_EventEmitter"],[552,23,498,21],[552,24,498,22,"addListener"],[552,35,498,33],[552,37,498,35],[552,41,498,39],[552,43,498,41],[552,66,498,64],[552,68,498,66,"ev"],[552,70,498,68],[552,74,498,72],[553,8,499,6],[553,12,499,10,"ev"],[553,14,499,12],[553,15,499,13,"pcId"],[553,19,499,17],[553,24,499,22],[553,28,499,26],[553,29,499,27,"_pcId"],[553,34,499,32],[553,36,499,34],[554,10,500,8],[555,8,501,6],[556,8,502,6,"log"],[556,11,502,9],[556,12,502,10,"debug"],[556,17,502,15],[556,18,502,16],[556,21,502,19],[556,25,502,23],[556,26,502,24,"_pcId"],[556,31,502,29],[556,41,502,39],[556,42,502,40],[558,8,504,6],[559,8,505,6],[560,8,506,6],[561,8,507,6],[561,12,507,10],[561,13,507,11,"_pendingTrackEvents"],[561,32,507,30],[561,33,507,31,"push"],[561,37,507,35],[561,38,507,36,"ev"],[561,40,507,38],[561,41,507,39],[562,6,508,4],[562,7,508,5],[562,8,508,6],[563,6,509,4],[563,7,509,5],[563,8,509,6],[563,10,509,8,"_EventEmitter"],[563,23,509,21],[563,24,509,22,"addListener"],[563,35,509,33],[563,37,509,35],[563,41,509,39],[563,43,509,41],[563,72,509,70],[563,74,509,72,"ev"],[563,76,509,74],[563,80,509,78],[564,8,510,6],[564,12,510,10,"ev"],[564,14,510,12],[564,15,510,13,"pcId"],[564,19,510,17],[564,24,510,22],[564,28,510,26],[564,29,510,27,"_pcId"],[564,34,510,32],[564,36,510,34],[565,10,511,8],[566,8,512,6],[567,8,513,6,"log"],[567,11,513,9],[567,12,513,10,"debug"],[567,17,513,15],[567,18,513,16],[567,21,513,19],[567,25,513,23],[567,26,513,24,"_pcId"],[567,31,513,29],[567,49,513,47,"ev"],[567,51,513,49],[567,52,513,50,"receiverId"],[567,62,513,60],[567,64,513,62],[567,65,513,63],[568,8,514,6],[568,14,514,12,"receiver"],[568,22,514,20],[568,25,514,23],[568,29,514,27],[568,30,514,28,"getReceivers"],[568,42,514,40],[568,43,514,41],[568,44,514,42],[568,45,514,43,"find"],[568,49,514,47],[568,50,514,48,"r"],[568,51,514,49],[568,55,514,53,"r"],[568,56,514,54],[568,57,514,55,"id"],[568,59,514,57],[568,64,514,62,"ev"],[568,66,514,64],[568,67,514,65,"receiverId"],[568,77,514,75],[568,78,514,76],[569,8,515,6],[569,14,515,12,"track"],[569,19,515,17],[569,22,515,20,"receiver"],[569,30,515,28],[569,35,515,33],[569,39,515,37],[569,43,515,41,"receiver"],[569,51,515,49],[569,56,515,54],[569,61,515,59],[569,62,515,60],[569,65,515,63],[569,70,515,68],[569,71,515,69],[569,74,515,72,"receiver"],[569,82,515,80],[569,83,515,81,"track"],[569,88,515,86],[570,8,516,6],[570,12,516,10,"receiver"],[570,20,516,18],[570,24,516,22,"track"],[570,29,516,27],[570,31,516,29],[571,10,517,8],[572,10,518,8],[573,10,519,8],[574,10,520,8],[575,10,521,8],[576,10,522,8],[576,15,522,13],[576,21,522,19,"stream"],[576,27,522,25],[576,31,522,29],[576,35,522,33],[576,36,522,34,"_remoteStreams"],[576,50,522,48],[576,51,522,49,"values"],[576,57,522,55],[576,58,522,56],[576,59,522,57],[576,61,522,59],[577,12,523,10],[577,16,523,14,"stream"],[577,22,523,20],[577,23,523,21,"_tracks"],[577,30,523,28],[577,31,523,29,"includes"],[577,39,523,37],[577,40,523,38,"track"],[577,45,523,43],[577,46,523,44],[577,48,523,46],[578,14,524,12],[578,20,524,18,"trackIdx"],[578,28,524,26],[578,31,524,29,"stream"],[578,37,524,35],[578,38,524,36,"_tracks"],[578,45,524,43],[578,46,524,44,"indexOf"],[578,53,524,51],[578,54,524,52,"track"],[578,59,524,57],[578,60,524,58],[579,14,525,12,"log"],[579,17,525,15],[579,18,525,16,"debug"],[579,23,525,21],[579,24,525,22],[579,27,525,25],[579,31,525,29],[579,32,525,30,"_pcId"],[579,37,525,35],[579,53,525,51,"track"],[579,58,525,56],[579,59,525,57,"id"],[579,61,525,59],[579,63,525,61],[579,64,525,62],[580,14,526,12,"stream"],[580,20,526,18],[580,21,526,19,"_tracks"],[580,28,526,26],[580,29,526,27,"splice"],[580,35,526,33],[580,36,526,34,"trackIdx"],[580,44,526,42],[580,46,526,44],[580,47,526,45],[580,48,526,46],[581,14,527,12,"stream"],[581,20,527,18],[581,21,527,19,"dispatchEvent"],[581,34,527,32],[581,35,527,33],[581,39,527,37,"_MediaStreamTrackEvent"],[581,61,527,59],[581,62,527,60,"default"],[581,69,527,67],[581,70,527,68],[581,83,527,81],[581,85,527,83],[582,16,528,14,"track"],[583,14,529,12],[583,15,529,13],[583,16,529,14],[583,17,529,15],[585,14,531,12],[586,14,532,12,"track"],[586,19,532,17],[586,20,532,18,"_setMutedInternal"],[586,37,532,35],[586,38,532,36],[586,42,532,40],[586,43,532,41],[587,12,533,10],[588,10,534,8],[589,8,535,6],[590,6,536,4],[590,7,536,5],[590,8,536,6],[591,6,537,4],[591,7,537,5],[591,8,537,6],[591,10,537,8,"_EventEmitter"],[591,23,537,21],[591,24,537,22,"addListener"],[591,35,537,33],[591,37,537,35],[591,41,537,39],[591,43,537,41],[591,74,537,72],[591,76,537,74,"ev"],[591,78,537,76],[591,82,537,80],[592,8,538,6],[592,12,538,10,"ev"],[592,14,538,12],[592,15,538,13,"pcId"],[592,19,538,17],[592,24,538,22],[592,28,538,26],[592,29,538,27,"_pcId"],[592,34,538,32],[592,36,538,34],[593,10,539,8],[594,8,540,6],[595,8,541,6],[595,14,541,12,"sdpInfo"],[595,21,541,19],[595,24,541,22,"ev"],[595,26,541,24],[595,27,541,25,"sdp"],[595,30,541,28],[597,8,543,6],[598,8,544,6],[598,12,544,10,"sdpInfo"],[598,19,544,17],[598,20,544,18,"type"],[598,24,544,22],[598,28,544,26,"sdpInfo"],[598,35,544,33],[598,36,544,34,"sdp"],[598,39,544,37],[598,41,544,39],[599,10,545,8],[599,14,545,12],[599,15,545,13,"localDescription"],[599,31,545,29],[599,34,545,32],[599,38,545,36,"_RTCSessionDescription"],[599,60,545,58],[599,61,545,59,"default"],[599,68,545,66],[599,69,545,67,"sdpInfo"],[599,76,545,74],[599,77,545,75],[600,8,546,6],[600,9,546,7],[600,15,546,13],[601,10,547,8],[601,14,547,12],[601,15,547,13,"localDescription"],[601,31,547,29],[601,34,547,32],[601,38,547,36],[602,8,548,6],[603,8,549,6],[603,14,549,12,"candidate"],[603,23,549,21],[603,26,549,24],[603,30,549,28,"_RTCIceCandidate"],[603,46,549,44],[603,47,549,45,"default"],[603,54,549,52],[603,55,549,53,"ev"],[603,57,549,55],[603,58,549,56,"candidate"],[603,67,549,65],[603,68,549,66],[604,8,550,6],[604,12,550,10],[604,13,550,11,"dispatchEvent"],[604,26,550,24],[604,27,550,25],[604,31,550,29,"_RTCIceCandidateEvent"],[604,52,550,50],[604,53,550,51,"default"],[604,60,550,58],[604,61,550,59],[604,75,550,73],[604,77,550,75],[605,10,551,8,"candidate"],[606,8,552,6],[606,9,552,7],[606,10,552,8],[606,11,552,9],[607,6,553,4],[607,7,553,5],[607,8,553,6],[608,6,554,4],[608,7,554,5],[608,8,554,6],[608,10,554,8,"_EventEmitter"],[608,23,554,21],[608,24,554,22,"addListener"],[608,35,554,33],[608,37,554,35],[608,41,554,39],[608,43,554,41],[608,78,554,76],[608,80,554,78,"ev"],[608,82,554,80],[608,86,554,84],[609,8,555,6],[609,12,555,10,"ev"],[609,14,555,12],[609,15,555,13,"pcId"],[609,19,555,17],[609,24,555,22],[609,28,555,26],[609,29,555,27,"_pcId"],[609,34,555,32],[609,36,555,34],[610,10,556,8],[611,8,557,6],[612,8,558,6],[612,12,558,10],[612,13,558,11,"iceGatheringState"],[612,30,558,28],[612,33,558,31,"ev"],[612,35,558,33],[612,36,558,34,"iceGatheringState"],[612,53,558,51],[613,8,559,6],[613,12,559,10],[613,16,559,14],[613,17,559,15,"iceGatheringState"],[613,34,559,32],[613,39,559,37],[613,49,559,47],[613,51,559,49],[614,10,560,8],[614,16,560,14,"sdpInfo"],[614,23,560,21],[614,26,560,24,"ev"],[614,28,560,26],[614,29,560,27,"sdp"],[614,32,560,30],[616,10,562,8],[617,10,563,8],[617,14,563,12,"sdpInfo"],[617,21,563,19],[617,22,563,20,"type"],[617,26,563,24],[617,30,563,28,"sdpInfo"],[617,37,563,35],[617,38,563,36,"sdp"],[617,41,563,39],[617,43,563,41],[618,12,564,10],[618,16,564,14],[618,17,564,15,"localDescription"],[618,33,564,31],[618,36,564,34],[618,40,564,38,"_RTCSessionDescription"],[618,62,564,60],[618,63,564,61,"default"],[618,70,564,68],[618,71,564,69,"sdpInfo"],[618,78,564,76],[618,79,564,77],[619,10,565,8],[619,11,565,9],[619,17,565,15],[620,12,566,10],[620,16,566,14],[620,17,566,15,"localDescription"],[620,33,566,31],[620,36,566,34],[620,40,566,38],[621,10,567,8],[622,10,568,8],[622,14,568,12],[622,15,568,13,"dispatchEvent"],[622,28,568,26],[622,29,568,27],[622,33,568,31,"_RTCIceCandidateEvent"],[622,54,568,52],[622,55,568,53,"default"],[622,62,568,60],[622,63,568,61],[622,77,568,75],[622,79,568,77],[623,12,569,10,"candidate"],[623,21,569,19],[623,23,569,21],[624,10,570,8],[624,11,570,9],[624,12,570,10],[624,13,570,11],[625,8,571,6],[626,8,572,6],[626,12,572,10],[626,13,572,11,"dispatchEvent"],[626,26,572,24],[626,27,572,25],[626,31,572,29,"_index"],[626,37,572,35],[626,38,572,36,"Event"],[626,43,572,41],[626,44,572,42],[626,69,572,67],[626,70,572,68],[626,71,572,69],[627,6,573,4],[627,7,573,5],[627,8,573,6],[628,6,574,4],[628,7,574,5],[628,8,574,6],[628,10,574,8,"_EventEmitter"],[628,23,574,21],[628,24,574,22,"addListener"],[628,35,574,33],[628,37,574,35],[628,41,574,39],[628,43,574,41],[628,77,574,75],[628,79,574,77,"ev"],[628,81,574,79],[628,85,574,83],[629,8,575,6],[629,12,575,10,"ev"],[629,14,575,12],[629,15,575,13,"pcId"],[629,19,575,17],[629,24,575,22],[629,28,575,26],[629,29,575,27,"_pcId"],[629,34,575,32],[629,36,575,34],[630,10,576,8],[631,8,577,6],[632,8,578,6],[632,14,578,12,"channel"],[632,21,578,19],[632,24,578,22],[632,28,578,26,"_RTCDataChannel"],[632,43,578,41],[632,44,578,42,"default"],[632,51,578,49],[632,52,578,50,"ev"],[632,54,578,52],[632,55,578,53,"dataChannel"],[632,66,578,64],[632,67,578,65],[633,8,579,6],[633,12,579,10],[633,13,579,11,"dispatchEvent"],[633,26,579,24],[633,27,579,25],[633,31,579,29,"_RTCDataChannelEvent"],[633,51,579,49],[633,52,579,50,"default"],[633,59,579,57],[633,60,579,58],[633,73,579,71],[633,75,579,73],[634,10,580,8,"channel"],[635,8,581,6],[635,9,581,7],[635,10,581,8],[635,11,581,9],[637,8,583,6],[638,8,584,6],[639,8,585,6,"channel"],[639,15,585,13],[639,16,585,14,"dispatchEvent"],[639,29,585,27],[639,30,585,28],[639,34,585,32,"_RTCDataChannelEvent"],[639,54,585,52],[639,55,585,53,"default"],[639,62,585,60],[639,63,585,61],[639,69,585,67],[639,71,585,69],[640,10,586,8,"channel"],[641,8,587,6],[641,9,587,7],[641,10,587,8],[641,11,587,9],[642,6,588,4],[642,7,588,5],[642,8,588,6],[643,6,589,4],[643,7,589,5],[643,8,589,6],[643,10,589,8,"_EventEmitter"],[643,23,589,21],[643,24,589,22,"addListener"],[643,35,589,33],[643,37,589,35],[643,41,589,39],[643,43,589,41],[643,72,589,70],[643,74,589,72,"ev"],[643,76,589,74],[643,80,589,78],[644,8,590,6],[644,12,590,10,"ev"],[644,14,590,12],[644,15,590,13,"pcId"],[644,19,590,17],[644,24,590,22],[644,28,590,26],[644,29,590,27,"_pcId"],[644,34,590,32],[644,36,590,34],[645,10,591,8],[646,8,592,6],[647,8,593,6],[647,14,593,12],[647,15,593,13,"track"],[647,20,593,18],[647,21,593,19],[647,24,593,22],[647,28,593,26],[647,29,593,27,"getReceivers"],[647,41,593,39],[647,42,593,40],[647,43,593,41],[647,44,593,42,"map"],[647,47,593,45],[647,48,593,46,"r"],[647,49,593,47],[647,53,593,51,"r"],[647,54,593,52],[647,55,593,53,"track"],[647,60,593,58],[647,61,593,59],[647,62,593,60,"filter"],[647,68,593,66],[647,69,593,67,"t"],[647,70,593,68],[647,74,593,72],[647,75,593,73,"t"],[647,76,593,74],[647,81,593,79],[647,85,593,83],[647,89,593,87,"t"],[647,90,593,88],[647,95,593,93],[647,100,593,98],[647,101,593,99],[647,104,593,102],[647,109,593,107],[647,110,593,108],[647,113,593,111,"t"],[647,114,593,112],[647,115,593,113,"id"],[647,117,593,115],[647,123,593,121,"ev"],[647,125,593,123],[647,126,593,124,"trackId"],[647,133,593,131],[647,134,593,132],[648,8,594,6],[648,12,594,10,"track"],[648,17,594,15],[648,19,594,17],[649,10,595,8,"track"],[649,15,595,13],[649,16,595,14,"_setMutedInternal"],[649,33,595,31],[649,34,595,32,"ev"],[649,36,595,34],[649,37,595,35,"muted"],[649,42,595,40],[649,43,595,41],[650,8,596,6],[651,6,597,4],[651,7,597,5],[651,8,597,6],[652,4,598,2],[654,4,600,2],[655,0,601,0],[656,0,602,0],[657,0,603,0],[658,0,604,0],[659,0,605,0],[660,0,606,0],[661,0,607,0],[662,0,608,0],[663,0,609,0],[664,0,610,0],[665,4,611,2,"createDataChannel"],[665,21,611,19,"createDataChannel"],[665,22,611,20,"label"],[665,27,611,25],[665,29,611,27,"dataChannelDict"],[665,44,611,42],[665,46,611,44],[666,6,612,4],[666,10,612,8,"arguments"],[666,19,612,17],[666,20,612,18,"length"],[666,26,612,24],[666,31,612,29],[666,32,612,30],[666,34,612,32],[667,8,613,6],[667,14,613,12],[667,18,613,16,"TypeError"],[667,27,613,25],[667,28,613,26],[667,64,613,62],[667,65,613,63],[668,6,614,4],[669,6,615,4],[669,10,615,8,"dataChannelDict"],[669,25,615,23],[669,29,615,27],[669,33,615,31],[669,37,615,35,"dataChannelDict"],[669,52,615,50],[669,54,615,52],[670,8,616,6],[670,14,616,12,"id"],[670,16,616,14],[670,19,616,17,"dataChannelDict"],[670,34,616,32],[670,35,616,33,"id"],[670,37,616,35],[671,8,617,6],[671,12,617,10],[671,19,617,17,"id"],[671,21,617,19],[671,26,617,24],[671,34,617,32],[671,36,617,34],[672,10,618,8],[672,16,618,14],[672,20,618,18,"TypeError"],[672,29,618,27],[672,30,618,28],[672,65,618,63],[672,68,618,66,"id"],[672,70,618,68],[672,71,618,69],[673,8,619,6],[674,6,620,4],[675,6,621,4],[675,12,621,10,"channelInfo"],[675,23,621,21],[675,26,621,24,"WebRTCModule"],[675,38,621,36],[675,39,621,37,"createDataChannel"],[675,56,621,54],[675,57,621,55],[675,61,621,59],[675,62,621,60,"_pcId"],[675,67,621,65],[675,69,621,67,"String"],[675,75,621,73],[675,76,621,74,"label"],[675,81,621,79],[675,82,621,80],[675,84,621,82,"dataChannelDict"],[675,99,621,97],[675,100,621,98],[676,6,622,4],[676,10,622,8,"channelInfo"],[676,21,622,19],[676,26,622,24],[676,30,622,28],[676,32,622,30],[677,8,623,6],[677,14,623,12],[677,18,623,16,"TypeError"],[677,27,623,25],[677,28,623,26],[677,62,623,60],[677,63,623,61],[678,6,624,4],[679,6,625,4],[679,13,625,11],[679,17,625,15,"_RTCDataChannel"],[679,32,625,30],[679,33,625,31,"default"],[679,40,625,38],[679,41,625,39,"channelInfo"],[679,52,625,50],[679,53,625,51],[680,4,626,2],[682,4,628,2],[683,0,629,0],[684,0,630,0],[685,0,631,0],[686,4,632,2,"_trackExists"],[686,16,632,14,"_trackExists"],[686,17,632,15,"track"],[686,22,632,20],[686,24,632,22],[687,6,633,4],[687,12,633,10],[687,13,633,11,"sender"],[687,19,633,17],[687,20,633,18],[687,23,633,21],[687,27,633,25],[687,28,633,26,"getSenders"],[687,38,633,36],[687,39,633,37],[687,40,633,38],[687,41,633,39,"filter"],[687,47,633,45],[687,48,633,46,"sender"],[687,54,633,52],[687,58,633,56],[688,8,634,6],[688,12,634,10,"_sender$track"],[688,25,634,23],[689,8,635,6],[689,15,635,13],[689,16,635,14],[689,17,635,15,"_sender$track"],[689,30,635,28],[689,33,635,31,"sender"],[689,39,635,37],[689,40,635,38,"track"],[689,45,635,43],[689,51,635,49],[689,55,635,53],[689,59,635,57,"_sender$track"],[689,72,635,70],[689,77,635,75],[689,82,635,80],[689,83,635,81],[689,86,635,84],[689,91,635,89],[689,92,635,90],[689,95,635,93,"_sender$track"],[689,108,635,106],[689,109,635,107,"id"],[689,111,635,109],[689,117,635,115,"track"],[689,122,635,120],[689,123,635,121,"id"],[689,125,635,123],[690,6,636,4],[690,7,636,5],[690,8,636,6],[691,6,637,4],[691,13,637,11,"sender"],[691,19,637,17],[691,22,637,20],[691,26,637,24],[691,29,637,27],[691,34,637,32],[692,4,638,2],[694,4,640,2],[695,0,641,0],[696,0,642,0],[697,4,643,2,"_updateTransceivers"],[697,23,643,21,"_updateTransceivers"],[697,24,643,22,"transceiverUpdates"],[697,42,643,40],[697,44,643,42],[698,6,644,4],[698,10,644,8,"removeStopped"],[698,23,644,21],[698,26,644,24,"arguments"],[698,35,644,33],[698,36,644,34,"length"],[698,42,644,40],[698,45,644,43],[698,46,644,44],[698,50,644,48,"arguments"],[698,59,644,57],[698,60,644,58],[698,61,644,59],[698,62,644,60],[698,67,644,65,"undefined"],[698,76,644,74],[698,79,644,77,"arguments"],[698,88,644,86],[698,89,644,87],[698,90,644,88],[698,91,644,89],[698,94,644,92],[698,99,644,97],[699,6,645,4],[699,11,645,9],[699,17,645,15,"update"],[699,23,645,21],[699,27,645,25,"transceiverUpdates"],[699,45,645,43],[699,47,645,45],[700,8,646,6],[700,14,646,12],[700,15,646,13,"transceiver"],[700,26,646,24],[700,27,646,25],[700,30,646,28],[700,34,646,32],[700,35,646,33,"getTransceivers"],[700,50,646,48],[700,51,646,49],[700,52,646,50],[700,53,646,51,"filter"],[700,59,646,57],[700,60,646,58,"t"],[700,61,646,59],[700,65,646,63,"t"],[700,66,646,64],[700,67,646,65,"sender"],[700,73,646,71],[700,74,646,72,"id"],[700,76,646,74],[700,81,646,79,"update"],[700,87,646,85],[700,88,646,86,"transceiverId"],[700,101,646,99],[700,102,646,100],[701,8,647,6],[701,12,647,10],[701,13,647,11,"transceiver"],[701,24,647,22],[701,26,647,24],[702,10,648,8],[703,8,649,6],[704,8,650,6],[704,12,650,10,"update"],[704,18,650,16],[704,19,650,17,"currentDirection"],[704,35,650,33],[704,37,650,35],[705,10,651,8,"transceiver"],[705,21,651,19],[705,22,651,20,"_currentDirection"],[705,39,651,37],[705,42,651,40,"update"],[705,48,651,46],[705,49,651,47,"currentDirection"],[705,65,651,63],[706,8,652,6],[707,8,653,6,"transceiver"],[707,19,653,17],[707,20,653,18,"_mid"],[707,24,653,22],[707,27,653,25,"update"],[707,33,653,31],[707,34,653,32,"mid"],[707,37,653,35],[708,8,654,6,"transceiver"],[708,19,654,17],[708,20,654,18,"_stopped"],[708,28,654,26],[708,31,654,29,"Boolean"],[708,38,654,36],[708,39,654,37,"update"],[708,45,654,43],[708,46,654,44,"isStopped"],[708,55,654,53],[708,56,654,54],[709,8,655,6,"transceiver"],[709,19,655,17],[709,20,655,18,"_sender"],[709,27,655,25],[709,28,655,26,"_rtpParameters"],[709,42,655,40],[709,45,655,43],[709,49,655,47,"_RTCRtpSendParameters"],[709,70,655,68],[709,71,655,69,"default"],[709,78,655,76],[709,79,655,77,"update"],[709,85,655,83],[709,86,655,84,"senderRtpParameters"],[709,105,655,103],[709,106,655,104],[710,8,656,6,"transceiver"],[710,19,656,17],[710,20,656,18,"_receiver"],[710,29,656,27],[710,30,656,28,"_rtpParameters"],[710,44,656,42],[710,47,656,45],[710,51,656,49,"_RTCRtpReceiveParameters"],[710,75,656,73],[710,76,656,74,"default"],[710,83,656,81],[710,84,656,82,"update"],[710,90,656,88],[710,91,656,89,"receiverRtpParameters"],[710,112,656,110],[710,113,656,111],[711,6,657,4],[712,6,658,4],[712,10,658,8,"removeStopped"],[712,23,658,21],[712,25,658,23],[713,8,659,6],[713,14,659,12,"stopped"],[713,21,659,19],[713,24,659,22],[713,28,659,26],[713,29,659,27,"getTransceivers"],[713,44,659,42],[713,45,659,43],[713,46,659,44],[713,47,659,45,"filter"],[713,53,659,51],[713,54,659,52,"t"],[713,55,659,53],[713,59,659,57,"t"],[713,60,659,58],[713,61,659,59,"stopped"],[713,68,659,66],[713,69,659,67],[714,8,660,6],[714,14,660,12,"newTransceivers"],[714,29,660,27],[714,32,660,30],[714,36,660,34],[714,37,660,35,"_transceivers"],[714,50,660,48],[714,51,660,49,"filter"],[714,57,660,55],[714,58,660,56,"t"],[714,59,660,57],[714,63,660,61],[714,64,660,62,"stopped"],[714,71,660,69],[714,72,660,70,"includes"],[714,80,660,78],[714,81,660,79,"t"],[714,82,660,80],[714,83,660,81,"transceiver"],[714,94,660,92],[714,95,660,93],[714,96,660,94],[715,8,661,6],[715,12,661,10],[715,13,661,11,"_transceivers"],[715,26,661,24],[715,29,661,27,"newTransceivers"],[715,44,661,42],[716,6,662,4],[717,4,663,2],[719,4,665,2],[720,0,666,0],[721,0,667,0],[722,0,668,0],[723,0,669,0],[724,4,670,2,"_insertTransceiverSorted"],[724,28,670,26,"_insertTransceiverSorted"],[724,29,670,27,"order"],[724,34,670,32],[724,36,670,34,"transceiver"],[724,47,670,45],[724,49,670,47],[725,6,671,4],[725,10,671,8],[725,11,671,9,"_transceivers"],[725,24,671,22],[725,25,671,23,"push"],[725,29,671,27],[725,30,671,28],[726,8,672,6,"order"],[726,13,672,11],[727,8,673,6,"transceiver"],[728,6,674,4],[728,7,674,5],[728,8,674,6],[729,6,675,4],[729,10,675,8],[729,11,675,9,"_transceivers"],[729,24,675,22],[729,25,675,23,"sort"],[729,29,675,27],[729,30,675,28],[729,31,675,29,"a"],[729,32,675,30],[729,34,675,32,"b"],[729,35,675,33],[729,40,675,38,"a"],[729,41,675,39],[729,42,675,40,"order"],[729,47,675,45],[729,50,675,48,"b"],[729,51,675,49],[729,52,675,50,"order"],[729,57,675,55],[729,58,675,56],[730,4,676,2],[731,2,677,0],[733,2,679,0],[734,0,680,0],[735,0,681,0],[736,2,682,0,"exports"],[736,9,682,7],[736,10,682,8,"default"],[736,17,682,15],[736,20,682,18,"RTCPeerConnection"],[736,37,682,35],[737,2,683,0],[737,8,683,6,"proto"],[737,13,683,11],[737,16,683,14,"RTCPeerConnection"],[737,33,683,31],[737,34,683,32,"prototype"],[737,43,683,41],[738,2,684,0],[738,3,684,1],[738,4,684,2],[738,6,684,4,"_index"],[738,12,684,10],[738,13,684,11,"defineEventAttribute"],[738,33,684,31],[738,35,684,33,"proto"],[738,40,684,38],[738,42,684,40],[738,65,684,63],[738,66,684,64],[739,2,685,0],[739,3,685,1],[739,4,685,2],[739,6,685,4,"_index"],[739,12,685,10],[739,13,685,11,"defineEventAttribute"],[739,33,685,31],[739,35,685,33,"proto"],[739,40,685,38],[739,42,685,40],[739,56,685,54],[739,57,685,55],[740,2,686,0],[740,3,686,1],[740,4,686,2],[740,6,686,4,"_index"],[740,12,686,10],[740,13,686,11,"defineEventAttribute"],[740,33,686,31],[740,35,686,33,"proto"],[740,40,686,38],[740,42,686,40],[740,61,686,59],[740,62,686,60],[741,2,687,0],[741,3,687,1],[741,4,687,2],[741,6,687,4,"_index"],[741,12,687,10],[741,13,687,11,"defineEventAttribute"],[741,33,687,31],[741,35,687,33,"proto"],[741,40,687,38],[741,42,687,40],[741,68,687,66],[741,69,687,67],[742,2,688,0],[742,3,688,1],[742,4,688,2],[742,6,688,4,"_index"],[742,12,688,10],[742,13,688,11,"defineEventAttribute"],[742,33,688,31],[742,35,688,33,"proto"],[742,40,688,38],[742,42,688,40],[742,67,688,65],[742,68,688,66],[743,2,689,0],[743,3,689,1],[743,4,689,2],[743,6,689,4,"_index"],[743,12,689,10],[743,13,689,11,"defineEventAttribute"],[743,33,689,31],[743,35,689,33,"proto"],[743,40,689,38],[743,42,689,40],[743,61,689,59],[743,62,689,60],[744,2,690,0],[744,3,690,1],[744,4,690,2],[744,6,690,4,"_index"],[744,12,690,10],[744,13,690,11,"defineEventAttribute"],[744,33,690,31],[744,35,690,33,"proto"],[744,40,690,38],[744,42,690,40],[744,64,690,62],[744,65,690,63],[745,2,691,0],[745,3,691,1],[745,4,691,2],[745,6,691,4,"_index"],[745,12,691,10],[745,13,691,11,"defineEventAttribute"],[745,33,691,31],[745,35,691,33,"proto"],[745,40,691,38],[745,42,691,40],[745,55,691,53],[745,56,691,54],[746,2,692,0],[746,3,692,1],[746,4,692,2],[746,6,692,4,"_index"],[746,12,692,10],[746,13,692,11,"defineEventAttribute"],[746,33,692,31],[746,35,692,33,"proto"],[746,40,692,38],[746,42,692,40],[746,49,692,47],[746,50,692,48],[747,2,693,0],[747,3,693,1],[747,4,693,2],[747,6,693,4,"_index"],[747,12,693,10],[747,13,693,11,"defineEventAttribute"],[747,33,693,31],[747,35,693,33,"proto"],[747,40,693,38],[747,42,693,40],[747,49,693,47],[747,50,693,48],[748,0,693,49],[748,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","_interopRequireDefault","_defineProperty","RTCPeerConnection","constructor","urls.map$argument_0","servers.filter$argument_0","createOffer","newTransceivers.forEach$argument_0","createAnswer","setConfiguration","setLocalDescription","setRemoteDescription","getTransceivers.filter$argument_0","ev.streams.map$argument_0","streams.forEach$argument_0","addIceCandidate","addTrack","streams.map$argument_0","getSenders.filter$argument_0","addTransceiver","init.streams.map$argument_0","removeTrack","getSenders.find$argument_0","getStats","getReceivers.filter$argument_0","getTransceivers","_transceivers.map$argument_0","getSenders","_transceivers.filter$argument_0","_transceivers.filter.map$argument_0","getReceivers","close","_transceivers.forEach$argument_0","restartIce","_registerEvents","<anonymous>","getReceivers.find$argument_0","getReceivers.map$argument_0","getReceivers.map.filter$argument_0","createDataChannel","_trackExists","_updateTransceivers","_insertTransceiverSorted","_transceivers.sort$argument_0"],"mappings":"AAA;ACyB,uTD;AEC,oyBF;AGC,+FH;AIC,iNJ;AKM;ECC;+BC8B,wBD;gDEI,WF;GDU;EIC;8FCQ;KDoB;GJG;EMC;GNQ;EOC;GPE;EQC;GR2B;ESC;8FJuB;KIoB;0DCO,qCD;qCEa;OFgB;sBGQ;OHI;GTM;EaC;GbW;EcU;kCCW,SD;sDEe,uBF;kEJM,sCI;GduB;EiBC;wCCmB,mBD;GjBqC;EmBC;kDCQ,iBD;gETW,sCS;GnBE;EqBC;+CLgB,yBK;mDCC,yBD;GrBW;EuBC;kCCC,kBD;GvBC;EyBC;qCCC,2BD,ME,yBF;GzBC;E4BC;qCFC,2BE,MD,2BC;G5BC;E6BC;+BCQ;KDK;G7BC;E+BC;G/BE;EgCC;gFCC;KDK;+ECC;KDM;uECC;KDW;gFCC;KDM;kECG;KDU;wECC;gDCK,2BD;KDsB;0ECC;KDgB;8ECC;KDmB;6ECC;KDc;wECC;8CEI,YF,SG,gEH;KDI;GhCC;EqCa;GrCe;EsCM;8CtBC;KsBG;GtCE;EuCK;0D7BG,yC6B;oD7Ba,c6B;wDbC,qCa;GvCG;EwCO;4BCK,2BD;GxCC;CLC"}},"type":"js/module"}]}