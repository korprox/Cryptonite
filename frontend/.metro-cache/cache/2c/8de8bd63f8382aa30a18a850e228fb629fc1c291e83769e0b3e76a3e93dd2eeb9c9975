{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deepClone = deepClone;\n  exports.isSdpTypeValid = isSdpTypeValid;\n  exports.normalizeConstraints = normalizeConstraints;\n  exports.normalizeOfferOptions = normalizeOfferOptions;\n  exports.uniqueID = uniqueID;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var DEFAULT_AUDIO_CONSTRAINTS = {};\n  var DEFAULT_VIDEO_CONSTRAINTS = {\n    facingMode: 'user',\n    frameRate: 30,\n    height: 720,\n    width: 1280\n  };\n  var FACING_MODES = ['user', 'environment'];\n  var ASPECT_RATIO = 16 / 9;\n  var STANDARD_OFFER_OPTIONS = {\n    icerestart: 'IceRestart',\n    offertoreceiveaudio: 'OfferToReceiveAudio',\n    offertoreceivevideo: 'OfferToReceiveVideo',\n    voiceactivitydetection: 'VoiceActivityDetection'\n  };\n  var SDP_TYPES = ['offer', 'pranswer', 'answer', 'rollback'];\n  function getDefaultMediaConstraints(mediaType) {\n    switch (mediaType) {\n      case 'audio':\n        return DEFAULT_AUDIO_CONSTRAINTS;\n      case 'video':\n        return DEFAULT_VIDEO_CONSTRAINTS;\n      default:\n        throw new TypeError(`Invalid media type: ${mediaType}`);\n    }\n  }\n  function extractString(constraints, prop) {\n    var value = constraints[prop];\n    var type = typeof value;\n    if (type === 'object') {\n      for (var v of ['exact', 'ideal']) {\n        if (value[v]) {\n          return value[v];\n        }\n      }\n    } else if (type === 'string') {\n      return value;\n    }\n  }\n  function extractNumber(constraints, prop) {\n    var value = constraints[prop];\n    var type = typeof value;\n    if (type === 'number') {\n      return Number.parseInt(value);\n    } else if (type === 'object') {\n      for (var v of ['exact', 'ideal', 'max', 'min']) {\n        if (value[v]) {\n          return Number.parseInt(value[v]);\n        }\n      }\n    }\n  }\n  function normalizeMediaConstraints(constraints, mediaType) {\n    switch (mediaType) {\n      case 'audio':\n        return constraints;\n      case 'video':\n        {\n          var c = {\n            deviceId: extractString(constraints, 'deviceId'),\n            facingMode: extractString(constraints, 'facingMode'),\n            frameRate: extractNumber(constraints, 'frameRate'),\n            height: extractNumber(constraints, 'height'),\n            width: extractNumber(constraints, 'width')\n          };\n          if (!c.deviceId) {\n            delete c.deviceId;\n          }\n          if (!FACING_MODES.includes(c.facingMode)) {\n            c.facingMode = DEFAULT_VIDEO_CONSTRAINTS.facingMode;\n          }\n          if (!c.frameRate) {\n            c.frameRate = DEFAULT_VIDEO_CONSTRAINTS.frameRate;\n          }\n          if (!c.height && !c.width) {\n            c.height = DEFAULT_VIDEO_CONSTRAINTS.height;\n            c.width = DEFAULT_VIDEO_CONSTRAINTS.width;\n          } else if (!c.height && c.width) {\n            c.height = Math.round(c.width / ASPECT_RATIO);\n          } else if (!c.width && c.height) {\n            c.width = Math.round(c.height * ASPECT_RATIO);\n          }\n          return c;\n        }\n      default:\n        throw new TypeError(`Invalid media type: ${mediaType}`);\n    }\n  }\n\n  /**\n   * Utility for creating short random strings from float point values.\n   * We take 4 characters from the end after converting to a string.\n   * Conversion to string gives us some letters as we don't want just numbers.\n   * Should be suitable to pass for enough randomness.\n   *\n   * @return {String} 4 random characters\n   */\n  function chr4() {\n    return Math.random().toString(16).slice(-4);\n  }\n\n  /**\n   * Put together a random string in UUIDv4 format {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\n   *\n   * @return {String} uuidv4\n   */\n  function uniqueID() {\n    return `${chr4()}${chr4()}-${chr4()}-${chr4()}-${chr4()}-${chr4()}${chr4()}${chr4()}`;\n  }\n\n  /**\n   * Utility for deep cloning an object. Object.assign() only does a shallow copy.\n   *\n   * @param {Object} obj - object to be cloned\n   * @return {Object} cloned obj\n   */\n  function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  /**\n   * Checks whether an SDP type is valid or not.\n   *\n   * @param type SDP type to check.\n   * @returns Whether the SDP type is valid or not.\n   */\n  function isSdpTypeValid(type) {\n    return SDP_TYPES.includes(type);\n  }\n\n  /**\n   * Normalize options passed to createOffer().\n   *\n   * @param options - user supplied options\n   * @return Normalized options\n   */\n  function normalizeOfferOptions(options) {\n    var newOptions = {};\n    if (typeof options !== 'object') {\n      return newOptions;\n    }\n\n    // Convert standard options into WebRTC internal constant names.\n    // See: https://github.com/jitsi/webrtc/blob/0cd6ce4de669bed94ba47b88cb71b9be0341bb81/sdk/media_constraints.cc#L113\n    for (var _ref of Object.entries(options)) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n      var key = _ref2[0];\n      var value = _ref2[1];\n      var newKey = STANDARD_OFFER_OPTIONS[key.toLowerCase()];\n      if (newKey) {\n        newOptions[newKey] = String(Boolean(value));\n      }\n    }\n    return newOptions;\n  }\n\n  /**\n   * Normalize the given constraints in something we can work with.\n   */\n  function normalizeConstraints(constraints) {\n    var c = deepClone(constraints);\n    for (var mediaType of ['audio', 'video']) {\n      var mediaTypeConstraints = c[mediaType];\n      var typeofMediaTypeConstraints = typeof mediaTypeConstraints;\n      if (typeofMediaTypeConstraints !== 'undefined') {\n        if (typeofMediaTypeConstraints === 'boolean') {\n          if (mediaTypeConstraints) {\n            c[mediaType] = getDefaultMediaConstraints(mediaType);\n          }\n        } else if (typeofMediaTypeConstraints === 'object') {\n          c[mediaType] = normalizeMediaConstraints(mediaTypeConstraints, mediaType);\n        } else {\n          throw new TypeError(`constraints.${mediaType} is neither a boolean nor a dictionary`);\n        }\n      }\n    }\n    return c;\n  }\n});","lineCount":190,"map":[[12,2,2,0],[12,6,2,6,"DEFAULT_AUDIO_CONSTRAINTS"],[12,31,2,31],[12,34,2,34],[12,35,2,35],[12,36,2,36],[13,2,4,0],[13,6,4,6,"DEFAULT_VIDEO_CONSTRAINTS"],[13,31,4,31],[13,34,4,34],[14,4,5,4,"facingMode"],[14,14,5,14],[14,16,5,16],[14,22,5,22],[15,4,6,4,"frameRate"],[15,13,6,13],[15,15,6,15],[15,17,6,17],[16,4,7,4,"height"],[16,10,7,10],[16,12,7,12],[16,15,7,15],[17,4,8,4,"width"],[17,9,8,9],[17,11,8,11],[18,2,9,0],[18,3,9,1],[19,2,11,0],[19,6,11,6,"FACING_MODES"],[19,18,11,18],[19,21,11,21],[19,22,11,23],[19,28,11,29],[19,30,11,31],[19,43,11,44],[19,44,11,46],[20,2,13,0],[20,6,13,6,"ASPECT_RATIO"],[20,18,13,18],[20,21,13,21],[20,23,13,23],[20,26,13,26],[20,27,13,27],[21,2,22,0],[21,6,22,6,"STANDARD_OFFER_OPTIONS"],[21,28,22,28],[21,31,22,31],[22,4,23,4,"icerestart"],[22,14,23,14],[22,16,23,16],[22,28,23,28],[23,4,24,4,"offertoreceiveaudio"],[23,23,24,23],[23,25,24,25],[23,46,24,46],[24,4,25,4,"offertoreceivevideo"],[24,23,25,23],[24,25,25,25],[24,46,25,46],[25,4,26,4,"voiceactivitydetection"],[25,26,26,26],[25,28,26,28],[26,2,27,0],[26,3,27,1],[27,2,29,0],[27,6,29,6,"SDP_TYPES"],[27,15,29,15],[27,18,29,18],[27,19,30,4],[27,26,30,11],[27,28,31,4],[27,38,31,14],[27,40,32,4],[27,48,32,12],[27,50,33,4],[27,60,33,14],[27,61,34,1],[28,2,36,0],[28,11,36,9,"getDefaultMediaConstraints"],[28,37,36,35,"getDefaultMediaConstraints"],[28,38,36,36,"mediaType"],[28,47,36,45],[28,49,36,47],[29,4,37,4],[29,12,37,12,"mediaType"],[29,21,37,21],[30,6,38,8],[30,11,38,13],[30,18,38,20],[31,8,39,12],[31,15,39,19,"DEFAULT_AUDIO_CONSTRAINTS"],[31,40,39,44],[32,6,40,8],[32,11,40,13],[32,18,40,20],[33,8,41,12],[33,15,41,19,"DEFAULT_VIDEO_CONSTRAINTS"],[33,40,41,44],[34,6,42,8],[35,8,43,12],[35,14,43,18],[35,18,43,22,"TypeError"],[35,27,43,31],[35,28,43,32],[35,51,43,55,"mediaType"],[35,60,43,64],[35,62,43,66],[35,63,43,67],[36,4,44,4],[37,2,45,0],[38,2,47,0],[38,11,47,9,"extractString"],[38,24,47,22,"extractString"],[38,25,47,23,"constraints"],[38,36,47,34],[38,38,47,36,"prop"],[38,42,47,40],[38,44,47,42],[39,4,48,4],[39,8,48,10,"value"],[39,13,48,15],[39,16,48,18,"constraints"],[39,27,48,29],[39,28,48,30,"prop"],[39,32,48,34],[39,33,48,35],[40,4,49,4],[40,8,49,10,"type"],[40,12,49,14],[40,15,49,17],[40,22,49,24,"value"],[40,27,49,29],[41,4,51,4],[41,8,51,8,"type"],[41,12,51,12],[41,17,51,17],[41,25,51,25],[41,27,51,27],[42,6,52,8],[42,11,52,13],[42,15,52,19,"v"],[42,16,52,20],[42,20,52,24],[42,21,52,26],[42,28,52,33],[42,30,52,35],[42,37,52,42],[42,38,52,44],[42,40,52,46],[43,8,53,12],[43,12,53,16,"value"],[43,17,53,21],[43,18,53,22,"v"],[43,19,53,23],[43,20,53,24],[43,22,53,26],[44,10,54,16],[44,17,54,23,"value"],[44,22,54,28],[44,23,54,29,"v"],[44,24,54,30],[44,25,54,31],[45,8,55,12],[46,6,56,8],[47,4,57,4],[47,5,57,5],[47,11,57,11],[47,15,57,15,"type"],[47,19,57,19],[47,24,57,24],[47,32,57,32],[47,34,57,34],[48,6,58,8],[48,13,58,15,"value"],[48,18,58,20],[49,4,59,4],[50,2,60,0],[51,2,62,0],[51,11,62,9,"extractNumber"],[51,24,62,22,"extractNumber"],[51,25,62,23,"constraints"],[51,36,62,34],[51,38,62,36,"prop"],[51,42,62,40],[51,44,62,42],[52,4,63,4],[52,8,63,10,"value"],[52,13,63,15],[52,16,63,18,"constraints"],[52,27,63,29],[52,28,63,30,"prop"],[52,32,63,34],[52,33,63,35],[53,4,64,4],[53,8,64,10,"type"],[53,12,64,14],[53,15,64,17],[53,22,64,24,"value"],[53,27,64,29],[54,4,66,4],[54,8,66,8,"type"],[54,12,66,12],[54,17,66,17],[54,25,66,25],[54,27,66,27],[55,6,67,8],[55,13,67,15,"Number"],[55,19,67,21],[55,20,67,22,"parseInt"],[55,28,67,30],[55,29,67,31,"value"],[55,34,67,36],[55,35,67,37],[56,4,68,4],[56,5,68,5],[56,11,68,11],[56,15,68,15,"type"],[56,19,68,19],[56,24,68,24],[56,32,68,32],[56,34,68,34],[57,6,69,8],[57,11,69,13],[57,15,69,19,"v"],[57,16,69,20],[57,20,69,24],[57,21,69,26],[57,28,69,33],[57,30,69,35],[57,37,69,42],[57,39,69,44],[57,44,69,49],[57,46,69,51],[57,51,69,56],[57,52,69,58],[57,54,69,60],[58,8,70,12],[58,12,70,16,"value"],[58,17,70,21],[58,18,70,22,"v"],[58,19,70,23],[58,20,70,24],[58,22,70,26],[59,10,71,16],[59,17,71,23,"Number"],[59,23,71,29],[59,24,71,30,"parseInt"],[59,32,71,38],[59,33,71,39,"value"],[59,38,71,44],[59,39,71,45,"v"],[59,40,71,46],[59,41,71,47],[59,42,71,48],[60,8,72,12],[61,6,73,8],[62,4,74,4],[63,2,75,0],[64,2,77,0],[64,11,77,9,"normalizeMediaConstraints"],[64,36,77,34,"normalizeMediaConstraints"],[64,37,77,35,"constraints"],[64,48,77,46],[64,50,77,48,"mediaType"],[64,59,77,57],[64,61,77,59],[65,4,78,4],[65,12,78,12,"mediaType"],[65,21,78,21],[66,6,79,8],[66,11,79,13],[66,18,79,20],[67,8,80,12],[67,15,80,19,"constraints"],[67,26,80,30],[68,6,82,8],[68,11,82,13],[68,18,82,20],[69,8,82,22],[70,10,83,12],[70,14,83,18,"c"],[70,15,83,19],[70,18,83,22],[71,12,84,16,"deviceId"],[71,20,84,24],[71,22,84,26,"extractString"],[71,35,84,39],[71,36,84,40,"constraints"],[71,47,84,51],[71,49,84,53],[71,59,84,63],[71,60,84,64],[72,12,85,16,"facingMode"],[72,22,85,26],[72,24,85,28,"extractString"],[72,37,85,41],[72,38,85,42,"constraints"],[72,49,85,53],[72,51,85,55],[72,63,85,67],[72,64,85,68],[73,12,86,16,"frameRate"],[73,21,86,25],[73,23,86,27,"extractNumber"],[73,36,86,40],[73,37,86,41,"constraints"],[73,48,86,52],[73,50,86,54],[73,61,86,65],[73,62,86,66],[74,12,87,16,"height"],[74,18,87,22],[74,20,87,24,"extractNumber"],[74,33,87,37],[74,34,87,38,"constraints"],[74,45,87,49],[74,47,87,51],[74,55,87,59],[74,56,87,60],[75,12,88,16,"width"],[75,17,88,21],[75,19,88,23,"extractNumber"],[75,32,88,36],[75,33,88,37,"constraints"],[75,44,88,48],[75,46,88,50],[75,53,88,57],[76,10,89,12],[76,11,89,13],[77,10,91,12],[77,14,91,16],[77,15,91,17,"c"],[77,16,91,18],[77,17,91,19,"deviceId"],[77,25,91,27],[77,27,91,29],[78,12,92,16],[78,19,92,23,"c"],[78,20,92,24],[78,21,92,25,"deviceId"],[78,29,92,33],[79,10,93,12],[80,10,95,12],[80,14,95,16],[80,15,95,17,"FACING_MODES"],[80,27,95,29],[80,28,95,30,"includes"],[80,36,95,38],[80,37,95,39,"c"],[80,38,95,40],[80,39,95,41,"facingMode"],[80,49,95,51],[80,50,95,52],[80,52,95,54],[81,12,96,16,"c"],[81,13,96,17],[81,14,96,18,"facingMode"],[81,24,96,28],[81,27,96,31,"DEFAULT_VIDEO_CONSTRAINTS"],[81,52,96,56],[81,53,96,57,"facingMode"],[81,63,96,67],[82,10,97,12],[83,10,99,12],[83,14,99,16],[83,15,99,17,"c"],[83,16,99,18],[83,17,99,19,"frameRate"],[83,26,99,28],[83,28,99,30],[84,12,100,16,"c"],[84,13,100,17],[84,14,100,18,"frameRate"],[84,23,100,27],[84,26,100,30,"DEFAULT_VIDEO_CONSTRAINTS"],[84,51,100,55],[84,52,100,56,"frameRate"],[84,61,100,65],[85,10,101,12],[86,10,103,12],[86,14,103,16],[86,15,103,17,"c"],[86,16,103,18],[86,17,103,19,"height"],[86,23,103,25],[86,27,103,29],[86,28,103,30,"c"],[86,29,103,31],[86,30,103,32,"width"],[86,35,103,37],[86,37,103,39],[87,12,104,16,"c"],[87,13,104,17],[87,14,104,18,"height"],[87,20,104,24],[87,23,104,27,"DEFAULT_VIDEO_CONSTRAINTS"],[87,48,104,52],[87,49,104,53,"height"],[87,55,104,59],[88,12,105,16,"c"],[88,13,105,17],[88,14,105,18,"width"],[88,19,105,23],[88,22,105,26,"DEFAULT_VIDEO_CONSTRAINTS"],[88,47,105,51],[88,48,105,52,"width"],[88,53,105,57],[89,10,106,12],[89,11,106,13],[89,17,106,19],[89,21,106,23],[89,22,106,24,"c"],[89,23,106,25],[89,24,106,26,"height"],[89,30,106,32],[89,34,106,36,"c"],[89,35,106,37],[89,36,106,38,"width"],[89,41,106,43],[89,43,106,45],[90,12,107,16,"c"],[90,13,107,17],[90,14,107,18,"height"],[90,20,107,24],[90,23,107,27,"Math"],[90,27,107,31],[90,28,107,32,"round"],[90,33,107,37],[90,34,107,38,"c"],[90,35,107,39],[90,36,107,40,"width"],[90,41,107,45],[90,44,107,48,"ASPECT_RATIO"],[90,56,107,60],[90,57,107,61],[91,10,108,12],[91,11,108,13],[91,17,108,19],[91,21,108,23],[91,22,108,24,"c"],[91,23,108,25],[91,24,108,26,"width"],[91,29,108,31],[91,33,108,35,"c"],[91,34,108,36],[91,35,108,37,"height"],[91,41,108,43],[91,43,108,45],[92,12,109,16,"c"],[92,13,109,17],[92,14,109,18,"width"],[92,19,109,23],[92,22,109,26,"Math"],[92,26,109,30],[92,27,109,31,"round"],[92,32,109,36],[92,33,109,37,"c"],[92,34,109,38],[92,35,109,39,"height"],[92,41,109,45],[92,44,109,48,"ASPECT_RATIO"],[92,56,109,60],[92,57,109,61],[93,10,110,12],[94,10,112,12],[94,17,112,19,"c"],[94,18,112,20],[95,8,113,8],[96,6,115,8],[97,8,116,12],[97,14,116,18],[97,18,116,22,"TypeError"],[97,27,116,31],[97,28,116,32],[97,51,116,55,"mediaType"],[97,60,116,64],[97,62,116,66],[97,63,116,67],[98,4,117,4],[99,2,118,0],[101,2,120,0],[102,0,121,0],[103,0,122,0],[104,0,123,0],[105,0,124,0],[106,0,125,0],[107,0,126,0],[108,0,127,0],[109,2,128,0],[109,11,128,9,"chr4"],[109,15,128,13,"chr4"],[109,16,128,13],[109,18,128,16],[110,4,129,4],[110,11,129,11,"Math"],[110,15,129,15],[110,16,129,16,"random"],[110,22,129,22],[110,23,129,23],[110,24,129,24],[110,25,129,25,"toString"],[110,33,129,33],[110,34,129,34],[110,36,129,36],[110,37,129,37],[110,38,129,38,"slice"],[110,43,129,43],[110,44,129,44],[110,45,129,45],[110,46,129,46],[110,47,129,47],[111,2,130,0],[113,2,132,0],[114,0,133,0],[115,0,134,0],[116,0,135,0],[117,0,136,0],[118,2,137,7],[118,11,137,16,"uniqueID"],[118,19,137,24,"uniqueID"],[118,20,137,24],[118,22,137,35],[119,4,138,4],[119,11,138,11],[119,14,138,14,"chr4"],[119,18,138,18],[119,19,138,19],[119,20,138,20],[119,23,138,23,"chr4"],[119,27,138,27],[119,28,138,28],[119,29,138,29],[119,33,138,33,"chr4"],[119,37,138,37],[119,38,138,38],[119,39,138,39],[119,43,138,43,"chr4"],[119,47,138,47],[119,48,138,48],[119,49,138,49],[119,53,138,53,"chr4"],[119,57,138,57],[119,58,138,58],[119,59,138,59],[119,63,138,63,"chr4"],[119,67,138,67],[119,68,138,68],[119,69,138,69],[119,72,138,72,"chr4"],[119,76,138,76],[119,77,138,77],[119,78,138,78],[119,81,138,81,"chr4"],[119,85,138,85],[119,86,138,86],[119,87,138,87],[119,89,138,89],[120,2,139,0],[122,2,141,0],[123,0,142,0],[124,0,143,0],[125,0,144,0],[126,0,145,0],[127,0,146,0],[128,2,147,7],[128,11,147,16,"deepClone"],[128,20,147,25,"deepClone"],[128,21,147,29,"obj"],[128,24,147,35],[128,26,147,40],[129,4,148,4],[129,11,148,11,"JSON"],[129,15,148,15],[129,16,148,16,"parse"],[129,21,148,21],[129,22,148,22,"JSON"],[129,26,148,26],[129,27,148,27,"stringify"],[129,36,148,36],[129,37,148,37,"obj"],[129,40,148,40],[129,41,148,41],[129,42,148,42],[130,2,149,0],[132,2,151,0],[133,0,152,0],[134,0,153,0],[135,0,154,0],[136,0,155,0],[137,0,156,0],[138,2,157,7],[138,11,157,16,"isSdpTypeValid"],[138,25,157,30,"isSdpTypeValid"],[138,26,157,31,"type"],[138,30,157,43],[138,32,157,54],[139,4,158,4],[139,11,158,11,"SDP_TYPES"],[139,20,158,20],[139,21,158,21,"includes"],[139,29,158,29],[139,30,158,30,"type"],[139,34,158,34],[139,35,158,35],[140,2,159,0],[142,2,161,0],[143,0,162,0],[144,0,163,0],[145,0,164,0],[146,0,165,0],[147,0,166,0],[148,2,167,7],[148,11,167,16,"normalizeOfferOptions"],[148,32,167,37,"normalizeOfferOptions"],[148,33,167,38,"options"],[148,40,167,63],[148,42,167,65],[149,4,168,4],[149,8,168,10,"newOptions"],[149,18,168,43],[149,21,168,46],[149,22,168,47],[149,23,168,48],[150,4,170,4],[150,8,170,8],[150,15,170,15,"options"],[150,22,170,22],[150,27,170,27],[150,35,170,35],[150,37,170,37],[151,6,171,8],[151,13,171,15,"newOptions"],[151,23,171,25],[152,4,172,4],[154,4,174,4],[155,4,175,4],[156,4,176,4],[156,13,176,4,"_ref"],[156,17,176,4],[156,21,176,33,"Object"],[156,27,176,39],[156,28,176,40,"entries"],[156,35,176,47],[156,36,176,48,"options"],[156,43,176,55],[156,44,176,56],[156,46,176,58],[157,6,176,58],[157,10,176,58,"_ref2"],[157,15,176,58],[157,22,176,58,"_slicedToArray2"],[157,37,176,58],[157,38,176,58,"default"],[157,45,176,58],[157,47,176,58,"_ref"],[157,51,176,58],[158,6,176,58],[158,10,176,17,"key"],[158,13,176,20],[158,16,176,20,"_ref2"],[158,21,176,20],[159,6,176,20],[159,10,176,22,"value"],[159,15,176,27],[159,18,176,27,"_ref2"],[159,23,176,27],[160,6,177,8],[160,10,177,14,"newKey"],[160,16,177,20],[160,19,177,23,"STANDARD_OFFER_OPTIONS"],[160,41,177,45],[160,42,177,46,"key"],[160,45,177,49],[160,46,177,50,"toLowerCase"],[160,57,177,61],[160,58,177,62],[160,59,177,63],[160,60,177,64],[161,6,179,8],[161,10,179,12,"newKey"],[161,16,179,18],[161,18,179,20],[162,8,180,12,"newOptions"],[162,18,180,22],[162,19,180,23,"newKey"],[162,25,180,29],[162,26,180,30],[162,29,180,33,"String"],[162,35,180,39],[162,36,180,40,"Boolean"],[162,43,180,47],[162,44,180,48,"value"],[162,49,180,53],[162,50,180,54],[162,51,180,55],[163,6,181,8],[164,4,182,4],[165,4,184,4],[165,11,184,11,"newOptions"],[165,21,184,21],[166,2,185,0],[168,2,187,0],[169,0,188,0],[170,0,189,0],[171,2,190,7],[171,11,190,16,"normalizeConstraints"],[171,31,190,36,"normalizeConstraints"],[171,32,190,37,"constraints"],[171,43,190,48],[171,45,190,50],[172,4,191,4],[172,8,191,10,"c"],[172,9,191,11],[172,12,191,14,"deepClone"],[172,21,191,23],[172,22,191,24,"constraints"],[172,33,191,35],[172,34,191,36],[173,4,193,4],[173,9,193,9],[173,13,193,15,"mediaType"],[173,22,193,24],[173,26,193,28],[173,27,193,30],[173,34,193,37],[173,36,193,39],[173,43,193,46],[173,44,193,48],[173,46,193,50],[174,6,194,8],[174,10,194,14,"mediaTypeConstraints"],[174,30,194,34],[174,33,194,37,"c"],[174,34,194,38],[174,35,194,39,"mediaType"],[174,44,194,48],[174,45,194,49],[175,6,195,8],[175,10,195,14,"typeofMediaTypeConstraints"],[175,36,195,40],[175,39,195,43],[175,46,195,50,"mediaTypeConstraints"],[175,66,195,70],[176,6,197,8],[176,10,197,12,"typeofMediaTypeConstraints"],[176,36,197,38],[176,41,197,43],[176,52,197,54],[176,54,197,56],[177,8,198,12],[177,12,198,16,"typeofMediaTypeConstraints"],[177,38,198,42],[177,43,198,47],[177,52,198,56],[177,54,198,58],[178,10,199,16],[178,14,199,20,"mediaTypeConstraints"],[178,34,199,40],[178,36,199,42],[179,12,200,20,"c"],[179,13,200,21],[179,14,200,22,"mediaType"],[179,23,200,31],[179,24,200,32],[179,27,200,35,"getDefaultMediaConstraints"],[179,53,200,61],[179,54,200,62,"mediaType"],[179,63,200,71],[179,64,200,72],[180,10,201,16],[181,8,202,12],[181,9,202,13],[181,15,202,19],[181,19,202,23,"typeofMediaTypeConstraints"],[181,45,202,49],[181,50,202,54],[181,58,202,62],[181,60,202,64],[182,10,203,16,"c"],[182,11,203,17],[182,12,203,18,"mediaType"],[182,21,203,27],[182,22,203,28],[182,25,203,31,"normalizeMediaConstraints"],[182,50,203,56],[182,51,203,57,"mediaTypeConstraints"],[182,71,203,77],[182,73,203,79,"mediaType"],[182,82,203,88],[182,83,203,89],[183,8,204,12],[183,9,204,13],[183,15,204,19],[184,10,205,16],[184,16,205,22],[184,20,205,26,"TypeError"],[184,29,205,35],[184,30,205,36],[184,45,205,51,"mediaType"],[184,54,205,60],[184,94,205,100],[184,95,205,101],[185,8,206,12],[186,6,207,8],[187,4,208,4],[188,4,210,4],[188,11,210,11,"c"],[188,12,210,12],[189,2,211,0],[190,0,211,1],[190,3]],"functionMap":{"names":["<global>","getDefaultMediaConstraints","extractString","extractNumber","normalizeMediaConstraints","chr4","uniqueID","deepClone","isSdpTypeValid","normalizeOfferOptions","normalizeConstraints"],"mappings":"AAA;ACmC;CDS;AEE;CFa;AGE;CHa;AIE;CJyC;AKU;CLE;OMO;CNE;OOQ;CPE;OQQ;CRE;OSQ;CTkB;OUK;CVqB"}},"type":"js/module"}]}