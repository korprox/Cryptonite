{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/NativeModules","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MRft9soElPgDBIQyAww27iefYeU=","exportNames":["*"]}},{"name":"./RTCRtpReceiveParameters","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":256},"end":{"line":3,"column":64,"index":320}}],"key":"0Kb8VdEI2CktRN/tLwnT1fbLoaw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _NativeModules = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/NativeModules\"));\n  var _RTCRtpReceiveParameters = _interopRequireDefault(require(_dependencyMap[2], \"./RTCRtpReceiveParameters\"));\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const {\n    WebRTCModule\n  } = _NativeModules.default;\n  class RTCRtpReceiver {\n    constructor(info) {\n      _defineProperty(this, \"_id\", void 0);\n      _defineProperty(this, \"_peerConnectionId\", void 0);\n      _defineProperty(this, \"_track\", null);\n      _defineProperty(this, \"_rtpParameters\", void 0);\n      this._id = info.id;\n      this._peerConnectionId = info.peerConnectionId;\n      this._rtpParameters = new _RTCRtpReceiveParameters.default(info.rtpParameters);\n      if (info.track) {\n        this._track = info.track;\n      }\n    }\n    static getCapabilities(kind) {\n      return WebRTCModule.receiverGetCapabilities(kind);\n    }\n    getStats() {\n      return WebRTCModule.receiverGetStats(this._peerConnectionId, this._id).then(data =>\n      /* On both Android and iOS it is faster to construct a single\n      JSON string representing the Map of StatsReports and have it\n      pass through the React Native bridge rather than the Map of\n      StatsReports. While the implementations do try to be faster in\n      general, the stress is on being faster to pass through the React\n      Native bridge which is a bottleneck that tends to be visible in\n      the UI when there is congestion involving UI-related passing.\n      */\n      new Map(JSON.parse(data)));\n    }\n    getParameters() {\n      return this._rtpParameters;\n    }\n    get id() {\n      return this._id;\n    }\n    get track() {\n      return this._track;\n    }\n  }\n  exports.default = RTCRtpReceiver;\n});","lineCount":64,"map":[[8,2,3,0],[8,6,3,0,"_RTCRtpReceiveParameters"],[8,30,3,0],[8,33,3,0,"_interopRequireDefault"],[8,55,3,0],[8,56,3,0,"require"],[8,63,3,0],[8,64,3,0,"_dependencyMap"],[8,78,3,0],[9,2,1,0],[9,11,1,9,"_defineProperty"],[9,26,1,24,"_defineProperty"],[9,27,1,25,"obj"],[9,30,1,28],[9,32,1,30,"key"],[9,35,1,33],[9,37,1,35,"value"],[9,42,1,40],[9,44,1,42],[10,4,1,44],[10,8,1,48,"key"],[10,11,1,51],[10,15,1,55,"obj"],[10,18,1,58],[10,20,1,60],[11,6,1,62,"Object"],[11,12,1,68],[11,13,1,69,"defineProperty"],[11,27,1,83],[11,28,1,84,"obj"],[11,31,1,87],[11,33,1,89,"key"],[11,36,1,92],[11,38,1,94],[12,8,1,96,"value"],[12,13,1,101],[12,15,1,103,"value"],[12,20,1,108],[13,8,1,110,"enumerable"],[13,18,1,120],[13,20,1,122],[13,24,1,126],[14,8,1,128,"configurable"],[14,20,1,140],[14,22,1,142],[14,26,1,146],[15,8,1,148,"writable"],[15,16,1,156],[15,18,1,158],[16,6,1,163],[16,7,1,164],[16,8,1,165],[17,4,1,167],[17,5,1,168],[17,11,1,174],[18,6,1,176,"obj"],[18,9,1,179],[18,10,1,180,"key"],[18,13,1,183],[18,14,1,184],[18,17,1,187,"value"],[18,22,1,192],[19,4,1,194],[20,4,1,196],[20,11,1,203,"obj"],[20,14,1,206],[21,2,1,208],[22,2,4,0],[22,8,4,6],[23,4,5,2,"WebRTCModule"],[24,2,6,0],[24,3,6,1],[24,6,6,4,"NativeModules"],[24,28,6,17],[25,2,7,15],[25,8,7,21,"RTCRtpReceiver"],[25,22,7,35],[25,23,7,36],[26,4,8,2,"constructor"],[26,15,8,13,"constructor"],[26,16,8,14,"info"],[26,20,8,18],[26,22,8,20],[27,6,9,4,"_defineProperty"],[27,21,9,19],[27,22,9,20],[27,26,9,24],[27,28,9,26],[27,33,9,31],[27,35,9,33],[27,40,9,38],[27,41,9,39],[27,42,9,40],[28,6,10,4,"_defineProperty"],[28,21,10,19],[28,22,10,20],[28,26,10,24],[28,28,10,26],[28,47,10,45],[28,49,10,47],[28,54,10,52],[28,55,10,53],[28,56,10,54],[29,6,11,4,"_defineProperty"],[29,21,11,19],[29,22,11,20],[29,26,11,24],[29,28,11,26],[29,36,11,34],[29,38,11,36],[29,42,11,40],[29,43,11,41],[30,6,12,4,"_defineProperty"],[30,21,12,19],[30,22,12,20],[30,26,12,24],[30,28,12,26],[30,44,12,42],[30,46,12,44],[30,51,12,49],[30,52,12,50],[30,53,12,51],[31,6,13,4],[31,10,13,8],[31,11,13,9,"_id"],[31,14,13,12],[31,17,13,15,"info"],[31,21,13,19],[31,22,13,20,"id"],[31,24,13,22],[32,6,14,4],[32,10,14,8],[32,11,14,9,"_peerConnectionId"],[32,28,14,26],[32,31,14,29,"info"],[32,35,14,33],[32,36,14,34,"peerConnectionId"],[32,52,14,50],[33,6,15,4],[33,10,15,8],[33,11,15,9,"_rtpParameters"],[33,25,15,23],[33,28,15,26],[33,32,15,30,"RTCRtpReceiveParameters"],[33,64,15,53],[33,65,15,54,"info"],[33,69,15,58],[33,70,15,59,"rtpParameters"],[33,83,15,72],[33,84,15,73],[34,6,16,4],[34,10,16,8,"info"],[34,14,16,12],[34,15,16,13,"track"],[34,20,16,18],[34,22,16,20],[35,8,17,6],[35,12,17,10],[35,13,17,11,"_track"],[35,19,17,17],[35,22,17,20,"info"],[35,26,17,24],[35,27,17,25,"track"],[35,32,17,30],[36,6,18,4],[37,4,19,2],[38,4,20,2],[38,11,20,9,"getCapabilities"],[38,26,20,24,"getCapabilities"],[38,27,20,25,"kind"],[38,31,20,29],[38,33,20,31],[39,6,21,4],[39,13,21,11,"WebRTCModule"],[39,25,21,23],[39,26,21,24,"receiverGetCapabilities"],[39,49,21,47],[39,50,21,48,"kind"],[39,54,21,52],[39,55,21,53],[40,4,22,2],[41,4,23,2,"getStats"],[41,12,23,10,"getStats"],[41,13,23,10],[41,15,23,13],[42,6,24,4],[42,13,24,11,"WebRTCModule"],[42,25,24,23],[42,26,24,24,"receiverGetStats"],[42,42,24,40],[42,43,24,41],[42,47,24,45],[42,48,24,46,"_peerConnectionId"],[42,65,24,63],[42,67,24,65],[42,71,24,69],[42,72,24,70,"_id"],[42,75,24,73],[42,76,24,74],[42,77,24,75,"then"],[42,81,24,79],[42,82,24,80,"data"],[42,86,24,84],[43,6,25,4],[44,0,26,0],[45,0,27,0],[46,0,28,0],[47,0,29,0],[48,0,30,0],[49,0,31,0],[50,0,32,0],[51,6,33,4],[51,10,33,8,"Map"],[51,13,33,11],[51,14,33,12,"JSON"],[51,18,33,16],[51,19,33,17,"parse"],[51,24,33,22],[51,25,33,23,"data"],[51,29,33,27],[51,30,33,28],[51,31,33,29],[51,32,33,30],[52,4,34,2],[53,4,35,2,"getParameters"],[53,17,35,15,"getParameters"],[53,18,35,15],[53,20,35,18],[54,6,36,4],[54,13,36,11],[54,17,36,15],[54,18,36,16,"_rtpParameters"],[54,32,36,30],[55,4,37,2],[56,4,38,2],[56,8,38,6,"id"],[56,10,38,8,"id"],[56,11,38,8],[56,13,38,11],[57,6,39,4],[57,13,39,11],[57,17,39,15],[57,18,39,16,"_id"],[57,21,39,19],[58,4,40,2],[59,4,41,2],[59,8,41,6,"track"],[59,13,41,11,"track"],[59,14,41,11],[59,16,41,14],[60,6,42,4],[60,13,42,11],[60,17,42,15],[60,18,42,16,"_track"],[60,24,42,22],[61,4,43,2],[62,2,44,0],[63,2,44,1,"exports"],[63,9,44,1],[63,10,44,1,"default"],[63,17,44,1],[63,20,44,1,"RTCRtpReceiver"],[63,34,44,1],[64,0,44,1],[64,3]],"functionMap":{"names":["_defineProperty","<global>","RTCRtpReceiver","constructor","getCapabilities","getStats","WebRTCModule.receiverGetStats.then$argument_0","getParameters","get__id","get__track"],"mappings":"AAA,iNC;eCM;ECC;GDW;EEC;GFE;EGC;gFCC;6BDS;GHC;EKC;GLE;EMC;GNE;EOC;GPE;CDC"}},"type":"js/module"}]}