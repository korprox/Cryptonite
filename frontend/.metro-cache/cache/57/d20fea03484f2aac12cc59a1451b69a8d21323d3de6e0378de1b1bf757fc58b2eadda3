{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/NativeModules","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MRft9soElPgDBIQyAww27iefYeU=","exportNames":["*"]}},{"name":"./RTCRtpSendParameters","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":256},"end":{"line":3,"column":58,"index":314}}],"key":"/yZT0e+J5xh/yWE3KkbMJT/kJcA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _NativeModules = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/NativeModules\"));\n  var _RTCRtpSendParameters = _interopRequireDefault(require(_dependencyMap[2], \"./RTCRtpSendParameters\"));\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const {\n    WebRTCModule\n  } = _NativeModules.default;\n  class RTCRtpSender {\n    constructor(info) {\n      _defineProperty(this, \"_id\", void 0);\n      _defineProperty(this, \"_track\", null);\n      _defineProperty(this, \"_peerConnectionId\", void 0);\n      _defineProperty(this, \"_rtpParameters\", void 0);\n      this._peerConnectionId = info.peerConnectionId;\n      this._id = info.id;\n      this._rtpParameters = new _RTCRtpSendParameters.default(info.rtpParameters);\n      if (info.track) {\n        this._track = info.track;\n      }\n    }\n    async replaceTrack(track) {\n      try {\n        await WebRTCModule.senderReplaceTrack(this._peerConnectionId, this._id, track ? track.id : null);\n      } catch (e) {\n        return;\n      }\n      this._track = track;\n    }\n    static getCapabilities(kind) {\n      return WebRTCModule.senderGetCapabilities(kind);\n    }\n    getParameters() {\n      return this._rtpParameters;\n    }\n    async setParameters(parameters) {\n      // This allows us to get rid of private \"underscore properties\"\n      const _params = JSON.parse(JSON.stringify(parameters));\n      const newParameters = await WebRTCModule.senderSetParameters(this._peerConnectionId, this._id, _params);\n      this._rtpParameters = new _RTCRtpSendParameters.default(newParameters);\n    }\n    getStats() {\n      return WebRTCModule.senderGetStats(this._peerConnectionId, this._id).then(data =>\n      /* On both Android and iOS it is faster to construct a single\n      JSON string representing the Map of StatsReports and have it\n      pass through the React Native bridge rather than the Map of\n      StatsReports. While the implementations do try to be faster in\n      general, the stress is on being faster to pass through the React\n      Native bridge which is a bottleneck that tends to be visible in\n      the UI when there is congestion involving UI-related passing.\n      */\n      new Map(JSON.parse(data)));\n    }\n    get track() {\n      return this._track;\n    }\n    get id() {\n      return this._id;\n    }\n  }\n  exports.default = RTCRtpSender;\n});","lineCount":78,"map":[[8,2,3,0],[8,6,3,0,"_RTCRtpSendParameters"],[8,27,3,0],[8,30,3,0,"_interopRequireDefault"],[8,52,3,0],[8,53,3,0,"require"],[8,60,3,0],[8,61,3,0,"_dependencyMap"],[8,75,3,0],[9,2,1,0],[9,11,1,9,"_defineProperty"],[9,26,1,24,"_defineProperty"],[9,27,1,25,"obj"],[9,30,1,28],[9,32,1,30,"key"],[9,35,1,33],[9,37,1,35,"value"],[9,42,1,40],[9,44,1,42],[10,4,1,44],[10,8,1,48,"key"],[10,11,1,51],[10,15,1,55,"obj"],[10,18,1,58],[10,20,1,60],[11,6,1,62,"Object"],[11,12,1,68],[11,13,1,69,"defineProperty"],[11,27,1,83],[11,28,1,84,"obj"],[11,31,1,87],[11,33,1,89,"key"],[11,36,1,92],[11,38,1,94],[12,8,1,96,"value"],[12,13,1,101],[12,15,1,103,"value"],[12,20,1,108],[13,8,1,110,"enumerable"],[13,18,1,120],[13,20,1,122],[13,24,1,126],[14,8,1,128,"configurable"],[14,20,1,140],[14,22,1,142],[14,26,1,146],[15,8,1,148,"writable"],[15,16,1,156],[15,18,1,158],[16,6,1,163],[16,7,1,164],[16,8,1,165],[17,4,1,167],[17,5,1,168],[17,11,1,174],[18,6,1,176,"obj"],[18,9,1,179],[18,10,1,180,"key"],[18,13,1,183],[18,14,1,184],[18,17,1,187,"value"],[18,22,1,192],[19,4,1,194],[20,4,1,196],[20,11,1,203,"obj"],[20,14,1,206],[21,2,1,208],[22,2,4,0],[22,8,4,6],[23,4,5,2,"WebRTCModule"],[24,2,6,0],[24,3,6,1],[24,6,6,4,"NativeModules"],[24,28,6,17],[25,2,7,15],[25,8,7,21,"RTCRtpSender"],[25,20,7,33],[25,21,7,34],[26,4,8,2,"constructor"],[26,15,8,13,"constructor"],[26,16,8,14,"info"],[26,20,8,18],[26,22,8,20],[27,6,9,4,"_defineProperty"],[27,21,9,19],[27,22,9,20],[27,26,9,24],[27,28,9,26],[27,33,9,31],[27,35,9,33],[27,40,9,38],[27,41,9,39],[27,42,9,40],[28,6,10,4,"_defineProperty"],[28,21,10,19],[28,22,10,20],[28,26,10,24],[28,28,10,26],[28,36,10,34],[28,38,10,36],[28,42,10,40],[28,43,10,41],[29,6,11,4,"_defineProperty"],[29,21,11,19],[29,22,11,20],[29,26,11,24],[29,28,11,26],[29,47,11,45],[29,49,11,47],[29,54,11,52],[29,55,11,53],[29,56,11,54],[30,6,12,4,"_defineProperty"],[30,21,12,19],[30,22,12,20],[30,26,12,24],[30,28,12,26],[30,44,12,42],[30,46,12,44],[30,51,12,49],[30,52,12,50],[30,53,12,51],[31,6,13,4],[31,10,13,8],[31,11,13,9,"_peerConnectionId"],[31,28,13,26],[31,31,13,29,"info"],[31,35,13,33],[31,36,13,34,"peerConnectionId"],[31,52,13,50],[32,6,14,4],[32,10,14,8],[32,11,14,9,"_id"],[32,14,14,12],[32,17,14,15,"info"],[32,21,14,19],[32,22,14,20,"id"],[32,24,14,22],[33,6,15,4],[33,10,15,8],[33,11,15,9,"_rtpParameters"],[33,25,15,23],[33,28,15,26],[33,32,15,30,"RTCRtpSendParameters"],[33,61,15,50],[33,62,15,51,"info"],[33,66,15,55],[33,67,15,56,"rtpParameters"],[33,80,15,69],[33,81,15,70],[34,6,16,4],[34,10,16,8,"info"],[34,14,16,12],[34,15,16,13,"track"],[34,20,16,18],[34,22,16,20],[35,8,17,6],[35,12,17,10],[35,13,17,11,"_track"],[35,19,17,17],[35,22,17,20,"info"],[35,26,17,24],[35,27,17,25,"track"],[35,32,17,30],[36,6,18,4],[37,4,19,2],[38,4,20,2],[38,10,20,8,"replaceTrack"],[38,22,20,20,"replaceTrack"],[38,23,20,21,"track"],[38,28,20,26],[38,30,20,28],[39,6,21,4],[39,10,21,8],[40,8,22,6],[40,14,22,12,"WebRTCModule"],[40,26,22,24],[40,27,22,25,"senderReplaceTrack"],[40,45,22,43],[40,46,22,44],[40,50,22,48],[40,51,22,49,"_peerConnectionId"],[40,68,22,66],[40,70,22,68],[40,74,22,72],[40,75,22,73,"_id"],[40,78,22,76],[40,80,22,78,"track"],[40,85,22,83],[40,88,22,86,"track"],[40,93,22,91],[40,94,22,92,"id"],[40,96,22,94],[40,99,22,97],[40,103,22,101],[40,104,22,102],[41,6,23,4],[41,7,23,5],[41,8,23,6],[41,15,23,13,"e"],[41,16,23,14],[41,18,23,16],[42,8,24,6],[43,6,25,4],[44,6,26,4],[44,10,26,8],[44,11,26,9,"_track"],[44,17,26,15],[44,20,26,18,"track"],[44,25,26,23],[45,4,27,2],[46,4,28,2],[46,11,28,9,"getCapabilities"],[46,26,28,24,"getCapabilities"],[46,27,28,25,"kind"],[46,31,28,29],[46,33,28,31],[47,6,29,4],[47,13,29,11,"WebRTCModule"],[47,25,29,23],[47,26,29,24,"senderGetCapabilities"],[47,47,29,45],[47,48,29,46,"kind"],[47,52,29,50],[47,53,29,51],[48,4,30,2],[49,4,31,2,"getParameters"],[49,17,31,15,"getParameters"],[49,18,31,15],[49,20,31,18],[50,6,32,4],[50,13,32,11],[50,17,32,15],[50,18,32,16,"_rtpParameters"],[50,32,32,30],[51,4,33,2],[52,4,34,2],[52,10,34,8,"setParameters"],[52,23,34,21,"setParameters"],[52,24,34,22,"parameters"],[52,34,34,32],[52,36,34,34],[53,6,35,4],[54,6,36,4],[54,12,36,10,"_params"],[54,19,36,17],[54,22,36,20,"JSON"],[54,26,36,24],[54,27,36,25,"parse"],[54,32,36,30],[54,33,36,31,"JSON"],[54,37,36,35],[54,38,36,36,"stringify"],[54,47,36,45],[54,48,36,46,"parameters"],[54,58,36,56],[54,59,36,57],[54,60,36,58],[55,6,37,4],[55,12,37,10,"newParameters"],[55,25,37,23],[55,28,37,26],[55,34,37,32,"WebRTCModule"],[55,46,37,44],[55,47,37,45,"senderSetParameters"],[55,66,37,64],[55,67,37,65],[55,71,37,69],[55,72,37,70,"_peerConnectionId"],[55,89,37,87],[55,91,37,89],[55,95,37,93],[55,96,37,94,"_id"],[55,99,37,97],[55,101,37,99,"_params"],[55,108,37,106],[55,109,37,107],[56,6,38,4],[56,10,38,8],[56,11,38,9,"_rtpParameters"],[56,25,38,23],[56,28,38,26],[56,32,38,30,"RTCRtpSendParameters"],[56,61,38,50],[56,62,38,51,"newParameters"],[56,75,38,64],[56,76,38,65],[57,4,39,2],[58,4,40,2,"getStats"],[58,12,40,10,"getStats"],[58,13,40,10],[58,15,40,13],[59,6,41,4],[59,13,41,11,"WebRTCModule"],[59,25,41,23],[59,26,41,24,"senderGetStats"],[59,40,41,38],[59,41,41,39],[59,45,41,43],[59,46,41,44,"_peerConnectionId"],[59,63,41,61],[59,65,41,63],[59,69,41,67],[59,70,41,68,"_id"],[59,73,41,71],[59,74,41,72],[59,75,41,73,"then"],[59,79,41,77],[59,80,41,78,"data"],[59,84,41,82],[60,6,42,4],[61,0,43,0],[62,0,44,0],[63,0,45,0],[64,0,46,0],[65,0,47,0],[66,0,48,0],[67,0,49,0],[68,6,50,4],[68,10,50,8,"Map"],[68,13,50,11],[68,14,50,12,"JSON"],[68,18,50,16],[68,19,50,17,"parse"],[68,24,50,22],[68,25,50,23,"data"],[68,29,50,27],[68,30,50,28],[68,31,50,29],[68,32,50,30],[69,4,51,2],[70,4,52,2],[70,8,52,6,"track"],[70,13,52,11,"track"],[70,14,52,11],[70,16,52,14],[71,6,53,4],[71,13,53,11],[71,17,53,15],[71,18,53,16,"_track"],[71,24,53,22],[72,4,54,2],[73,4,55,2],[73,8,55,6,"id"],[73,10,55,8,"id"],[73,11,55,8],[73,13,55,11],[74,6,56,4],[74,13,56,11],[74,17,56,15],[74,18,56,16,"_id"],[74,21,56,19],[75,4,57,2],[76,2,58,0],[77,2,58,1,"exports"],[77,9,58,1],[77,10,58,1,"default"],[77,17,58,1],[77,20,58,1,"RTCRtpSender"],[77,32,58,1],[78,0,58,1],[78,3]],"functionMap":{"names":["_defineProperty","<global>","RTCRtpSender","constructor","replaceTrack","getCapabilities","getParameters","setParameters","getStats","WebRTCModule.senderGetStats.then$argument_0","get__track","get__id"],"mappings":"AAA,iNC;eCM;ECC;GDW;EEC;GFO;EGC;GHE;EIC;GJE;EKC;GLK;EMC;8ECC;6BDS;GNC;EQC;GRE;ESC;GTE;CDC"}},"type":"js/module"}]}