{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./RTCRtpReceiveParameters","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":212},"end":{"line":6,"column":64,"index":276}}],"key":"0Kb8VdEI2CktRN/tLwnT1fbLoaw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _RTCRtpReceiveParameters = _interopRequireDefault(require(_dependencyMap[4], \"./RTCRtpReceiveParameters\"));\n  var WebRTCModule = _reactNative.NativeModules.WebRTCModule;\n  var RTCRtpReceiver = exports.default = /*#__PURE__*/function () {\n    function RTCRtpReceiver(info) {\n      (0, _classCallCheck2.default)(this, RTCRtpReceiver);\n      this._track = null;\n      this._id = info.id;\n      this._peerConnectionId = info.peerConnectionId;\n      this._rtpParameters = new _RTCRtpReceiveParameters.default(info.rtpParameters);\n      if (info.track) {\n        this._track = info.track;\n      }\n    }\n    return (0, _createClass2.default)(RTCRtpReceiver, [{\n      key: \"getStats\",\n      value: function getStats() {\n        return WebRTCModule.receiverGetStats(this._peerConnectionId, this._id).then(data =>\n        /* On both Android and iOS it is faster to construct a single\n        JSON string representing the Map of StatsReports and have it\n        pass through the React Native bridge rather than the Map of\n        StatsReports. While the implementations do try to be faster in\n        general, the stress is on being faster to pass through the React\n        Native bridge which is a bottleneck that tends to be visible in\n        the UI when there is congestion involving UI-related passing.\n        */\n        new Map(JSON.parse(data)));\n      }\n    }, {\n      key: \"getParameters\",\n      value: function getParameters() {\n        return this._rtpParameters;\n      }\n    }, {\n      key: \"id\",\n      get: function () {\n        return this._id;\n      }\n    }, {\n      key: \"track\",\n      get: function () {\n        return this._track;\n      }\n    }], [{\n      key: \"getCapabilities\",\n      value: function getCapabilities(kind) {\n        return WebRTCModule.receiverGetCapabilities(kind);\n      }\n    }]);\n  }();\n});","lineCount":59,"map":[[9,2,1,0],[9,6,1,0,"_reactNative"],[9,18,1,0],[9,21,1,0,"require"],[9,28,1,0],[9,29,1,0,"_dependencyMap"],[9,43,1,0],[10,2,6,0],[10,6,6,0,"_RTCRtpReceiveParameters"],[10,30,6,0],[10,33,6,0,"_interopRequireDefault"],[10,55,6,0],[10,56,6,0,"require"],[10,63,6,0],[10,64,6,0,"_dependencyMap"],[10,78,6,0],[11,2,8,0],[11,6,8,8,"WebRTCModule"],[11,18,8,20],[11,21,8,25,"NativeModules"],[11,47,8,38],[11,48,8,8,"WebRTCModule"],[11,60,8,20],[12,2,8,39],[12,6,10,21,"RTCRtpReceiver"],[12,20,10,35],[12,23,10,35,"exports"],[12,30,10,35],[12,31,10,35,"default"],[12,38,10,35],[13,4,16,4],[13,13,16,4,"RTCRtpReceiver"],[13,28,16,16,"info"],[13,32,21,5],[13,34,21,7],[14,6,21,7],[14,10,21,7,"_classCallCheck2"],[14,26,21,7],[14,27,21,7,"default"],[14,34,21,7],[14,42,21,7,"RTCRtpReceiver"],[14,56,21,7],[15,6,21,7],[15,11,13,4,"_track"],[15,17,13,10],[15,20,13,38],[15,24,13,42],[16,6,22,8],[16,10,22,12],[16,11,22,13,"_id"],[16,14,22,16],[16,17,22,19,"info"],[16,21,22,23],[16,22,22,24,"id"],[16,24,22,26],[17,6,23,8],[17,10,23,12],[17,11,23,13,"_peerConnectionId"],[17,28,23,30],[17,31,23,33,"info"],[17,35,23,37],[17,36,23,38,"peerConnectionId"],[17,52,23,54],[18,6,24,8],[18,10,24,12],[18,11,24,13,"_rtpParameters"],[18,25,24,27],[18,28,24,30],[18,32,24,34,"RTCRtpReceiveParameters"],[18,64,24,57],[18,65,24,58,"info"],[18,69,24,62],[18,70,24,63,"rtpParameters"],[18,83,24,76],[18,84,24,77],[19,6,26,8],[19,10,26,12,"info"],[19,14,26,16],[19,15,26,17,"track"],[19,20,26,22],[19,22,26,24],[20,8,27,12],[20,12,27,16],[20,13,27,17,"_track"],[20,19,27,23],[20,22,27,26,"info"],[20,26,27,30],[20,27,27,31,"track"],[20,32,27,36],[21,6,28,8],[22,4,29,4],[23,4,29,5],[23,15,29,5,"_createClass2"],[23,28,29,5],[23,29,29,5,"default"],[23,36,29,5],[23,38,29,5,"RTCRtpReceiver"],[23,52,29,5],[24,6,29,5,"key"],[24,9,29,5],[25,6,29,5,"value"],[25,11,29,5],[25,13,35,4],[25,22,35,4,"getStats"],[25,30,35,12,"getStats"],[25,31,35,12],[25,33,35,15],[26,8,36,8],[26,15,36,15,"WebRTCModule"],[26,27,36,27],[26,28,36,28,"receiverGetStats"],[26,44,36,44],[26,45,36,45],[26,49,36,49],[26,50,36,50,"_peerConnectionId"],[26,67,36,67],[26,69,36,69],[26,73,36,73],[26,74,36,74,"_id"],[26,77,36,77],[26,78,36,78],[26,79,36,79,"then"],[26,83,36,83],[26,84,36,84,"data"],[26,88,36,88],[27,8,37,12],[28,0,38,0],[29,0,39,0],[30,0,40,0],[31,0,41,0],[32,0,42,0],[33,0,43,0],[34,0,44,0],[35,8,45,12],[35,12,45,16,"Map"],[35,15,45,19],[35,16,45,20,"JSON"],[35,20,45,24],[35,21,45,25,"parse"],[35,26,45,30],[35,27,45,31,"data"],[35,31,45,35],[35,32,45,36],[35,33,46,8],[35,34,46,9],[36,6,47,4],[37,4,47,5],[38,6,47,5,"key"],[38,9,47,5],[39,6,47,5,"value"],[39,11,47,5],[39,13,49,4],[39,22,49,4,"getParameters"],[39,35,49,17,"getParameters"],[39,36,49,17],[39,38,49,45],[40,8,50,8],[40,15,50,15],[40,19,50,19],[40,20,50,20,"_rtpParameters"],[40,34,50,34],[41,6,51,4],[42,4,51,5],[43,6,51,5,"key"],[43,9,51,5],[44,6,51,5,"get"],[44,9,51,5],[44,11,53,4],[44,20,53,4,"get"],[44,21,53,4],[44,23,53,13],[45,8,54,8],[45,15,54,15],[45,19,54,19],[45,20,54,20,"_id"],[45,23,54,23],[46,6,55,4],[47,4,55,5],[48,6,55,5,"key"],[48,9,55,5],[49,6,55,5,"get"],[49,9,55,5],[49,11,57,4],[49,20,57,4,"get"],[49,21,57,4],[49,23,57,16],[50,8,58,8],[50,15,58,15],[50,19,58,19],[50,20,58,20,"_track"],[50,26,58,26],[51,6,59,4],[52,4,59,5],[53,6,59,5,"key"],[53,9,59,5],[54,6,59,5,"value"],[54,11,59,5],[54,13,31,4],[54,22,31,11,"getCapabilities"],[54,37,31,26,"getCapabilities"],[54,38,31,27,"kind"],[54,42,31,50],[54,44,31,72],[55,8,32,8],[55,15,32,15,"WebRTCModule"],[55,27,32,27],[55,28,32,28,"receiverGetCapabilities"],[55,51,32,51],[55,52,32,52,"kind"],[55,56,32,56],[55,57,32,57],[56,6,33,4],[57,4,33,5],[58,2,33,5],[59,0,33,5],[59,3]],"functionMap":{"names":["<global>","RTCRtpReceiver","constructor","getCapabilities","getStats","WebRTCModule.receiverGetStats.then$argument_0","getParameters","get__id","get__track"],"mappings":"AAA;eCS;ICM;KDa;IEE;KFE;IGE;oFCC;qCDS;KHE;IKE;KLE;IME;KNE;IOE;KPE;CDC"}},"type":"js/module"}]}