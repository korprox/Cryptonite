{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"event-target-shim/index","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":76,"index":76}}],"key":"d2LuLwwFo1OVAiPiAfStHVEPB04=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/NativeModules","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MRft9soElPgDBIQyAww27iefYeU=","exportNames":["*"]}},{"name":"./getDisplayMedia","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":123},"end":{"line":3,"column":48,"index":171}}],"key":"c4ZMSr7cO9TorIF771rr4+MLNbQ=","exportNames":["*"]}},{"name":"./getUserMedia","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":172},"end":{"line":4,"column":42,"index":214}}],"key":"h/sWUJJ3buAsigR2PkfEtxZ8t5w=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _index = require(_dependencyMap[1], \"event-target-shim/index\");\n  var _NativeModules = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/NativeModules\"));\n  var _getDisplayMedia = _interopRequireDefault(require(_dependencyMap[3], \"./getDisplayMedia\"));\n  var _getUserMedia = _interopRequireDefault(require(_dependencyMap[4], \"./getUserMedia\"));\n  const {\n    WebRTCModule\n  } = _NativeModules.default;\n  class MediaDevices extends _index.EventTarget {\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code enumerateDevices}\n     * implementation.\n     */\n    enumerateDevices() {\n      return new Promise(resolve => WebRTCModule.enumerateDevices(resolve));\n    }\n\n    /**\n     * W3C \"Screen Capture\" compatible {@code getDisplayMedia} implementation.\n     * See: https://w3c.github.io/mediacapture-screen-share/\n     *\n     * @returns {Promise}\n     */\n    getDisplayMedia() {\n      return (0, _getDisplayMedia.default)();\n    }\n\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code getUserMedia}\n     * implementation.\n     * See: https://www.w3.org/TR/mediacapture-streams/#dom-mediadevices-enumeratedevices\n     *\n     * @param {*} constraints\n     * @returns {Promise}\n     */\n    getUserMedia(constraints) {\n      return (0, _getUserMedia.default)(constraints);\n    }\n  }\n\n  /**\n   * Define the `onxxx` event handlers.\n   */\n  const proto = MediaDevices.prototype;\n  (0, _index.defineEventAttribute)(proto, 'devicechange');\n  var _default = exports.default = new MediaDevices();\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_index"],[7,12,1,0],[7,15,1,0,"require"],[7,22,1,0],[7,23,1,0,"_dependencyMap"],[7,37,1,0],[8,2,1,76],[8,6,1,76,"_NativeModules"],[8,20,1,76],[8,23,1,76,"_interopRequireDefault"],[8,45,1,76],[8,46,1,76,"require"],[8,53,1,76],[8,54,1,76,"_dependencyMap"],[8,68,1,76],[9,2,3,0],[9,6,3,0,"_getDisplayMedia"],[9,22,3,0],[9,25,3,0,"_interopRequireDefault"],[9,47,3,0],[9,48,3,0,"require"],[9,55,3,0],[9,56,3,0,"_dependencyMap"],[9,70,3,0],[10,2,4,0],[10,6,4,0,"_getUserMedia"],[10,19,4,0],[10,22,4,0,"_interopRequireDefault"],[10,44,4,0],[10,45,4,0,"require"],[10,52,4,0],[10,53,4,0,"_dependencyMap"],[10,67,4,0],[11,2,5,0],[11,8,5,6],[12,4,6,2,"WebRTCModule"],[13,2,7,0],[13,3,7,1],[13,6,7,4,"NativeModules"],[13,28,7,17],[14,2,8,0],[14,8,8,6,"MediaDevices"],[14,20,8,18],[14,29,8,27,"EventTarget"],[14,47,8,38],[14,48,8,39],[15,4,9,2],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,4,13,2,"enumerateDevices"],[19,20,13,18,"enumerateDevices"],[19,21,13,18],[19,23,13,21],[20,6,14,4],[20,13,14,11],[20,17,14,15,"Promise"],[20,24,14,22],[20,25,14,23,"resolve"],[20,32,14,30],[20,36,14,34,"WebRTCModule"],[20,48,14,46],[20,49,14,47,"enumerateDevices"],[20,65,14,63],[20,66,14,64,"resolve"],[20,73,14,71],[20,74,14,72],[20,75,14,73],[21,4,15,2],[23,4,17,2],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,4,23,2,"getDisplayMedia"],[29,19,23,17,"getDisplayMedia"],[29,20,23,17],[29,22,23,20],[30,6,24,4],[30,13,24,11],[30,17,24,11,"getDisplayMedia"],[30,41,24,26],[30,43,24,27],[30,44,24,28],[31,4,25,2],[33,4,27,2],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,4,35,2,"getUserMedia"],[41,16,35,14,"getUserMedia"],[41,17,35,15,"constraints"],[41,28,35,26],[41,30,35,28],[42,6,36,4],[42,13,36,11],[42,17,36,11,"getUserMedia"],[42,38,36,23],[42,40,36,24,"constraints"],[42,51,36,35],[42,52,36,36],[43,4,37,2],[44,2,38,0],[46,2,40,0],[47,0,41,0],[48,0,42,0],[49,2,43,0],[49,8,43,6,"proto"],[49,13,43,11],[49,16,43,14,"MediaDevices"],[49,28,43,26],[49,29,43,27,"prototype"],[49,38,43,36],[50,2,44,0],[50,6,44,0,"defineEventAttribute"],[50,33,44,20],[50,35,44,21,"proto"],[50,40,44,26],[50,42,44,28],[50,56,44,42],[50,57,44,43],[51,2,44,44],[51,6,44,44,"_default"],[51,14,44,44],[51,17,44,44,"exports"],[51,24,44,44],[51,25,44,44,"default"],[51,32,44,44],[51,35,45,15],[51,39,45,19,"MediaDevices"],[51,51,45,31],[51,52,45,32],[51,53,45,33],[52,0,45,33],[52,3]],"functionMap":{"names":["<global>","MediaDevices","enumerateDevices","Promise$argument_0","getDisplayMedia","getUserMedia"],"mappings":"AAA;ACO;ECK;uBCC,iDD;GDC;EGQ;GHE;EIU;GJE;CDC"}},"type":"js/module"}]}