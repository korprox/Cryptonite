{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"event-target-shim/index","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":210},"end":{"line":2,"column":83,"index":293}}],"key":"d2LuLwwFo1OVAiPiAfStHVEPB04=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/NativeModules","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MRft9soElPgDBIQyAww27iefYeU=","exportNames":["*"]}},{"name":"./EventEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":340},"end":{"line":4,"column":61,"index":401}}],"key":"c7y51sdeNB+ZIpPSVQeGauhYgLk=","exportNames":["*"]}},{"name":"./Logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":402},"end":{"line":5,"column":30,"index":432}}],"key":"5Ly9HLoc+1926tsk0VOIulpST/Y=","exportNames":["*"]}},{"name":"./MediaStream","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":433},"end":{"line":6,"column":40,"index":473}}],"key":"3Kf/979wvknqzqe4InQeiqZ8m2s=","exportNames":["*"]}},{"name":"./MediaStreamTrack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":474},"end":{"line":7,"column":50,"index":524}}],"key":"p8DgKb9dKwcdlolbSXUFkI2QMkE=","exportNames":["*"]}},{"name":"./MediaStreamTrackEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":525},"end":{"line":8,"column":60,"index":585}}],"key":"8zkeAlwcpkB5cUufkBbi0aJcT+M=","exportNames":["*"]}},{"name":"./RTCDataChannel","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":586},"end":{"line":9,"column":46,"index":632}}],"key":"o7tcCGp5cjMMMzKlLuQrbWxUzUk=","exportNames":["*"]}},{"name":"./RTCDataChannelEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":633},"end":{"line":10,"column":56,"index":689}}],"key":"GQb1riZFVHc0m8fLvpJn3PaOGEc=","exportNames":["*"]}},{"name":"./RTCIceCandidate","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":690},"end":{"line":11,"column":48,"index":738}}],"key":"8piR4KGifuePn/S5VvVVtLLhp5w=","exportNames":["*"]}},{"name":"./RTCIceCandidateEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":739},"end":{"line":12,"column":58,"index":797}}],"key":"D3ddbYoeuGAqRmRgYF5M1gsk0CY=","exportNames":["*"]}},{"name":"./RTCRtpReceiveParameters","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":798},"end":{"line":13,"column":64,"index":862}}],"key":"0Kb8VdEI2CktRN/tLwnT1fbLoaw=","exportNames":["*"]}},{"name":"./RTCRtpReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":863},"end":{"line":14,"column":46,"index":909}}],"key":"yZAfthAEKMSwBwQXwoNpbYicKto=","exportNames":["*"]}},{"name":"./RTCRtpSendParameters","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":910},"end":{"line":15,"column":58,"index":968}}],"key":"/yZT0e+J5xh/yWE3KkbMJT/kJcA=","exportNames":["*"]}},{"name":"./RTCRtpSender","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":969},"end":{"line":16,"column":42,"index":1011}}],"key":"AcoppcC/iSelK3gWvtfO7colNTY=","exportNames":["*"]}},{"name":"./RTCRtpTransceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1012},"end":{"line":17,"column":52,"index":1064}}],"key":"jDsWKFFlCMRI2jYK6Qh+njDBfAg=","exportNames":["*"]}},{"name":"./RTCSessionDescription","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1065},"end":{"line":18,"column":60,"index":1125}}],"key":"TodN18NV/TPfeUao5B554ZRQpuo=","exportNames":["*"]}},{"name":"./RTCTrackEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1126},"end":{"line":19,"column":44,"index":1170}}],"key":"ZkXxf1qg4GqwuN0lKoMb4x5Jk+c=","exportNames":["*"]}},{"name":"./RTCUtil","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1171},"end":{"line":20,"column":37,"index":1208}}],"key":"CN8UyESr1mxcK8UZcasAG4s3jsI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _index = require(_dependencyMap[1], \"event-target-shim/index\");\n  var _NativeModules = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/NativeModules\"));\n  var _EventEmitter = require(_dependencyMap[3], \"./EventEmitter\");\n  var _Logger = _interopRequireDefault(require(_dependencyMap[4], \"./Logger\"));\n  var _MediaStream = _interopRequireDefault(require(_dependencyMap[5], \"./MediaStream\"));\n  var _MediaStreamTrack = _interopRequireDefault(require(_dependencyMap[6], \"./MediaStreamTrack\"));\n  var _MediaStreamTrackEvent = _interopRequireDefault(require(_dependencyMap[7], \"./MediaStreamTrackEvent\"));\n  var _RTCDataChannel = _interopRequireDefault(require(_dependencyMap[8], \"./RTCDataChannel\"));\n  var _RTCDataChannelEvent = _interopRequireDefault(require(_dependencyMap[9], \"./RTCDataChannelEvent\"));\n  var _RTCIceCandidate = _interopRequireDefault(require(_dependencyMap[10], \"./RTCIceCandidate\"));\n  var _RTCIceCandidateEvent = _interopRequireDefault(require(_dependencyMap[11], \"./RTCIceCandidateEvent\"));\n  var _RTCRtpReceiveParameters = _interopRequireDefault(require(_dependencyMap[12], \"./RTCRtpReceiveParameters\"));\n  var _RTCRtpReceiver = _interopRequireDefault(require(_dependencyMap[13], \"./RTCRtpReceiver\"));\n  var _RTCRtpSendParameters = _interopRequireDefault(require(_dependencyMap[14], \"./RTCRtpSendParameters\"));\n  var _RTCRtpSender = _interopRequireDefault(require(_dependencyMap[15], \"./RTCRtpSender\"));\n  var _RTCRtpTransceiver = _interopRequireDefault(require(_dependencyMap[16], \"./RTCRtpTransceiver\"));\n  var _RTCSessionDescription = _interopRequireDefault(require(_dependencyMap[17], \"./RTCSessionDescription\"));\n  var _RTCTrackEvent = _interopRequireDefault(require(_dependencyMap[18], \"./RTCTrackEvent\"));\n  var RTCUtil = _interopRequireWildcard(require(_dependencyMap[19], \"./RTCUtil\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const log = new _Logger.default('pc');\n  const {\n    WebRTCModule\n  } = _NativeModules.default;\n  let nextPeerConnectionId = 0;\n  class RTCPeerConnection extends _index.EventTarget {\n    constructor(configuration) {\n      super();\n      _defineProperty(this, \"localDescription\", null);\n      _defineProperty(this, \"remoteDescription\", null);\n      _defineProperty(this, \"signalingState\", 'stable');\n      _defineProperty(this, \"iceGatheringState\", 'new');\n      _defineProperty(this, \"connectionState\", 'new');\n      _defineProperty(this, \"iceConnectionState\", 'new');\n      _defineProperty(this, \"_pcId\", void 0);\n      _defineProperty(this, \"_transceivers\", void 0);\n      _defineProperty(this, \"_remoteStreams\", void 0);\n      _defineProperty(this, \"_pendingTrackEvents\", void 0);\n      this._pcId = nextPeerConnectionId++;\n\n      // Sanitize ICE servers.\n      if (configuration) {\n        var _configuration$iceSer;\n        const servers = (_configuration$iceSer = configuration === null || configuration === void 0 ? void 0 : configuration.iceServers) !== null && _configuration$iceSer !== void 0 ? _configuration$iceSer : [];\n        for (const server of servers) {\n          let urls = server.url || server.urls;\n          delete server.url;\n          delete server.urls;\n          if (!urls) {\n            continue;\n          }\n          if (!Array.isArray(urls)) {\n            urls = [urls];\n          }\n\n          // Native WebRTC does case sensitive parsing.\n          server.urls = urls.map(url => url.toLowerCase());\n        }\n\n        // Filter out bogus servers.\n        configuration.iceServers = servers.filter(s => s.urls);\n      }\n      if (!WebRTCModule.peerConnectionInit(configuration, this._pcId)) {\n        throw new Error('Failed to initialize PeerConnection, check the native logs!');\n      }\n      this._transceivers = [];\n      this._remoteStreams = new Map();\n      this._pendingTrackEvents = [];\n      this._registerEvents();\n      log.debug(`${this._pcId} ctor`);\n    }\n    async createOffer(options) {\n      log.debug(`${this._pcId} createOffer`);\n      const {\n        sdpInfo,\n        newTransceivers,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionCreateOffer(this._pcId, RTCUtil.normalizeOfferOptions(options));\n      log.debug(`${this._pcId} createOffer OK`);\n      newTransceivers === null || newTransceivers === void 0 ? void 0 : newTransceivers.forEach(t => {\n        const {\n          transceiverOrder,\n          transceiver\n        } = t;\n        const newSender = new _RTCRtpSender.default({\n          ...transceiver.sender,\n          track: null\n        });\n        const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n        const newReceiver = new _RTCRtpReceiver.default({\n          ...transceiver.receiver,\n          track: remoteTrack\n        });\n        const newTransceiver = new _RTCRtpTransceiver.default({\n          ...transceiver,\n          sender: newSender,\n          receiver: newReceiver\n        });\n        this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      });\n      this._updateTransceivers(transceiversInfo);\n      return sdpInfo;\n    }\n    async createAnswer() {\n      log.debug(`${this._pcId} createAnswer`);\n      const {\n        sdpInfo,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionCreateAnswer(this._pcId, {});\n      this._updateTransceivers(transceiversInfo);\n      return sdpInfo;\n    }\n    setConfiguration(configuration) {\n      WebRTCModule.peerConnectionSetConfiguration(configuration, this._pcId);\n    }\n    async setLocalDescription(sessionDescription) {\n      var _desc;\n      log.debug(`${this._pcId} setLocalDescription`);\n      let desc;\n      if (sessionDescription) {\n        var _sessionDescription$s;\n        desc = {\n          type: sessionDescription.type,\n          sdp: (_sessionDescription$s = sessionDescription.sdp) !== null && _sessionDescription$s !== void 0 ? _sessionDescription$s : ''\n        };\n        if (!RTCUtil.isSdpTypeValid(desc.type)) {\n          throw new Error(`Invalid session description: invalid type: ${desc.type}`);\n        }\n      } else {\n        desc = null;\n      }\n      const {\n        sdpInfo,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionSetLocalDescription(this._pcId, desc);\n      if (sdpInfo.type && sdpInfo.sdp) {\n        this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n      } else {\n        this.localDescription = null;\n      }\n      this._updateTransceivers(transceiversInfo, /* removeStopped */((_desc = desc) === null || _desc === void 0 ? void 0 : _desc.type) === 'answer');\n      log.debug(`${this._pcId} setLocalDescription OK`);\n    }\n    async setRemoteDescription(sessionDescription) {\n      var _sessionDescription$s2, _desc$type;\n      log.debug(`${this._pcId} setRemoteDescription`);\n      if (!sessionDescription) {\n        return Promise.reject(new Error('No session description provided'));\n      }\n      const desc = {\n        type: sessionDescription.type,\n        sdp: (_sessionDescription$s2 = sessionDescription.sdp) !== null && _sessionDescription$s2 !== void 0 ? _sessionDescription$s2 : ''\n      };\n      if (!RTCUtil.isSdpTypeValid((_desc$type = desc.type) !== null && _desc$type !== void 0 ? _desc$type : '')) {\n        throw new Error(`Invalid session description: invalid type: ${desc.type}`);\n      }\n      const {\n        sdpInfo,\n        newTransceivers,\n        transceiversInfo\n      } = await WebRTCModule.peerConnectionSetRemoteDescription(this._pcId, desc);\n      if (sdpInfo.type && sdpInfo.sdp) {\n        this.remoteDescription = new _RTCSessionDescription.default(sdpInfo);\n      } else {\n        this.remoteDescription = null;\n      }\n      newTransceivers === null || newTransceivers === void 0 ? void 0 : newTransceivers.forEach(t => {\n        const {\n          transceiverOrder,\n          transceiver\n        } = t;\n        const newSender = new _RTCRtpSender.default({\n          ...transceiver.sender,\n          track: null\n        });\n        const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n        const newReceiver = new _RTCRtpReceiver.default({\n          ...transceiver.receiver,\n          track: remoteTrack\n        });\n        const newTransceiver = new _RTCRtpTransceiver.default({\n          ...transceiver,\n          sender: newSender,\n          receiver: newReceiver\n        });\n        this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      });\n      this._updateTransceivers(transceiversInfo, /* removeStopped */desc.type === 'answer');\n\n      // Fire track events. They must fire before sRD resolves.\n      const pendingTrackEvents = this._pendingTrackEvents;\n      this._pendingTrackEvents = [];\n      for (const ev of pendingTrackEvents) {\n        const [transceiver] = this.getTransceivers().filter(t => t.receiver.id === ev.receiver.id);\n\n        // We need to fire this event for an existing track sometimes, like\n        // when the transceiver direction (on the sending side) switches from\n        // sendrecv to recvonly and then back.\n\n        // @ts-ignore\n        const track = transceiver.receiver.track;\n        transceiver._mid = ev.transceiver.mid;\n        transceiver._currentDirection = ev.transceiver.currentDirection;\n        transceiver._direction = ev.transceiver.direction;\n\n        // Get the stream object from the event. Create if necessary.\n        const streams = ev.streams.map(streamInfo => {\n          // Here we are making sure that we don't create stream objects that already exist\n          // So that event listeners do get the same object if it has been created before.\n          if (!this._remoteStreams.has(streamInfo.streamId)) {\n            const stream = new _MediaStream.default({\n              streamId: streamInfo.streamId,\n              streamReactTag: streamInfo.streamReactTag,\n              tracks: []\n            });\n            this._remoteStreams.set(streamInfo.streamId, stream);\n          }\n          const stream = this._remoteStreams.get(streamInfo.streamId);\n          if (!(stream !== null && stream !== void 0 && stream._tracks.includes(track))) {\n            stream === null || stream === void 0 ? void 0 : stream._tracks.push(track);\n          }\n          return stream;\n        });\n        const eventData = {\n          streams,\n          transceiver,\n          track,\n          receiver: transceiver.receiver\n        };\n        this.dispatchEvent(new _RTCTrackEvent.default('track', eventData));\n        streams.forEach(stream => {\n          stream.dispatchEvent(new _MediaStreamTrackEvent.default('addtrack', {\n            track\n          }));\n        });\n\n        // Dispatch an unmute event for the track.\n        track._setMutedInternal(false);\n      }\n      log.debug(`${this._pcId} setRemoteDescription OK`);\n    }\n    async addIceCandidate(candidate) {\n      log.debug(`${this._pcId} addIceCandidate`);\n      if (!candidate || !candidate.candidate) {\n        // XXX end-of candidates is not implemented: https://bugs.chromium.org/p/webrtc/issues/detail?id=9218\n        return;\n      }\n      if ((candidate.sdpMLineIndex === null || candidate.sdpMLineIndex === undefined) && (candidate.sdpMid === null || candidate.sdpMid === undefined)) {\n        throw new TypeError('`sdpMLineIndex` and `sdpMid` must not be both null or undefined');\n      }\n      const newSdp = await WebRTCModule.peerConnectionAddICECandidate(this._pcId, RTCUtil.deepClone(candidate));\n      this.remoteDescription = new _RTCSessionDescription.default(newSdp);\n    }\n\n    /**\n     * @brief Adds a new track to the {@link RTCPeerConnection},\n     * and indicates that it is contained in the specified {@link MediaStream}s.\n     * This method has to be synchronous as the W3C API expects a track to be returned\n     * @param {MediaStreamTrack} track The track to be added\n     * @param {...MediaStream} streams One or more {@link MediaStream}s the track needs to be added to\n     * https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtrack\n     */\n    addTrack(track) {\n      log.debug(`${this._pcId} addTrack`);\n      if (this.connectionState === 'closed') {\n        throw new Error('Peer Connection is closed');\n      }\n      if (this._trackExists(track)) {\n        throw new Error('Track already exists in a sender');\n      }\n      for (var _len = arguments.length, streams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        streams[_key - 1] = arguments[_key];\n      }\n      const streamIds = streams.map(s => s.id);\n      const result = WebRTCModule.peerConnectionAddTrack(this._pcId, track.id, {\n        streamIds\n      });\n      if (result === null) {\n        throw new Error('Could not add sender');\n      }\n      const {\n        transceiverOrder,\n        transceiver,\n        sender\n      } = result;\n\n      // According to the W3C docs, the sender could have been reused, and\n      // so we check if that is the case, and update accordingly.\n      const [existingSender] = this.getSenders().filter(s => s.id === sender.id);\n      if (existingSender) {\n        // Update sender\n        existingSender._track = track;\n\n        // Update the corresponding transceiver as well\n        const [existingTransceiver] = this.getTransceivers().filter(t => t.sender.id === existingSender.id);\n        existingTransceiver._direction = transceiver.direction;\n        existingTransceiver._currentDirection = transceiver.currentDirection;\n        return existingSender;\n      }\n\n      // This is a new transceiver, should create a transceiver for it and add it\n      const newSender = new _RTCRtpSender.default({\n        ...transceiver.sender,\n        track\n      });\n      const remoteTrack = transceiver.receiver.track ? new _MediaStreamTrack.default(transceiver.receiver.track) : null;\n      const newReceiver = new _RTCRtpReceiver.default({\n        ...transceiver.receiver,\n        track: remoteTrack\n      });\n      const newTransceiver = new _RTCRtpTransceiver.default({\n        ...transceiver,\n        sender: newSender,\n        receiver: newReceiver\n      });\n      this._insertTransceiverSorted(transceiverOrder, newTransceiver);\n      return newSender;\n    }\n    addTransceiver(source, init) {\n      log.debug(`${this._pcId} addTransceiver`);\n      let src = {};\n      if (source === 'audio') {\n        src = {\n          type: 'audio'\n        };\n      } else if (source === 'video') {\n        src = {\n          type: 'video'\n        };\n      } else {\n        src = {\n          trackId: source.id\n        };\n      }\n\n      // Extract the stream ids\n      if (init && init.streams) {\n        init.streamIds = init.streams.map(stream => stream.id);\n      }\n      const result = WebRTCModule.peerConnectionAddTransceiver(this._pcId, {\n        ...src,\n        init: {\n          ...init\n        }\n      });\n      if (result === null) {\n        throw new Error('Transceiver could not be added');\n      }\n      const t = result.transceiver;\n      let track = null;\n      if (typeof source === 'string') {\n        if (t.sender.track) {\n          track = new _MediaStreamTrack.default(t.sender.track);\n        }\n      } else {\n        // 'source' is a MediaStreamTrack\n        track = source;\n      }\n      const sender = new _RTCRtpSender.default({\n        ...t.sender,\n        track\n      });\n      const remoteTrack = t.receiver.track ? new _MediaStreamTrack.default(t.receiver.track) : null;\n      const receiver = new _RTCRtpReceiver.default({\n        ...t.receiver,\n        track: remoteTrack\n      });\n      const transceiver = new _RTCRtpTransceiver.default({\n        ...result.transceiver,\n        sender,\n        receiver\n      });\n      this._insertTransceiverSorted(result.transceiverOrder, transceiver);\n      return transceiver;\n    }\n    removeTrack(sender) {\n      log.debug(`${this._pcId} removeTrack`);\n      if (this._pcId !== sender._peerConnectionId) {\n        throw new Error('Sender does not belong to this peer connection');\n      }\n      if (this.connectionState === 'closed') {\n        throw new Error('Peer Connection is closed');\n      }\n      const existingSender = this.getSenders().find(s => s === sender);\n      if (!existingSender) {\n        throw new Error('Sender does not exist');\n      }\n      if (existingSender.track === null) {\n        return;\n      }\n\n      // Blocking!\n      WebRTCModule.peerConnectionRemoveTrack(this._pcId, sender.id);\n      existingSender._track = null;\n      const [existingTransceiver] = this.getTransceivers().filter(t => t.sender.id === existingSender.id);\n      existingTransceiver._direction = existingTransceiver.direction === 'sendrecv' ? 'recvonly' : 'inactive';\n    }\n    async getStats(selector) {\n      log.debug(`${this._pcId} getStats`);\n      if (!selector) {\n        const data = await WebRTCModule.peerConnectionGetStats(this._pcId);\n\n        /**\n         * On both Android and iOS it is faster to construct a single\n         * JSON string representing the Map of StatsReports and have it\n         * pass through the React Native bridge rather than the Map of\n         * StatsReports. While the implementations do try to be faster in\n         * general, the stress is on being faster to pass through the React\n         * Native bridge which is a bottleneck that tends to be visible in\n         * the UI when there is congestion involving UI-related passing.\n         */\n        return new Map(JSON.parse(data));\n      } else {\n        const senders = this.getSenders().filter(s => s.track === selector);\n        const receivers = this.getReceivers().filter(r => r.track === selector);\n        const matches = senders.length + receivers.length;\n        if (matches === 0) {\n          throw new Error('Invalid selector: could not find matching sender / receiver');\n        } else if (matches > 1) {\n          throw new Error('Invalid selector: multiple matching senders / receivers');\n        } else {\n          const sr = senders[0] || receivers[0];\n          return sr.getStats();\n        }\n      }\n    }\n    getTransceivers() {\n      return this._transceivers.map(e => e.transceiver);\n    }\n    getSenders() {\n      return this._transceivers.filter(e => !e.transceiver.stopped).map(e => e.transceiver.sender);\n    }\n    getReceivers() {\n      return this._transceivers.filter(e => !e.transceiver.stopped).map(e => e.transceiver.receiver);\n    }\n    close() {\n      log.debug(`${this._pcId} close`);\n      if (this.connectionState === 'closed') {\n        return;\n      }\n      WebRTCModule.peerConnectionClose(this._pcId);\n\n      // Mark transceivers as stopped.\n      this._transceivers.forEach(_ref => {\n        let {\n          transceiver\n        } = _ref;\n        transceiver._setStopped();\n      });\n    }\n    restartIce() {\n      WebRTCModule.peerConnectionRestartIce(this._pcId);\n    }\n    _registerEvents() {\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnRenegotiationNeeded', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.dispatchEvent(new _index.Event('negotiationneeded'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionIceConnectionChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.iceConnectionState = ev.iceConnectionState;\n        this.dispatchEvent(new _index.Event('iceconnectionstatechange'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionStateChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.connectionState = ev.connectionState;\n        this.dispatchEvent(new _index.Event('connectionstatechange'));\n        if (ev.connectionState === 'closed') {\n          // This PeerConnection is done, clean up.\n          (0, _EventEmitter.removeListener)(this);\n          WebRTCModule.peerConnectionDispose(this._pcId);\n        }\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionSignalingStateChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.signalingState = ev.signalingState;\n        this.dispatchEvent(new _index.Event('signalingstatechange'));\n      });\n\n      // Consider moving away from this event: https://github.com/WebKit/WebKit/pull/3953\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnTrack', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        log.debug(`${this._pcId} ontrack`);\n\n        // NOTE: We need to make sure the track event fires right before sRD completes,\n        // so we queue them up here and dispatch the events when sRD fires, but before completing it.\n        // In the future we should probably implement out own logic and drop this event altogether.\n        this._pendingTrackEvents.push(ev);\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionOnRemoveTrack', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        log.debug(`${this._pcId} onremovetrack ${ev.receiverId}`);\n        const receiver = this.getReceivers().find(r => r.id === ev.receiverId);\n        const track = receiver === null || receiver === void 0 ? void 0 : receiver.track;\n        if (receiver && track) {\n          // As per the spec:\n          // - Remove the track from any media streams that were previously passed to the `track` event.\n          // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-removetrack,\n          // - Mark the track as muted:\n          // https://w3c.github.io/webrtc-pc/#process-remote-track-removal\n          for (const stream of this._remoteStreams.values()) {\n            if (stream._tracks.includes(track)) {\n              const trackIdx = stream._tracks.indexOf(track);\n              log.debug(`${this._pcId} removetrack ${track.id}`);\n              stream._tracks.splice(trackIdx, 1);\n              stream.dispatchEvent(new _MediaStreamTrackEvent.default('removetrack', {\n                track\n              }));\n\n              // Dispatch a mute event for the track.\n              track._setMutedInternal(true);\n            }\n          }\n        }\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionGotICECandidate', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const sdpInfo = ev.sdp;\n\n        // Can happen when doing a rollback.\n        if (sdpInfo.type && sdpInfo.sdp) {\n          this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n        } else {\n          this.localDescription = null;\n        }\n        const candidate = new _RTCIceCandidate.default(ev.candidate);\n        this.dispatchEvent(new _RTCIceCandidateEvent.default('icecandidate', {\n          candidate\n        }));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionIceGatheringChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        this.iceGatheringState = ev.iceGatheringState;\n        if (this.iceGatheringState === 'complete') {\n          const sdpInfo = ev.sdp;\n\n          // Can happen when doing a rollback.\n          if (sdpInfo.type && sdpInfo.sdp) {\n            this.localDescription = new _RTCSessionDescription.default(sdpInfo);\n          } else {\n            this.localDescription = null;\n          }\n          this.dispatchEvent(new _RTCIceCandidateEvent.default('icecandidate', {\n            candidate: null\n          }));\n        }\n        this.dispatchEvent(new _index.Event('icegatheringstatechange'));\n      });\n      (0, _EventEmitter.addListener)(this, 'peerConnectionDidOpenDataChannel', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const channel = new _RTCDataChannel.default(ev.dataChannel);\n        this.dispatchEvent(new _RTCDataChannelEvent.default('datachannel', {\n          channel\n        }));\n\n        // Send 'open' event. Native doesn't update the state since it's already\n        // set at this point.\n        channel.dispatchEvent(new _RTCDataChannelEvent.default('open', {\n          channel\n        }));\n      });\n      (0, _EventEmitter.addListener)(this, 'mediaStreamTrackMuteChanged', ev => {\n        if (ev.pcId !== this._pcId) {\n          return;\n        }\n        const [track] = this.getReceivers().map(r => r.track).filter(t => (t === null || t === void 0 ? void 0 : t.id) === ev.trackId);\n        if (track) {\n          track._setMutedInternal(ev.muted);\n        }\n      });\n    }\n\n    /**\n     * Creates a new RTCDataChannel object with the given label. The\n     * RTCDataChannelInit dictionary can be used to configure properties of the\n     * underlying channel such as data reliability.\n     *\n     * @param {string} label - the value with which the label attribute of the new\n     * instance is to be initialized\n     * @param {RTCDataChannelInit} dataChannelDict - an optional dictionary of\n     * values with which to initialize corresponding attributes of the new\n     * instance such as id\n     */\n    createDataChannel(label, dataChannelDict) {\n      if (arguments.length === 0) {\n        throw new TypeError('1 argument required, but 0 present');\n      }\n      if (dataChannelDict && 'id' in dataChannelDict) {\n        const id = dataChannelDict.id;\n        if (typeof id !== 'number') {\n          throw new TypeError('DataChannel id must be a number: ' + id);\n        }\n      }\n      const channelInfo = WebRTCModule.createDataChannel(this._pcId, String(label), dataChannelDict);\n      if (channelInfo === null) {\n        throw new TypeError('Failed to create new DataChannel');\n      }\n      return new _RTCDataChannel.default(channelInfo);\n    }\n\n    /**\n     * Check whether a media stream track exists already in a sender.\n     * See https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtrack for more information\n     */\n    _trackExists(track) {\n      const [sender] = this.getSenders().filter(sender => {\n        var _sender$track;\n        return ((_sender$track = sender.track) === null || _sender$track === void 0 ? void 0 : _sender$track.id) === track.id;\n      });\n      return sender ? true : false;\n    }\n\n    /**\n     * Updates transceivers after offer/answer updates if necessary.\n     */\n    _updateTransceivers(transceiverUpdates) {\n      let removeStopped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      for (const update of transceiverUpdates) {\n        const [transceiver] = this.getTransceivers().filter(t => t.sender.id === update.transceiverId);\n        if (!transceiver) {\n          continue;\n        }\n        if (update.currentDirection) {\n          transceiver._currentDirection = update.currentDirection;\n        }\n        transceiver._mid = update.mid;\n        transceiver._stopped = Boolean(update.isStopped);\n        transceiver._sender._rtpParameters = new _RTCRtpSendParameters.default(update.senderRtpParameters);\n        transceiver._receiver._rtpParameters = new _RTCRtpReceiveParameters.default(update.receiverRtpParameters);\n      }\n      if (removeStopped) {\n        const stopped = this.getTransceivers().filter(t => t.stopped);\n        const newTransceivers = this._transceivers.filter(t => !stopped.includes(t.transceiver));\n        this._transceivers = newTransceivers;\n      }\n    }\n\n    /**\n     * Inserts transceiver into the transceiver array in the order they are created (timestamp).\n     * @param order an index that refers to when it it was created relatively.\n     * @param transceiver the transceiver object to be inserted.\n     */\n    _insertTransceiverSorted(order, transceiver) {\n      this._transceivers.push({\n        order,\n        transceiver\n      });\n      this._transceivers.sort((a, b) => a.order - b.order);\n    }\n  }\n\n  /**\n   * Define the `onxxx` event handlers.\n   */\n  exports.default = RTCPeerConnection;\n  const proto = RTCPeerConnection.prototype;\n  (0, _index.defineEventAttribute)(proto, 'connectionstatechange');\n  (0, _index.defineEventAttribute)(proto, 'icecandidate');\n  (0, _index.defineEventAttribute)(proto, 'icecandidateerror');\n  (0, _index.defineEventAttribute)(proto, 'iceconnectionstatechange');\n  (0, _index.defineEventAttribute)(proto, 'icegatheringstatechange');\n  (0, _index.defineEventAttribute)(proto, 'negotiationneeded');\n  (0, _index.defineEventAttribute)(proto, 'signalingstatechange');\n  (0, _index.defineEventAttribute)(proto, 'datachannel');\n  (0, _index.defineEventAttribute)(proto, 'track');\n  (0, _index.defineEventAttribute)(proto, 'error');\n});","lineCount":704,"map":[[7,2,2,0],[7,6,2,0,"_index"],[7,12,2,0],[7,15,2,0,"require"],[7,22,2,0],[7,23,2,0,"_dependencyMap"],[7,37,2,0],[8,2,2,83],[8,6,2,83,"_NativeModules"],[8,20,2,83],[8,23,2,83,"_interopRequireDefault"],[8,45,2,83],[8,46,2,83,"require"],[8,53,2,83],[8,54,2,83,"_dependencyMap"],[8,68,2,83],[9,2,4,0],[9,6,4,0,"_EventEmitter"],[9,19,4,0],[9,22,4,0,"require"],[9,29,4,0],[9,30,4,0,"_dependencyMap"],[9,44,4,0],[10,2,5,0],[10,6,5,0,"_Logger"],[10,13,5,0],[10,16,5,0,"_interopRequireDefault"],[10,38,5,0],[10,39,5,0,"require"],[10,46,5,0],[10,47,5,0,"_dependencyMap"],[10,61,5,0],[11,2,6,0],[11,6,6,0,"_MediaStream"],[11,18,6,0],[11,21,6,0,"_interopRequireDefault"],[11,43,6,0],[11,44,6,0,"require"],[11,51,6,0],[11,52,6,0,"_dependencyMap"],[11,66,6,0],[12,2,7,0],[12,6,7,0,"_MediaStreamTrack"],[12,23,7,0],[12,26,7,0,"_interopRequireDefault"],[12,48,7,0],[12,49,7,0,"require"],[12,56,7,0],[12,57,7,0,"_dependencyMap"],[12,71,7,0],[13,2,8,0],[13,6,8,0,"_MediaStreamTrackEvent"],[13,28,8,0],[13,31,8,0,"_interopRequireDefault"],[13,53,8,0],[13,54,8,0,"require"],[13,61,8,0],[13,62,8,0,"_dependencyMap"],[13,76,8,0],[14,2,9,0],[14,6,9,0,"_RTCDataChannel"],[14,21,9,0],[14,24,9,0,"_interopRequireDefault"],[14,46,9,0],[14,47,9,0,"require"],[14,54,9,0],[14,55,9,0,"_dependencyMap"],[14,69,9,0],[15,2,10,0],[15,6,10,0,"_RTCDataChannelEvent"],[15,26,10,0],[15,29,10,0,"_interopRequireDefault"],[15,51,10,0],[15,52,10,0,"require"],[15,59,10,0],[15,60,10,0,"_dependencyMap"],[15,74,10,0],[16,2,11,0],[16,6,11,0,"_RTCIceCandidate"],[16,22,11,0],[16,25,11,0,"_interopRequireDefault"],[16,47,11,0],[16,48,11,0,"require"],[16,55,11,0],[16,56,11,0,"_dependencyMap"],[16,70,11,0],[17,2,12,0],[17,6,12,0,"_RTCIceCandidateEvent"],[17,27,12,0],[17,30,12,0,"_interopRequireDefault"],[17,52,12,0],[17,53,12,0,"require"],[17,60,12,0],[17,61,12,0,"_dependencyMap"],[17,75,12,0],[18,2,13,0],[18,6,13,0,"_RTCRtpReceiveParameters"],[18,30,13,0],[18,33,13,0,"_interopRequireDefault"],[18,55,13,0],[18,56,13,0,"require"],[18,63,13,0],[18,64,13,0,"_dependencyMap"],[18,78,13,0],[19,2,14,0],[19,6,14,0,"_RTCRtpReceiver"],[19,21,14,0],[19,24,14,0,"_interopRequireDefault"],[19,46,14,0],[19,47,14,0,"require"],[19,54,14,0],[19,55,14,0,"_dependencyMap"],[19,69,14,0],[20,2,15,0],[20,6,15,0,"_RTCRtpSendParameters"],[20,27,15,0],[20,30,15,0,"_interopRequireDefault"],[20,52,15,0],[20,53,15,0,"require"],[20,60,15,0],[20,61,15,0,"_dependencyMap"],[20,75,15,0],[21,2,16,0],[21,6,16,0,"_RTCRtpSender"],[21,19,16,0],[21,22,16,0,"_interopRequireDefault"],[21,44,16,0],[21,45,16,0,"require"],[21,52,16,0],[21,53,16,0,"_dependencyMap"],[21,67,16,0],[22,2,17,0],[22,6,17,0,"_RTCRtpTransceiver"],[22,24,17,0],[22,27,17,0,"_interopRequireDefault"],[22,49,17,0],[22,50,17,0,"require"],[22,57,17,0],[22,58,17,0,"_dependencyMap"],[22,72,17,0],[23,2,18,0],[23,6,18,0,"_RTCSessionDescription"],[23,28,18,0],[23,31,18,0,"_interopRequireDefault"],[23,53,18,0],[23,54,18,0,"require"],[23,61,18,0],[23,62,18,0,"_dependencyMap"],[23,76,18,0],[24,2,19,0],[24,6,19,0,"_RTCTrackEvent"],[24,20,19,0],[24,23,19,0,"_interopRequireDefault"],[24,45,19,0],[24,46,19,0,"require"],[24,53,19,0],[24,54,19,0,"_dependencyMap"],[24,68,19,0],[25,2,20,0],[25,6,20,0,"RTCUtil"],[25,13,20,0],[25,16,20,0,"_interopRequireWildcard"],[25,39,20,0],[25,40,20,0,"require"],[25,47,20,0],[25,48,20,0,"_dependencyMap"],[25,62,20,0],[26,2,20,37],[26,11,20,37,"_interopRequireWildcard"],[26,35,20,37,"e"],[26,36,20,37],[26,38,20,37,"t"],[26,39,20,37],[26,68,20,37,"WeakMap"],[26,75,20,37],[26,81,20,37,"r"],[26,82,20,37],[26,89,20,37,"WeakMap"],[26,96,20,37],[26,100,20,37,"n"],[26,101,20,37],[26,108,20,37,"WeakMap"],[26,115,20,37],[26,127,20,37,"_interopRequireWildcard"],[26,150,20,37],[26,162,20,37,"_interopRequireWildcard"],[26,163,20,37,"e"],[26,164,20,37],[26,166,20,37,"t"],[26,167,20,37],[26,176,20,37,"t"],[26,177,20,37],[26,181,20,37,"e"],[26,182,20,37],[26,186,20,37,"e"],[26,187,20,37],[26,188,20,37,"__esModule"],[26,198,20,37],[26,207,20,37,"e"],[26,208,20,37],[26,214,20,37,"o"],[26,215,20,37],[26,217,20,37,"i"],[26,218,20,37],[26,220,20,37,"f"],[26,221,20,37],[26,226,20,37,"__proto__"],[26,235,20,37],[26,243,20,37,"default"],[26,250,20,37],[26,252,20,37,"e"],[26,253,20,37],[26,270,20,37,"e"],[26,271,20,37],[26,294,20,37,"e"],[26,295,20,37],[26,320,20,37,"e"],[26,321,20,37],[26,330,20,37,"f"],[26,331,20,37],[26,337,20,37,"o"],[26,338,20,37],[26,341,20,37,"t"],[26,342,20,37],[26,345,20,37,"n"],[26,346,20,37],[26,349,20,37,"r"],[26,350,20,37],[26,358,20,37,"o"],[26,359,20,37],[26,360,20,37,"has"],[26,363,20,37],[26,364,20,37,"e"],[26,365,20,37],[26,375,20,37,"o"],[26,376,20,37],[26,377,20,37,"get"],[26,380,20,37],[26,381,20,37,"e"],[26,382,20,37],[26,385,20,37,"o"],[26,386,20,37],[26,387,20,37,"set"],[26,390,20,37],[26,391,20,37,"e"],[26,392,20,37],[26,394,20,37,"f"],[26,395,20,37],[26,411,20,37,"t"],[26,412,20,37],[26,416,20,37,"e"],[26,417,20,37],[26,433,20,37,"t"],[26,434,20,37],[26,441,20,37,"hasOwnProperty"],[26,455,20,37],[26,456,20,37,"call"],[26,460,20,37],[26,461,20,37,"e"],[26,462,20,37],[26,464,20,37,"t"],[26,465,20,37],[26,472,20,37,"i"],[26,473,20,37],[26,477,20,37,"o"],[26,478,20,37],[26,481,20,37,"Object"],[26,487,20,37],[26,488,20,37,"defineProperty"],[26,502,20,37],[26,507,20,37,"Object"],[26,513,20,37],[26,514,20,37,"getOwnPropertyDescriptor"],[26,538,20,37],[26,539,20,37,"e"],[26,540,20,37],[26,542,20,37,"t"],[26,543,20,37],[26,550,20,37,"i"],[26,551,20,37],[26,552,20,37,"get"],[26,555,20,37],[26,559,20,37,"i"],[26,560,20,37],[26,561,20,37,"set"],[26,564,20,37],[26,568,20,37,"o"],[26,569,20,37],[26,570,20,37,"f"],[26,571,20,37],[26,573,20,37,"t"],[26,574,20,37],[26,576,20,37,"i"],[26,577,20,37],[26,581,20,37,"f"],[26,582,20,37],[26,583,20,37,"t"],[26,584,20,37],[26,588,20,37,"e"],[26,589,20,37],[26,590,20,37,"t"],[26,591,20,37],[26,602,20,37,"f"],[26,603,20,37],[26,608,20,37,"e"],[26,609,20,37],[26,611,20,37,"t"],[26,612,20,37],[27,2,1,0],[27,11,1,9,"_defineProperty"],[27,26,1,24,"_defineProperty"],[27,27,1,25,"obj"],[27,30,1,28],[27,32,1,30,"key"],[27,35,1,33],[27,37,1,35,"value"],[27,42,1,40],[27,44,1,42],[28,4,1,44],[28,8,1,48,"key"],[28,11,1,51],[28,15,1,55,"obj"],[28,18,1,58],[28,20,1,60],[29,6,1,62,"Object"],[29,12,1,68],[29,13,1,69,"defineProperty"],[29,27,1,83],[29,28,1,84,"obj"],[29,31,1,87],[29,33,1,89,"key"],[29,36,1,92],[29,38,1,94],[30,8,1,96,"value"],[30,13,1,101],[30,15,1,103,"value"],[30,20,1,108],[31,8,1,110,"enumerable"],[31,18,1,120],[31,20,1,122],[31,24,1,126],[32,8,1,128,"configurable"],[32,20,1,140],[32,22,1,142],[32,26,1,146],[33,8,1,148,"writable"],[33,16,1,156],[33,18,1,158],[34,6,1,163],[34,7,1,164],[34,8,1,165],[35,4,1,167],[35,5,1,168],[35,11,1,174],[36,6,1,176,"obj"],[36,9,1,179],[36,10,1,180,"key"],[36,13,1,183],[36,14,1,184],[36,17,1,187,"value"],[36,22,1,192],[37,4,1,194],[38,4,1,196],[38,11,1,203,"obj"],[38,14,1,206],[39,2,1,208],[40,2,21,0],[40,8,21,6,"log"],[40,11,21,9],[40,14,21,12],[40,18,21,16,"Logger"],[40,33,21,22],[40,34,21,23],[40,38,21,27],[40,39,21,28],[41,2,22,0],[41,8,22,6],[42,4,23,2,"WebRTCModule"],[43,2,24,0],[43,3,24,1],[43,6,24,4,"NativeModules"],[43,28,24,17],[44,2,25,0],[44,6,25,4,"nextPeerConnectionId"],[44,26,25,24],[44,29,25,27],[44,30,25,28],[45,2,26,15],[45,8,26,21,"RTCPeerConnection"],[45,25,26,38],[45,34,26,47,"EventTarget"],[45,52,26,58],[45,53,26,59],[46,4,27,2,"constructor"],[46,15,27,13,"constructor"],[46,16,27,14,"configuration"],[46,29,27,27],[46,31,27,29],[47,6,28,4],[47,11,28,9],[47,12,28,10],[47,13,28,11],[48,6,29,4,"_defineProperty"],[48,21,29,19],[48,22,29,20],[48,26,29,24],[48,28,29,26],[48,46,29,44],[48,48,29,46],[48,52,29,50],[48,53,29,51],[49,6,30,4,"_defineProperty"],[49,21,30,19],[49,22,30,20],[49,26,30,24],[49,28,30,26],[49,47,30,45],[49,49,30,47],[49,53,30,51],[49,54,30,52],[50,6,31,4,"_defineProperty"],[50,21,31,19],[50,22,31,20],[50,26,31,24],[50,28,31,26],[50,44,31,42],[50,46,31,44],[50,54,31,52],[50,55,31,53],[51,6,32,4,"_defineProperty"],[51,21,32,19],[51,22,32,20],[51,26,32,24],[51,28,32,26],[51,47,32,45],[51,49,32,47],[51,54,32,52],[51,55,32,53],[52,6,33,4,"_defineProperty"],[52,21,33,19],[52,22,33,20],[52,26,33,24],[52,28,33,26],[52,45,33,43],[52,47,33,45],[52,52,33,50],[52,53,33,51],[53,6,34,4,"_defineProperty"],[53,21,34,19],[53,22,34,20],[53,26,34,24],[53,28,34,26],[53,48,34,46],[53,50,34,48],[53,55,34,53],[53,56,34,54],[54,6,35,4,"_defineProperty"],[54,21,35,19],[54,22,35,20],[54,26,35,24],[54,28,35,26],[54,35,35,33],[54,37,35,35],[54,42,35,40],[54,43,35,41],[54,44,35,42],[55,6,36,4,"_defineProperty"],[55,21,36,19],[55,22,36,20],[55,26,36,24],[55,28,36,26],[55,43,36,41],[55,45,36,43],[55,50,36,48],[55,51,36,49],[55,52,36,50],[56,6,37,4,"_defineProperty"],[56,21,37,19],[56,22,37,20],[56,26,37,24],[56,28,37,26],[56,44,37,42],[56,46,37,44],[56,51,37,49],[56,52,37,50],[56,53,37,51],[57,6,38,4,"_defineProperty"],[57,21,38,19],[57,22,38,20],[57,26,38,24],[57,28,38,26],[57,49,38,47],[57,51,38,49],[57,56,38,54],[57,57,38,55],[57,58,38,56],[58,6,39,4],[58,10,39,8],[58,11,39,9,"_pcId"],[58,16,39,14],[58,19,39,17,"nextPeerConnectionId"],[58,39,39,37],[58,41,39,39],[60,6,41,4],[61,6,42,4],[61,10,42,8,"configuration"],[61,23,42,21],[61,25,42,23],[62,8,43,6],[62,12,43,10,"_configuration$iceSer"],[62,33,43,31],[63,8,44,6],[63,14,44,12,"servers"],[63,21,44,19],[63,24,44,22],[63,25,44,23,"_configuration$iceSer"],[63,46,44,44],[63,49,44,47,"configuration"],[63,62,44,60],[63,67,44,65],[63,71,44,69],[63,75,44,73,"configuration"],[63,88,44,86],[63,93,44,91],[63,98,44,96],[63,99,44,97],[63,102,44,100],[63,107,44,105],[63,108,44,106],[63,111,44,109,"configuration"],[63,124,44,122],[63,125,44,123,"iceServers"],[63,135,44,133],[63,141,44,139],[63,145,44,143],[63,149,44,147,"_configuration$iceSer"],[63,170,44,168],[63,175,44,173],[63,180,44,178],[63,181,44,179],[63,184,44,182,"_configuration$iceSer"],[63,205,44,203],[63,208,44,206],[63,210,44,208],[64,8,45,6],[64,13,45,11],[64,19,45,17,"server"],[64,25,45,23],[64,29,45,27,"servers"],[64,36,45,34],[64,38,45,36],[65,10,46,8],[65,14,46,12,"urls"],[65,18,46,16],[65,21,46,19,"server"],[65,27,46,25],[65,28,46,26,"url"],[65,31,46,29],[65,35,46,33,"server"],[65,41,46,39],[65,42,46,40,"urls"],[65,46,46,44],[66,10,47,8],[66,17,47,15,"server"],[66,23,47,21],[66,24,47,22,"url"],[66,27,47,25],[67,10,48,8],[67,17,48,15,"server"],[67,23,48,21],[67,24,48,22,"urls"],[67,28,48,26],[68,10,49,8],[68,14,49,12],[68,15,49,13,"urls"],[68,19,49,17],[68,21,49,19],[69,12,50,10],[70,10,51,8],[71,10,52,8],[71,14,52,12],[71,15,52,13,"Array"],[71,20,52,18],[71,21,52,19,"isArray"],[71,28,52,26],[71,29,52,27,"urls"],[71,33,52,31],[71,34,52,32],[71,36,52,34],[72,12,53,10,"urls"],[72,16,53,14],[72,19,53,17],[72,20,53,18,"urls"],[72,24,53,22],[72,25,53,23],[73,10,54,8],[75,10,56,8],[76,10,57,8,"server"],[76,16,57,14],[76,17,57,15,"urls"],[76,21,57,19],[76,24,57,22,"urls"],[76,28,57,26],[76,29,57,27,"map"],[76,32,57,30],[76,33,57,31,"url"],[76,36,57,34],[76,40,57,38,"url"],[76,43,57,41],[76,44,57,42,"toLowerCase"],[76,55,57,53],[76,56,57,54],[76,57,57,55],[76,58,57,56],[77,8,58,6],[79,8,60,6],[80,8,61,6,"configuration"],[80,21,61,19],[80,22,61,20,"iceServers"],[80,32,61,30],[80,35,61,33,"servers"],[80,42,61,40],[80,43,61,41,"filter"],[80,49,61,47],[80,50,61,48,"s"],[80,51,61,49],[80,55,61,53,"s"],[80,56,61,54],[80,57,61,55,"urls"],[80,61,61,59],[80,62,61,60],[81,6,62,4],[82,6,63,4],[82,10,63,8],[82,11,63,9,"WebRTCModule"],[82,23,63,21],[82,24,63,22,"peerConnectionInit"],[82,42,63,40],[82,43,63,41,"configuration"],[82,56,63,54],[82,58,63,56],[82,62,63,60],[82,63,63,61,"_pcId"],[82,68,63,66],[82,69,63,67],[82,71,63,69],[83,8,64,6],[83,14,64,12],[83,18,64,16,"Error"],[83,23,64,21],[83,24,64,22],[83,85,64,83],[83,86,64,84],[84,6,65,4],[85,6,66,4],[85,10,66,8],[85,11,66,9,"_transceivers"],[85,24,66,22],[85,27,66,25],[85,29,66,27],[86,6,67,4],[86,10,67,8],[86,11,67,9,"_remoteStreams"],[86,25,67,23],[86,28,67,26],[86,32,67,30,"Map"],[86,35,67,33],[86,36,67,34],[86,37,67,35],[87,6,68,4],[87,10,68,8],[87,11,68,9,"_pendingTrackEvents"],[87,30,68,28],[87,33,68,31],[87,35,68,33],[88,6,69,4],[88,10,69,8],[88,11,69,9,"_registerEvents"],[88,26,69,24],[88,27,69,25],[88,28,69,26],[89,6,70,4,"log"],[89,9,70,7],[89,10,70,8,"debug"],[89,15,70,13],[89,16,70,14],[89,19,70,17],[89,23,70,21],[89,24,70,22,"_pcId"],[89,29,70,27],[89,36,70,34],[89,37,70,35],[90,4,71,2],[91,4,72,2],[91,10,72,8,"createOffer"],[91,21,72,19,"createOffer"],[91,22,72,20,"options"],[91,29,72,27],[91,31,72,29],[92,6,73,4,"log"],[92,9,73,7],[92,10,73,8,"debug"],[92,15,73,13],[92,16,73,14],[92,19,73,17],[92,23,73,21],[92,24,73,22,"_pcId"],[92,29,73,27],[92,43,73,41],[92,44,73,42],[93,6,74,4],[93,12,74,10],[94,8,75,6,"sdpInfo"],[94,15,75,13],[95,8,76,6,"newTransceivers"],[95,23,76,21],[96,8,77,6,"transceiversInfo"],[97,6,78,4],[97,7,78,5],[97,10,78,8],[97,16,78,14,"WebRTCModule"],[97,28,78,26],[97,29,78,27,"peerConnectionCreateOffer"],[97,54,78,52],[97,55,78,53],[97,59,78,57],[97,60,78,58,"_pcId"],[97,65,78,63],[97,67,78,65,"RTCUtil"],[97,74,78,72],[97,75,78,73,"normalizeOfferOptions"],[97,96,78,94],[97,97,78,95,"options"],[97,104,78,102],[97,105,78,103],[97,106,78,104],[98,6,79,4,"log"],[98,9,79,7],[98,10,79,8,"debug"],[98,15,79,13],[98,16,79,14],[98,19,79,17],[98,23,79,21],[98,24,79,22,"_pcId"],[98,29,79,27],[98,46,79,44],[98,47,79,45],[99,6,80,4,"newTransceivers"],[99,21,80,19],[99,26,80,24],[99,30,80,28],[99,34,80,32,"newTransceivers"],[99,49,80,47],[99,54,80,52],[99,59,80,57],[99,60,80,58],[99,63,80,61],[99,68,80,66],[99,69,80,67],[99,72,80,70,"newTransceivers"],[99,87,80,85],[99,88,80,86,"forEach"],[99,95,80,93],[99,96,80,94,"t"],[99,97,80,95],[99,101,80,99],[100,8,81,6],[100,14,81,12],[101,10,82,8,"transceiverOrder"],[101,26,82,24],[102,10,83,8,"transceiver"],[103,8,84,6],[103,9,84,7],[103,12,84,10,"t"],[103,13,84,11],[104,8,85,6],[104,14,85,12,"newSender"],[104,23,85,21],[104,26,85,24],[104,30,85,28,"RTCRtpSender"],[104,51,85,40],[104,52,85,41],[105,10,86,8],[105,13,86,11,"transceiver"],[105,24,86,22],[105,25,86,23,"sender"],[105,31,86,29],[106,10,87,8,"track"],[106,15,87,13],[106,17,87,15],[107,8,88,6],[107,9,88,7],[107,10,88,8],[108,8,89,6],[108,14,89,12,"remoteTrack"],[108,25,89,23],[108,28,89,26,"transceiver"],[108,39,89,37],[108,40,89,38,"receiver"],[108,48,89,46],[108,49,89,47,"track"],[108,54,89,52],[108,57,89,55],[108,61,89,59,"MediaStreamTrack"],[108,86,89,75],[108,87,89,76,"transceiver"],[108,98,89,87],[108,99,89,88,"receiver"],[108,107,89,96],[108,108,89,97,"track"],[108,113,89,102],[108,114,89,103],[108,117,89,106],[108,121,89,110],[109,8,90,6],[109,14,90,12,"newReceiver"],[109,25,90,23],[109,28,90,26],[109,32,90,30,"RTCRtpReceiver"],[109,55,90,44],[109,56,90,45],[110,10,91,8],[110,13,91,11,"transceiver"],[110,24,91,22],[110,25,91,23,"receiver"],[110,33,91,31],[111,10,92,8,"track"],[111,15,92,13],[111,17,92,15,"remoteTrack"],[112,8,93,6],[112,9,93,7],[112,10,93,8],[113,8,94,6],[113,14,94,12,"newTransceiver"],[113,28,94,26],[113,31,94,29],[113,35,94,33,"RTCRtpTransceiver"],[113,61,94,50],[113,62,94,51],[114,10,95,8],[114,13,95,11,"transceiver"],[114,24,95,22],[115,10,96,8,"sender"],[115,16,96,14],[115,18,96,16,"newSender"],[115,27,96,25],[116,10,97,8,"receiver"],[116,18,97,16],[116,20,97,18,"newReceiver"],[117,8,98,6],[117,9,98,7],[117,10,98,8],[118,8,99,6],[118,12,99,10],[118,13,99,11,"_insertTransceiverSorted"],[118,37,99,35],[118,38,99,36,"transceiverOrder"],[118,54,99,52],[118,56,99,54,"newTransceiver"],[118,70,99,68],[118,71,99,69],[119,6,100,4],[119,7,100,5],[119,8,100,6],[120,6,101,4],[120,10,101,8],[120,11,101,9,"_updateTransceivers"],[120,30,101,28],[120,31,101,29,"transceiversInfo"],[120,47,101,45],[120,48,101,46],[121,6,102,4],[121,13,102,11,"sdpInfo"],[121,20,102,18],[122,4,103,2],[123,4,104,2],[123,10,104,8,"createAnswer"],[123,22,104,20,"createAnswer"],[123,23,104,20],[123,25,104,23],[124,6,105,4,"log"],[124,9,105,7],[124,10,105,8,"debug"],[124,15,105,13],[124,16,105,14],[124,19,105,17],[124,23,105,21],[124,24,105,22,"_pcId"],[124,29,105,27],[124,44,105,42],[124,45,105,43],[125,6,106,4],[125,12,106,10],[126,8,107,6,"sdpInfo"],[126,15,107,13],[127,8,108,6,"transceiversInfo"],[128,6,109,4],[128,7,109,5],[128,10,109,8],[128,16,109,14,"WebRTCModule"],[128,28,109,26],[128,29,109,27,"peerConnectionCreateAnswer"],[128,55,109,53],[128,56,109,54],[128,60,109,58],[128,61,109,59,"_pcId"],[128,66,109,64],[128,68,109,66],[128,69,109,67],[128,70,109,68],[128,71,109,69],[129,6,110,4],[129,10,110,8],[129,11,110,9,"_updateTransceivers"],[129,30,110,28],[129,31,110,29,"transceiversInfo"],[129,47,110,45],[129,48,110,46],[130,6,111,4],[130,13,111,11,"sdpInfo"],[130,20,111,18],[131,4,112,2],[132,4,113,2,"setConfiguration"],[132,20,113,18,"setConfiguration"],[132,21,113,19,"configuration"],[132,34,113,32],[132,36,113,34],[133,6,114,4,"WebRTCModule"],[133,18,114,16],[133,19,114,17,"peerConnectionSetConfiguration"],[133,49,114,47],[133,50,114,48,"configuration"],[133,63,114,61],[133,65,114,63],[133,69,114,67],[133,70,114,68,"_pcId"],[133,75,114,73],[133,76,114,74],[134,4,115,2],[135,4,116,2],[135,10,116,8,"setLocalDescription"],[135,29,116,27,"setLocalDescription"],[135,30,116,28,"sessionDescription"],[135,48,116,46],[135,50,116,48],[136,6,117,4],[136,10,117,8,"_desc"],[136,15,117,13],[137,6,118,4,"log"],[137,9,118,7],[137,10,118,8,"debug"],[137,15,118,13],[137,16,118,14],[137,19,118,17],[137,23,118,21],[137,24,118,22,"_pcId"],[137,29,118,27],[137,51,118,49],[137,52,118,50],[138,6,119,4],[138,10,119,8,"desc"],[138,14,119,12],[139,6,120,4],[139,10,120,8,"sessionDescription"],[139,28,120,26],[139,30,120,28],[140,8,121,6],[140,12,121,10,"_sessionDescription$s"],[140,33,121,31],[141,8,122,6,"desc"],[141,12,122,10],[141,15,122,13],[142,10,123,8,"type"],[142,14,123,12],[142,16,123,14,"sessionDescription"],[142,34,123,32],[142,35,123,33,"type"],[142,39,123,37],[143,10,124,8,"sdp"],[143,13,124,11],[143,15,124,13],[143,16,124,14,"_sessionDescription$s"],[143,37,124,35],[143,40,124,38,"sessionDescription"],[143,58,124,56],[143,59,124,57,"sdp"],[143,62,124,60],[143,68,124,66],[143,72,124,70],[143,76,124,74,"_sessionDescription$s"],[143,97,124,95],[143,102,124,100],[143,107,124,105],[143,108,124,106],[143,111,124,109,"_sessionDescription$s"],[143,132,124,130],[143,135,124,133],[144,8,125,6],[144,9,125,7],[145,8,126,6],[145,12,126,10],[145,13,126,11,"RTCUtil"],[145,20,126,18],[145,21,126,19,"isSdpTypeValid"],[145,35,126,33],[145,36,126,34,"desc"],[145,40,126,38],[145,41,126,39,"type"],[145,45,126,43],[145,46,126,44],[145,48,126,46],[146,10,127,8],[146,16,127,14],[146,20,127,18,"Error"],[146,25,127,23],[146,26,127,24],[146,72,127,70,"desc"],[146,76,127,74],[146,77,127,75,"type"],[146,81,127,79],[146,83,127,81],[146,84,127,82],[147,8,128,6],[148,6,129,4],[148,7,129,5],[148,13,129,11],[149,8,130,6,"desc"],[149,12,130,10],[149,15,130,13],[149,19,130,17],[150,6,131,4],[151,6,132,4],[151,12,132,10],[152,8,133,6,"sdpInfo"],[152,15,133,13],[153,8,134,6,"transceiversInfo"],[154,6,135,4],[154,7,135,5],[154,10,135,8],[154,16,135,14,"WebRTCModule"],[154,28,135,26],[154,29,135,27,"peerConnectionSetLocalDescription"],[154,62,135,60],[154,63,135,61],[154,67,135,65],[154,68,135,66,"_pcId"],[154,73,135,71],[154,75,135,73,"desc"],[154,79,135,77],[154,80,135,78],[155,6,136,4],[155,10,136,8,"sdpInfo"],[155,17,136,15],[155,18,136,16,"type"],[155,22,136,20],[155,26,136,24,"sdpInfo"],[155,33,136,31],[155,34,136,32,"sdp"],[155,37,136,35],[155,39,136,37],[156,8,137,6],[156,12,137,10],[156,13,137,11,"localDescription"],[156,29,137,27],[156,32,137,30],[156,36,137,34,"RTCSessionDescription"],[156,66,137,55],[156,67,137,56,"sdpInfo"],[156,74,137,63],[156,75,137,64],[157,6,138,4],[157,7,138,5],[157,13,138,11],[158,8,139,6],[158,12,139,10],[158,13,139,11,"localDescription"],[158,29,139,27],[158,32,139,30],[158,36,139,34],[159,6,140,4],[160,6,141,4],[160,10,141,8],[160,11,141,9,"_updateTransceivers"],[160,30,141,28],[160,31,141,29,"transceiversInfo"],[160,47,141,45],[160,49,141,47],[160,68,141,66],[160,69,141,67],[160,70,141,68,"_desc"],[160,75,141,73],[160,78,141,76,"desc"],[160,82,141,80],[160,88,141,86],[160,92,141,90],[160,96,141,94,"_desc"],[160,101,141,99],[160,106,141,104],[160,111,141,109],[160,112,141,110],[160,115,141,113],[160,120,141,118],[160,121,141,119],[160,124,141,122,"_desc"],[160,129,141,127],[160,130,141,128,"type"],[160,134,141,132],[160,140,141,138],[160,148,141,146],[160,149,141,147],[161,6,142,4,"log"],[161,9,142,7],[161,10,142,8,"debug"],[161,15,142,13],[161,16,142,14],[161,19,142,17],[161,23,142,21],[161,24,142,22,"_pcId"],[161,29,142,27],[161,54,142,52],[161,55,142,53],[162,4,143,2],[163,4,144,2],[163,10,144,8,"setRemoteDescription"],[163,30,144,28,"setRemoteDescription"],[163,31,144,29,"sessionDescription"],[163,49,144,47],[163,51,144,49],[164,6,145,4],[164,10,145,8,"_sessionDescription$s2"],[164,32,145,30],[164,34,145,32,"_desc$type"],[164,44,145,42],[165,6,146,4,"log"],[165,9,146,7],[165,10,146,8,"debug"],[165,15,146,13],[165,16,146,14],[165,19,146,17],[165,23,146,21],[165,24,146,22,"_pcId"],[165,29,146,27],[165,52,146,50],[165,53,146,51],[166,6,147,4],[166,10,147,8],[166,11,147,9,"sessionDescription"],[166,29,147,27],[166,31,147,29],[167,8,148,6],[167,15,148,13,"Promise"],[167,22,148,20],[167,23,148,21,"reject"],[167,29,148,27],[167,30,148,28],[167,34,148,32,"Error"],[167,39,148,37],[167,40,148,38],[167,73,148,71],[167,74,148,72],[167,75,148,73],[168,6,149,4],[169,6,150,4],[169,12,150,10,"desc"],[169,16,150,14],[169,19,150,17],[170,8,151,6,"type"],[170,12,151,10],[170,14,151,12,"sessionDescription"],[170,32,151,30],[170,33,151,31,"type"],[170,37,151,35],[171,8,152,6,"sdp"],[171,11,152,9],[171,13,152,11],[171,14,152,12,"_sessionDescription$s2"],[171,36,152,34],[171,39,152,37,"sessionDescription"],[171,57,152,55],[171,58,152,56,"sdp"],[171,61,152,59],[171,67,152,65],[171,71,152,69],[171,75,152,73,"_sessionDescription$s2"],[171,97,152,95],[171,102,152,100],[171,107,152,105],[171,108,152,106],[171,111,152,109,"_sessionDescription$s2"],[171,133,152,131],[171,136,152,134],[172,6,153,4],[172,7,153,5],[173,6,154,4],[173,10,154,8],[173,11,154,9,"RTCUtil"],[173,18,154,16],[173,19,154,17,"isSdpTypeValid"],[173,33,154,31],[173,34,154,32],[173,35,154,33,"_desc$type"],[173,45,154,43],[173,48,154,46,"desc"],[173,52,154,50],[173,53,154,51,"type"],[173,57,154,55],[173,63,154,61],[173,67,154,65],[173,71,154,69,"_desc$type"],[173,81,154,79],[173,86,154,84],[173,91,154,89],[173,92,154,90],[173,95,154,93,"_desc$type"],[173,105,154,103],[173,108,154,106],[173,110,154,108],[173,111,154,109],[173,113,154,111],[174,8,155,6],[174,14,155,12],[174,18,155,16,"Error"],[174,23,155,21],[174,24,155,22],[174,70,155,68,"desc"],[174,74,155,72],[174,75,155,73,"type"],[174,79,155,77],[174,81,155,79],[174,82,155,80],[175,6,156,4],[176,6,157,4],[176,12,157,10],[177,8,158,6,"sdpInfo"],[177,15,158,13],[178,8,159,6,"newTransceivers"],[178,23,159,21],[179,8,160,6,"transceiversInfo"],[180,6,161,4],[180,7,161,5],[180,10,161,8],[180,16,161,14,"WebRTCModule"],[180,28,161,26],[180,29,161,27,"peerConnectionSetRemoteDescription"],[180,63,161,61],[180,64,161,62],[180,68,161,66],[180,69,161,67,"_pcId"],[180,74,161,72],[180,76,161,74,"desc"],[180,80,161,78],[180,81,161,79],[181,6,162,4],[181,10,162,8,"sdpInfo"],[181,17,162,15],[181,18,162,16,"type"],[181,22,162,20],[181,26,162,24,"sdpInfo"],[181,33,162,31],[181,34,162,32,"sdp"],[181,37,162,35],[181,39,162,37],[182,8,163,6],[182,12,163,10],[182,13,163,11,"remoteDescription"],[182,30,163,28],[182,33,163,31],[182,37,163,35,"RTCSessionDescription"],[182,67,163,56],[182,68,163,57,"sdpInfo"],[182,75,163,64],[182,76,163,65],[183,6,164,4],[183,7,164,5],[183,13,164,11],[184,8,165,6],[184,12,165,10],[184,13,165,11,"remoteDescription"],[184,30,165,28],[184,33,165,31],[184,37,165,35],[185,6,166,4],[186,6,167,4,"newTransceivers"],[186,21,167,19],[186,26,167,24],[186,30,167,28],[186,34,167,32,"newTransceivers"],[186,49,167,47],[186,54,167,52],[186,59,167,57],[186,60,167,58],[186,63,167,61],[186,68,167,66],[186,69,167,67],[186,72,167,70,"newTransceivers"],[186,87,167,85],[186,88,167,86,"forEach"],[186,95,167,93],[186,96,167,94,"t"],[186,97,167,95],[186,101,167,99],[187,8,168,6],[187,14,168,12],[188,10,169,8,"transceiverOrder"],[188,26,169,24],[189,10,170,8,"transceiver"],[190,8,171,6],[190,9,171,7],[190,12,171,10,"t"],[190,13,171,11],[191,8,172,6],[191,14,172,12,"newSender"],[191,23,172,21],[191,26,172,24],[191,30,172,28,"RTCRtpSender"],[191,51,172,40],[191,52,172,41],[192,10,173,8],[192,13,173,11,"transceiver"],[192,24,173,22],[192,25,173,23,"sender"],[192,31,173,29],[193,10,174,8,"track"],[193,15,174,13],[193,17,174,15],[194,8,175,6],[194,9,175,7],[194,10,175,8],[195,8,176,6],[195,14,176,12,"remoteTrack"],[195,25,176,23],[195,28,176,26,"transceiver"],[195,39,176,37],[195,40,176,38,"receiver"],[195,48,176,46],[195,49,176,47,"track"],[195,54,176,52],[195,57,176,55],[195,61,176,59,"MediaStreamTrack"],[195,86,176,75],[195,87,176,76,"transceiver"],[195,98,176,87],[195,99,176,88,"receiver"],[195,107,176,96],[195,108,176,97,"track"],[195,113,176,102],[195,114,176,103],[195,117,176,106],[195,121,176,110],[196,8,177,6],[196,14,177,12,"newReceiver"],[196,25,177,23],[196,28,177,26],[196,32,177,30,"RTCRtpReceiver"],[196,55,177,44],[196,56,177,45],[197,10,178,8],[197,13,178,11,"transceiver"],[197,24,178,22],[197,25,178,23,"receiver"],[197,33,178,31],[198,10,179,8,"track"],[198,15,179,13],[198,17,179,15,"remoteTrack"],[199,8,180,6],[199,9,180,7],[199,10,180,8],[200,8,181,6],[200,14,181,12,"newTransceiver"],[200,28,181,26],[200,31,181,29],[200,35,181,33,"RTCRtpTransceiver"],[200,61,181,50],[200,62,181,51],[201,10,182,8],[201,13,182,11,"transceiver"],[201,24,182,22],[202,10,183,8,"sender"],[202,16,183,14],[202,18,183,16,"newSender"],[202,27,183,25],[203,10,184,8,"receiver"],[203,18,184,16],[203,20,184,18,"newReceiver"],[204,8,185,6],[204,9,185,7],[204,10,185,8],[205,8,186,6],[205,12,186,10],[205,13,186,11,"_insertTransceiverSorted"],[205,37,186,35],[205,38,186,36,"transceiverOrder"],[205,54,186,52],[205,56,186,54,"newTransceiver"],[205,70,186,68],[205,71,186,69],[206,6,187,4],[206,7,187,5],[206,8,187,6],[207,6,188,4],[207,10,188,8],[207,11,188,9,"_updateTransceivers"],[207,30,188,28],[207,31,188,29,"transceiversInfo"],[207,47,188,45],[207,49,188,47],[207,68,188,66,"desc"],[207,72,188,70],[207,73,188,71,"type"],[207,77,188,75],[207,82,188,80],[207,90,188,88],[207,91,188,89],[209,6,190,4],[210,6,191,4],[210,12,191,10,"pendingTrackEvents"],[210,30,191,28],[210,33,191,31],[210,37,191,35],[210,38,191,36,"_pendingTrackEvents"],[210,57,191,55],[211,6,192,4],[211,10,192,8],[211,11,192,9,"_pendingTrackEvents"],[211,30,192,28],[211,33,192,31],[211,35,192,33],[212,6,193,4],[212,11,193,9],[212,17,193,15,"ev"],[212,19,193,17],[212,23,193,21,"pendingTrackEvents"],[212,41,193,39],[212,43,193,41],[213,8,194,6],[213,14,194,12],[213,15,194,13,"transceiver"],[213,26,194,24],[213,27,194,25],[213,30,194,28],[213,34,194,32],[213,35,194,33,"getTransceivers"],[213,50,194,48],[213,51,194,49],[213,52,194,50],[213,53,194,51,"filter"],[213,59,194,57],[213,60,194,58,"t"],[213,61,194,59],[213,65,194,63,"t"],[213,66,194,64],[213,67,194,65,"receiver"],[213,75,194,73],[213,76,194,74,"id"],[213,78,194,76],[213,83,194,81,"ev"],[213,85,194,83],[213,86,194,84,"receiver"],[213,94,194,92],[213,95,194,93,"id"],[213,97,194,95],[213,98,194,96],[215,8,196,6],[216,8,197,6],[217,8,198,6],[219,8,200,6],[220,8,201,6],[220,14,201,12,"track"],[220,19,201,17],[220,22,201,20,"transceiver"],[220,33,201,31],[220,34,201,32,"receiver"],[220,42,201,40],[220,43,201,41,"track"],[220,48,201,46],[221,8,202,6,"transceiver"],[221,19,202,17],[221,20,202,18,"_mid"],[221,24,202,22],[221,27,202,25,"ev"],[221,29,202,27],[221,30,202,28,"transceiver"],[221,41,202,39],[221,42,202,40,"mid"],[221,45,202,43],[222,8,203,6,"transceiver"],[222,19,203,17],[222,20,203,18,"_currentDirection"],[222,37,203,35],[222,40,203,38,"ev"],[222,42,203,40],[222,43,203,41,"transceiver"],[222,54,203,52],[222,55,203,53,"currentDirection"],[222,71,203,69],[223,8,204,6,"transceiver"],[223,19,204,17],[223,20,204,18,"_direction"],[223,30,204,28],[223,33,204,31,"ev"],[223,35,204,33],[223,36,204,34,"transceiver"],[223,47,204,45],[223,48,204,46,"direction"],[223,57,204,55],[225,8,206,6],[226,8,207,6],[226,14,207,12,"streams"],[226,21,207,19],[226,24,207,22,"ev"],[226,26,207,24],[226,27,207,25,"streams"],[226,34,207,32],[226,35,207,33,"map"],[226,38,207,36],[226,39,207,37,"streamInfo"],[226,49,207,47],[226,53,207,51],[227,10,208,8],[228,10,209,8],[229,10,210,8],[229,14,210,12],[229,15,210,13],[229,19,210,17],[229,20,210,18,"_remoteStreams"],[229,34,210,32],[229,35,210,33,"has"],[229,38,210,36],[229,39,210,37,"streamInfo"],[229,49,210,47],[229,50,210,48,"streamId"],[229,58,210,56],[229,59,210,57],[229,61,210,59],[230,12,211,10],[230,18,211,16,"stream"],[230,24,211,22],[230,27,211,25],[230,31,211,29,"MediaStream"],[230,51,211,40],[230,52,211,41],[231,14,212,12,"streamId"],[231,22,212,20],[231,24,212,22,"streamInfo"],[231,34,212,32],[231,35,212,33,"streamId"],[231,43,212,41],[232,14,213,12,"streamReactTag"],[232,28,213,26],[232,30,213,28,"streamInfo"],[232,40,213,38],[232,41,213,39,"streamReactTag"],[232,55,213,53],[233,14,214,12,"tracks"],[233,20,214,18],[233,22,214,20],[234,12,215,10],[234,13,215,11],[234,14,215,12],[235,12,216,10],[235,16,216,14],[235,17,216,15,"_remoteStreams"],[235,31,216,29],[235,32,216,30,"set"],[235,35,216,33],[235,36,216,34,"streamInfo"],[235,46,216,44],[235,47,216,45,"streamId"],[235,55,216,53],[235,57,216,55,"stream"],[235,63,216,61],[235,64,216,62],[236,10,217,8],[237,10,218,8],[237,16,218,14,"stream"],[237,22,218,20],[237,25,218,23],[237,29,218,27],[237,30,218,28,"_remoteStreams"],[237,44,218,42],[237,45,218,43,"get"],[237,48,218,46],[237,49,218,47,"streamInfo"],[237,59,218,57],[237,60,218,58,"streamId"],[237,68,218,66],[237,69,218,67],[238,10,219,8],[238,14,219,12],[238,16,219,14,"stream"],[238,22,219,20],[238,27,219,25],[238,31,219,29],[238,35,219,33,"stream"],[238,41,219,39],[238,46,219,44],[238,51,219,49],[238,52,219,50],[238,56,219,54,"stream"],[238,62,219,60],[238,63,219,61,"_tracks"],[238,70,219,68],[238,71,219,69,"includes"],[238,79,219,77],[238,80,219,78,"track"],[238,85,219,83],[238,86,219,84],[238,87,219,85],[238,89,219,87],[239,12,220,10,"stream"],[239,18,220,16],[239,23,220,21],[239,27,220,25],[239,31,220,29,"stream"],[239,37,220,35],[239,42,220,40],[239,47,220,45],[239,48,220,46],[239,51,220,49],[239,56,220,54],[239,57,220,55],[239,60,220,58,"stream"],[239,66,220,64],[239,67,220,65,"_tracks"],[239,74,220,72],[239,75,220,73,"push"],[239,79,220,77],[239,80,220,78,"track"],[239,85,220,83],[239,86,220,84],[240,10,221,8],[241,10,222,8],[241,17,222,15,"stream"],[241,23,222,21],[242,8,223,6],[242,9,223,7],[242,10,223,8],[243,8,224,6],[243,14,224,12,"eventData"],[243,23,224,21],[243,26,224,24],[244,10,225,8,"streams"],[244,17,225,15],[245,10,226,8,"transceiver"],[245,21,226,19],[246,10,227,8,"track"],[246,15,227,13],[247,10,228,8,"receiver"],[247,18,228,16],[247,20,228,18,"transceiver"],[247,31,228,29],[247,32,228,30,"receiver"],[248,8,229,6],[248,9,229,7],[249,8,230,6],[249,12,230,10],[249,13,230,11,"dispatchEvent"],[249,26,230,24],[249,27,230,25],[249,31,230,29,"RTCTrackEvent"],[249,53,230,42],[249,54,230,43],[249,61,230,50],[249,63,230,52,"eventData"],[249,72,230,61],[249,73,230,62],[249,74,230,63],[250,8,231,6,"streams"],[250,15,231,13],[250,16,231,14,"forEach"],[250,23,231,21],[250,24,231,22,"stream"],[250,30,231,28],[250,34,231,32],[251,10,232,8,"stream"],[251,16,232,14],[251,17,232,15,"dispatchEvent"],[251,30,232,28],[251,31,232,29],[251,35,232,33,"MediaStreamTrackEvent"],[251,65,232,54],[251,66,232,55],[251,76,232,65],[251,78,232,67],[252,12,233,10,"track"],[253,10,234,8],[253,11,234,9],[253,12,234,10],[253,13,234,11],[254,8,235,6],[254,9,235,7],[254,10,235,8],[256,8,237,6],[257,8,238,6,"track"],[257,13,238,11],[257,14,238,12,"_setMutedInternal"],[257,31,238,29],[257,32,238,30],[257,37,238,35],[257,38,238,36],[258,6,239,4],[259,6,240,4,"log"],[259,9,240,7],[259,10,240,8,"debug"],[259,15,240,13],[259,16,240,14],[259,19,240,17],[259,23,240,21],[259,24,240,22,"_pcId"],[259,29,240,27],[259,55,240,53],[259,56,240,54],[260,4,241,2],[261,4,242,2],[261,10,242,8,"addIceCandidate"],[261,25,242,23,"addIceCandidate"],[261,26,242,24,"candidate"],[261,35,242,33],[261,37,242,35],[262,6,243,4,"log"],[262,9,243,7],[262,10,243,8,"debug"],[262,15,243,13],[262,16,243,14],[262,19,243,17],[262,23,243,21],[262,24,243,22,"_pcId"],[262,29,243,27],[262,47,243,45],[262,48,243,46],[263,6,244,4],[263,10,244,8],[263,11,244,9,"candidate"],[263,20,244,18],[263,24,244,22],[263,25,244,23,"candidate"],[263,34,244,32],[263,35,244,33,"candidate"],[263,44,244,42],[263,46,244,44],[264,8,245,6],[265,8,246,6],[266,6,247,4],[267,6,248,4],[267,10,248,8],[267,11,248,9,"candidate"],[267,20,248,18],[267,21,248,19,"sdpMLineIndex"],[267,34,248,32],[267,39,248,37],[267,43,248,41],[267,47,248,45,"candidate"],[267,56,248,54],[267,57,248,55,"sdpMLineIndex"],[267,70,248,68],[267,75,248,73,"undefined"],[267,84,248,82],[267,90,248,88,"candidate"],[267,99,248,97],[267,100,248,98,"sdpMid"],[267,106,248,104],[267,111,248,109],[267,115,248,113],[267,119,248,117,"candidate"],[267,128,248,126],[267,129,248,127,"sdpMid"],[267,135,248,133],[267,140,248,138,"undefined"],[267,149,248,147],[267,150,248,148],[267,152,248,150],[268,8,249,6],[268,14,249,12],[268,18,249,16,"TypeError"],[268,27,249,25],[268,28,249,26],[268,93,249,91],[268,94,249,92],[269,6,250,4],[270,6,251,4],[270,12,251,10,"newSdp"],[270,18,251,16],[270,21,251,19],[270,27,251,25,"WebRTCModule"],[270,39,251,37],[270,40,251,38,"peerConnectionAddICECandidate"],[270,69,251,67],[270,70,251,68],[270,74,251,72],[270,75,251,73,"_pcId"],[270,80,251,78],[270,82,251,80,"RTCUtil"],[270,89,251,87],[270,90,251,88,"deepClone"],[270,99,251,97],[270,100,251,98,"candidate"],[270,109,251,107],[270,110,251,108],[270,111,251,109],[271,6,252,4],[271,10,252,8],[271,11,252,9,"remoteDescription"],[271,28,252,26],[271,31,252,29],[271,35,252,33,"RTCSessionDescription"],[271,65,252,54],[271,66,252,55,"newSdp"],[271,72,252,61],[271,73,252,62],[272,4,253,2],[274,4,255,2],[275,0,256,0],[276,0,257,0],[277,0,258,0],[278,0,259,0],[279,0,260,0],[280,0,261,0],[281,0,262,0],[282,4,263,2,"addTrack"],[282,12,263,10,"addTrack"],[282,13,263,11,"track"],[282,18,263,16],[282,20,263,18],[283,6,264,4,"log"],[283,9,264,7],[283,10,264,8,"debug"],[283,15,264,13],[283,16,264,14],[283,19,264,17],[283,23,264,21],[283,24,264,22,"_pcId"],[283,29,264,27],[283,40,264,38],[283,41,264,39],[284,6,265,4],[284,10,265,8],[284,14,265,12],[284,15,265,13,"connectionState"],[284,30,265,28],[284,35,265,33],[284,43,265,41],[284,45,265,43],[285,8,266,6],[285,14,266,12],[285,18,266,16,"Error"],[285,23,266,21],[285,24,266,22],[285,51,266,49],[285,52,266,50],[286,6,267,4],[287,6,268,4],[287,10,268,8],[287,14,268,12],[287,15,268,13,"_trackExists"],[287,27,268,25],[287,28,268,26,"track"],[287,33,268,31],[287,34,268,32],[287,36,268,34],[288,8,269,6],[288,14,269,12],[288,18,269,16,"Error"],[288,23,269,21],[288,24,269,22],[288,58,269,56],[288,59,269,57],[289,6,270,4],[290,6,271,4],[290,11,271,9],[290,15,271,13,"_len"],[290,19,271,17],[290,22,271,20,"arguments"],[290,31,271,29],[290,32,271,30,"length"],[290,38,271,36],[290,40,271,38,"streams"],[290,47,271,45],[290,50,271,48],[290,54,271,52,"Array"],[290,59,271,57],[290,60,271,58,"_len"],[290,64,271,62],[290,67,271,65],[290,68,271,66],[290,71,271,69,"_len"],[290,75,271,73],[290,78,271,76],[290,79,271,77],[290,82,271,80],[290,83,271,81],[290,84,271,82],[290,86,271,84,"_key"],[290,90,271,88],[290,93,271,91],[290,94,271,92],[290,96,271,94,"_key"],[290,100,271,98],[290,103,271,101,"_len"],[290,107,271,105],[290,109,271,107,"_key"],[290,113,271,111],[290,115,271,113],[290,117,271,115],[291,8,272,6,"streams"],[291,15,272,13],[291,16,272,14,"_key"],[291,20,272,18],[291,23,272,21],[291,24,272,22],[291,25,272,23],[291,28,272,26,"arguments"],[291,37,272,35],[291,38,272,36,"_key"],[291,42,272,40],[291,43,272,41],[292,6,273,4],[293,6,274,4],[293,12,274,10,"streamIds"],[293,21,274,19],[293,24,274,22,"streams"],[293,31,274,29],[293,32,274,30,"map"],[293,35,274,33],[293,36,274,34,"s"],[293,37,274,35],[293,41,274,39,"s"],[293,42,274,40],[293,43,274,41,"id"],[293,45,274,43],[293,46,274,44],[294,6,275,4],[294,12,275,10,"result"],[294,18,275,16],[294,21,275,19,"WebRTCModule"],[294,33,275,31],[294,34,275,32,"peerConnectionAddTrack"],[294,56,275,54],[294,57,275,55],[294,61,275,59],[294,62,275,60,"_pcId"],[294,67,275,65],[294,69,275,67,"track"],[294,74,275,72],[294,75,275,73,"id"],[294,77,275,75],[294,79,275,77],[295,8,276,6,"streamIds"],[296,6,277,4],[296,7,277,5],[296,8,277,6],[297,6,278,4],[297,10,278,8,"result"],[297,16,278,14],[297,21,278,19],[297,25,278,23],[297,27,278,25],[298,8,279,6],[298,14,279,12],[298,18,279,16,"Error"],[298,23,279,21],[298,24,279,22],[298,46,279,44],[298,47,279,45],[299,6,280,4],[300,6,281,4],[300,12,281,10],[301,8,282,6,"transceiverOrder"],[301,24,282,22],[302,8,283,6,"transceiver"],[302,19,283,17],[303,8,284,6,"sender"],[304,6,285,4],[304,7,285,5],[304,10,285,8,"result"],[304,16,285,14],[306,6,287,4],[307,6,288,4],[308,6,289,4],[308,12,289,10],[308,13,289,11,"existingSender"],[308,27,289,25],[308,28,289,26],[308,31,289,29],[308,35,289,33],[308,36,289,34,"getSenders"],[308,46,289,44],[308,47,289,45],[308,48,289,46],[308,49,289,47,"filter"],[308,55,289,53],[308,56,289,54,"s"],[308,57,289,55],[308,61,289,59,"s"],[308,62,289,60],[308,63,289,61,"id"],[308,65,289,63],[308,70,289,68,"sender"],[308,76,289,74],[308,77,289,75,"id"],[308,79,289,77],[308,80,289,78],[309,6,290,4],[309,10,290,8,"existingSender"],[309,24,290,22],[309,26,290,24],[310,8,291,6],[311,8,292,6,"existingSender"],[311,22,292,20],[311,23,292,21,"_track"],[311,29,292,27],[311,32,292,30,"track"],[311,37,292,35],[313,8,294,6],[314,8,295,6],[314,14,295,12],[314,15,295,13,"existingTransceiver"],[314,34,295,32],[314,35,295,33],[314,38,295,36],[314,42,295,40],[314,43,295,41,"getTransceivers"],[314,58,295,56],[314,59,295,57],[314,60,295,58],[314,61,295,59,"filter"],[314,67,295,65],[314,68,295,66,"t"],[314,69,295,67],[314,73,295,71,"t"],[314,74,295,72],[314,75,295,73,"sender"],[314,81,295,79],[314,82,295,80,"id"],[314,84,295,82],[314,89,295,87,"existingSender"],[314,103,295,101],[314,104,295,102,"id"],[314,106,295,104],[314,107,295,105],[315,8,296,6,"existingTransceiver"],[315,27,296,25],[315,28,296,26,"_direction"],[315,38,296,36],[315,41,296,39,"transceiver"],[315,52,296,50],[315,53,296,51,"direction"],[315,62,296,60],[316,8,297,6,"existingTransceiver"],[316,27,297,25],[316,28,297,26,"_currentDirection"],[316,45,297,43],[316,48,297,46,"transceiver"],[316,59,297,57],[316,60,297,58,"currentDirection"],[316,76,297,74],[317,8,298,6],[317,15,298,13,"existingSender"],[317,29,298,27],[318,6,299,4],[320,6,301,4],[321,6,302,4],[321,12,302,10,"newSender"],[321,21,302,19],[321,24,302,22],[321,28,302,26,"RTCRtpSender"],[321,49,302,38],[321,50,302,39],[322,8,303,6],[322,11,303,9,"transceiver"],[322,22,303,20],[322,23,303,21,"sender"],[322,29,303,27],[323,8,304,6,"track"],[324,6,305,4],[324,7,305,5],[324,8,305,6],[325,6,306,4],[325,12,306,10,"remoteTrack"],[325,23,306,21],[325,26,306,24,"transceiver"],[325,37,306,35],[325,38,306,36,"receiver"],[325,46,306,44],[325,47,306,45,"track"],[325,52,306,50],[325,55,306,53],[325,59,306,57,"MediaStreamTrack"],[325,84,306,73],[325,85,306,74,"transceiver"],[325,96,306,85],[325,97,306,86,"receiver"],[325,105,306,94],[325,106,306,95,"track"],[325,111,306,100],[325,112,306,101],[325,115,306,104],[325,119,306,108],[326,6,307,4],[326,12,307,10,"newReceiver"],[326,23,307,21],[326,26,307,24],[326,30,307,28,"RTCRtpReceiver"],[326,53,307,42],[326,54,307,43],[327,8,308,6],[327,11,308,9,"transceiver"],[327,22,308,20],[327,23,308,21,"receiver"],[327,31,308,29],[328,8,309,6,"track"],[328,13,309,11],[328,15,309,13,"remoteTrack"],[329,6,310,4],[329,7,310,5],[329,8,310,6],[330,6,311,4],[330,12,311,10,"newTransceiver"],[330,26,311,24],[330,29,311,27],[330,33,311,31,"RTCRtpTransceiver"],[330,59,311,48],[330,60,311,49],[331,8,312,6],[331,11,312,9,"transceiver"],[331,22,312,20],[332,8,313,6,"sender"],[332,14,313,12],[332,16,313,14,"newSender"],[332,25,313,23],[333,8,314,6,"receiver"],[333,16,314,14],[333,18,314,16,"newReceiver"],[334,6,315,4],[334,7,315,5],[334,8,315,6],[335,6,316,4],[335,10,316,8],[335,11,316,9,"_insertTransceiverSorted"],[335,35,316,33],[335,36,316,34,"transceiverOrder"],[335,52,316,50],[335,54,316,52,"newTransceiver"],[335,68,316,66],[335,69,316,67],[336,6,317,4],[336,13,317,11,"newSender"],[336,22,317,20],[337,4,318,2],[338,4,319,2,"addTransceiver"],[338,18,319,16,"addTransceiver"],[338,19,319,17,"source"],[338,25,319,23],[338,27,319,25,"init"],[338,31,319,29],[338,33,319,31],[339,6,320,4,"log"],[339,9,320,7],[339,10,320,8,"debug"],[339,15,320,13],[339,16,320,14],[339,19,320,17],[339,23,320,21],[339,24,320,22,"_pcId"],[339,29,320,27],[339,46,320,44],[339,47,320,45],[340,6,321,4],[340,10,321,8,"src"],[340,13,321,11],[340,16,321,14],[340,17,321,15],[340,18,321,16],[341,6,322,4],[341,10,322,8,"source"],[341,16,322,14],[341,21,322,19],[341,28,322,26],[341,30,322,28],[342,8,323,6,"src"],[342,11,323,9],[342,14,323,12],[343,10,324,8,"type"],[343,14,324,12],[343,16,324,14],[344,8,325,6],[344,9,325,7],[345,6,326,4],[345,7,326,5],[345,13,326,11],[345,17,326,15,"source"],[345,23,326,21],[345,28,326,26],[345,35,326,33],[345,37,326,35],[346,8,327,6,"src"],[346,11,327,9],[346,14,327,12],[347,10,328,8,"type"],[347,14,328,12],[347,16,328,14],[348,8,329,6],[348,9,329,7],[349,6,330,4],[349,7,330,5],[349,13,330,11],[350,8,331,6,"src"],[350,11,331,9],[350,14,331,12],[351,10,332,8,"trackId"],[351,17,332,15],[351,19,332,17,"source"],[351,25,332,23],[351,26,332,24,"id"],[352,8,333,6],[352,9,333,7],[353,6,334,4],[355,6,336,4],[356,6,337,4],[356,10,337,8,"init"],[356,14,337,12],[356,18,337,16,"init"],[356,22,337,20],[356,23,337,21,"streams"],[356,30,337,28],[356,32,337,30],[357,8,338,6,"init"],[357,12,338,10],[357,13,338,11,"streamIds"],[357,22,338,20],[357,25,338,23,"init"],[357,29,338,27],[357,30,338,28,"streams"],[357,37,338,35],[357,38,338,36,"map"],[357,41,338,39],[357,42,338,40,"stream"],[357,48,338,46],[357,52,338,50,"stream"],[357,58,338,56],[357,59,338,57,"id"],[357,61,338,59],[357,62,338,60],[358,6,339,4],[359,6,340,4],[359,12,340,10,"result"],[359,18,340,16],[359,21,340,19,"WebRTCModule"],[359,33,340,31],[359,34,340,32,"peerConnectionAddTransceiver"],[359,62,340,60],[359,63,340,61],[359,67,340,65],[359,68,340,66,"_pcId"],[359,73,340,71],[359,75,340,73],[360,8,341,6],[360,11,341,9,"src"],[360,14,341,12],[361,8,342,6,"init"],[361,12,342,10],[361,14,342,12],[362,10,343,8],[362,13,343,11,"init"],[363,8,344,6],[364,6,345,4],[364,7,345,5],[364,8,345,6],[365,6,346,4],[365,10,346,8,"result"],[365,16,346,14],[365,21,346,19],[365,25,346,23],[365,27,346,25],[366,8,347,6],[366,14,347,12],[366,18,347,16,"Error"],[366,23,347,21],[366,24,347,22],[366,56,347,54],[366,57,347,55],[367,6,348,4],[368,6,349,4],[368,12,349,10,"t"],[368,13,349,11],[368,16,349,14,"result"],[368,22,349,20],[368,23,349,21,"transceiver"],[368,34,349,32],[369,6,350,4],[369,10,350,8,"track"],[369,15,350,13],[369,18,350,16],[369,22,350,20],[370,6,351,4],[370,10,351,8],[370,17,351,15,"source"],[370,23,351,21],[370,28,351,26],[370,36,351,34],[370,38,351,36],[371,8,352,6],[371,12,352,10,"t"],[371,13,352,11],[371,14,352,12,"sender"],[371,20,352,18],[371,21,352,19,"track"],[371,26,352,24],[371,28,352,26],[372,10,353,8,"track"],[372,15,353,13],[372,18,353,16],[372,22,353,20,"MediaStreamTrack"],[372,47,353,36],[372,48,353,37,"t"],[372,49,353,38],[372,50,353,39,"sender"],[372,56,353,45],[372,57,353,46,"track"],[372,62,353,51],[372,63,353,52],[373,8,354,6],[374,6,355,4],[374,7,355,5],[374,13,355,11],[375,8,356,6],[376,8,357,6,"track"],[376,13,357,11],[376,16,357,14,"source"],[376,22,357,20],[377,6,358,4],[378,6,359,4],[378,12,359,10,"sender"],[378,18,359,16],[378,21,359,19],[378,25,359,23,"RTCRtpSender"],[378,46,359,35],[378,47,359,36],[379,8,360,6],[379,11,360,9,"t"],[379,12,360,10],[379,13,360,11,"sender"],[379,19,360,17],[380,8,361,6,"track"],[381,6,362,4],[381,7,362,5],[381,8,362,6],[382,6,363,4],[382,12,363,10,"remoteTrack"],[382,23,363,21],[382,26,363,24,"t"],[382,27,363,25],[382,28,363,26,"receiver"],[382,36,363,34],[382,37,363,35,"track"],[382,42,363,40],[382,45,363,43],[382,49,363,47,"MediaStreamTrack"],[382,74,363,63],[382,75,363,64,"t"],[382,76,363,65],[382,77,363,66,"receiver"],[382,85,363,74],[382,86,363,75,"track"],[382,91,363,80],[382,92,363,81],[382,95,363,84],[382,99,363,88],[383,6,364,4],[383,12,364,10,"receiver"],[383,20,364,18],[383,23,364,21],[383,27,364,25,"RTCRtpReceiver"],[383,50,364,39],[383,51,364,40],[384,8,365,6],[384,11,365,9,"t"],[384,12,365,10],[384,13,365,11,"receiver"],[384,21,365,19],[385,8,366,6,"track"],[385,13,366,11],[385,15,366,13,"remoteTrack"],[386,6,367,4],[386,7,367,5],[386,8,367,6],[387,6,368,4],[387,12,368,10,"transceiver"],[387,23,368,21],[387,26,368,24],[387,30,368,28,"RTCRtpTransceiver"],[387,56,368,45],[387,57,368,46],[388,8,369,6],[388,11,369,9,"result"],[388,17,369,15],[388,18,369,16,"transceiver"],[388,29,369,27],[389,8,370,6,"sender"],[389,14,370,12],[390,8,371,6,"receiver"],[391,6,372,4],[391,7,372,5],[391,8,372,6],[392,6,373,4],[392,10,373,8],[392,11,373,9,"_insertTransceiverSorted"],[392,35,373,33],[392,36,373,34,"result"],[392,42,373,40],[392,43,373,41,"transceiverOrder"],[392,59,373,57],[392,61,373,59,"transceiver"],[392,72,373,70],[392,73,373,71],[393,6,374,4],[393,13,374,11,"transceiver"],[393,24,374,22],[394,4,375,2],[395,4,376,2,"removeTrack"],[395,15,376,13,"removeTrack"],[395,16,376,14,"sender"],[395,22,376,20],[395,24,376,22],[396,6,377,4,"log"],[396,9,377,7],[396,10,377,8,"debug"],[396,15,377,13],[396,16,377,14],[396,19,377,17],[396,23,377,21],[396,24,377,22,"_pcId"],[396,29,377,27],[396,43,377,41],[396,44,377,42],[397,6,378,4],[397,10,378,8],[397,14,378,12],[397,15,378,13,"_pcId"],[397,20,378,18],[397,25,378,23,"sender"],[397,31,378,29],[397,32,378,30,"_peerConnectionId"],[397,49,378,47],[397,51,378,49],[398,8,379,6],[398,14,379,12],[398,18,379,16,"Error"],[398,23,379,21],[398,24,379,22],[398,72,379,70],[398,73,379,71],[399,6,380,4],[400,6,381,4],[400,10,381,8],[400,14,381,12],[400,15,381,13,"connectionState"],[400,30,381,28],[400,35,381,33],[400,43,381,41],[400,45,381,43],[401,8,382,6],[401,14,382,12],[401,18,382,16,"Error"],[401,23,382,21],[401,24,382,22],[401,51,382,49],[401,52,382,50],[402,6,383,4],[403,6,384,4],[403,12,384,10,"existingSender"],[403,26,384,24],[403,29,384,27],[403,33,384,31],[403,34,384,32,"getSenders"],[403,44,384,42],[403,45,384,43],[403,46,384,44],[403,47,384,45,"find"],[403,51,384,49],[403,52,384,50,"s"],[403,53,384,51],[403,57,384,55,"s"],[403,58,384,56],[403,63,384,61,"sender"],[403,69,384,67],[403,70,384,68],[404,6,385,4],[404,10,385,8],[404,11,385,9,"existingSender"],[404,25,385,23],[404,27,385,25],[405,8,386,6],[405,14,386,12],[405,18,386,16,"Error"],[405,23,386,21],[405,24,386,22],[405,47,386,45],[405,48,386,46],[406,6,387,4],[407,6,388,4],[407,10,388,8,"existingSender"],[407,24,388,22],[407,25,388,23,"track"],[407,30,388,28],[407,35,388,33],[407,39,388,37],[407,41,388,39],[408,8,389,6],[409,6,390,4],[411,6,392,4],[412,6,393,4,"WebRTCModule"],[412,18,393,16],[412,19,393,17,"peerConnectionRemoveTrack"],[412,44,393,42],[412,45,393,43],[412,49,393,47],[412,50,393,48,"_pcId"],[412,55,393,53],[412,57,393,55,"sender"],[412,63,393,61],[412,64,393,62,"id"],[412,66,393,64],[412,67,393,65],[413,6,394,4,"existingSender"],[413,20,394,18],[413,21,394,19,"_track"],[413,27,394,25],[413,30,394,28],[413,34,394,32],[414,6,395,4],[414,12,395,10],[414,13,395,11,"existingTransceiver"],[414,32,395,30],[414,33,395,31],[414,36,395,34],[414,40,395,38],[414,41,395,39,"getTransceivers"],[414,56,395,54],[414,57,395,55],[414,58,395,56],[414,59,395,57,"filter"],[414,65,395,63],[414,66,395,64,"t"],[414,67,395,65],[414,71,395,69,"t"],[414,72,395,70],[414,73,395,71,"sender"],[414,79,395,77],[414,80,395,78,"id"],[414,82,395,80],[414,87,395,85,"existingSender"],[414,101,395,99],[414,102,395,100,"id"],[414,104,395,102],[414,105,395,103],[415,6,396,4,"existingTransceiver"],[415,25,396,23],[415,26,396,24,"_direction"],[415,36,396,34],[415,39,396,37,"existingTransceiver"],[415,58,396,56],[415,59,396,57,"direction"],[415,68,396,66],[415,73,396,71],[415,83,396,81],[415,86,396,84],[415,96,396,94],[415,99,396,97],[415,109,396,107],[416,4,397,2],[417,4,398,2],[417,10,398,8,"getStats"],[417,18,398,16,"getStats"],[417,19,398,17,"selector"],[417,27,398,25],[417,29,398,27],[418,6,399,4,"log"],[418,9,399,7],[418,10,399,8,"debug"],[418,15,399,13],[418,16,399,14],[418,19,399,17],[418,23,399,21],[418,24,399,22,"_pcId"],[418,29,399,27],[418,40,399,38],[418,41,399,39],[419,6,400,4],[419,10,400,8],[419,11,400,9,"selector"],[419,19,400,17],[419,21,400,19],[420,8,401,6],[420,14,401,12,"data"],[420,18,401,16],[420,21,401,19],[420,27,401,25,"WebRTCModule"],[420,39,401,37],[420,40,401,38,"peerConnectionGetStats"],[420,62,401,60],[420,63,401,61],[420,67,401,65],[420,68,401,66,"_pcId"],[420,73,401,71],[420,74,401,72],[422,8,403,6],[423,0,404,0],[424,0,405,0],[425,0,406,0],[426,0,407,0],[427,0,408,0],[428,0,409,0],[429,0,410,0],[430,0,411,0],[431,8,412,6],[431,15,412,13],[431,19,412,17,"Map"],[431,22,412,20],[431,23,412,21,"JSON"],[431,27,412,25],[431,28,412,26,"parse"],[431,33,412,31],[431,34,412,32,"data"],[431,38,412,36],[431,39,412,37],[431,40,412,38],[432,6,413,4],[432,7,413,5],[432,13,413,11],[433,8,414,6],[433,14,414,12,"senders"],[433,21,414,19],[433,24,414,22],[433,28,414,26],[433,29,414,27,"getSenders"],[433,39,414,37],[433,40,414,38],[433,41,414,39],[433,42,414,40,"filter"],[433,48,414,46],[433,49,414,47,"s"],[433,50,414,48],[433,54,414,52,"s"],[433,55,414,53],[433,56,414,54,"track"],[433,61,414,59],[433,66,414,64,"selector"],[433,74,414,72],[433,75,414,73],[434,8,415,6],[434,14,415,12,"receivers"],[434,23,415,21],[434,26,415,24],[434,30,415,28],[434,31,415,29,"getReceivers"],[434,43,415,41],[434,44,415,42],[434,45,415,43],[434,46,415,44,"filter"],[434,52,415,50],[434,53,415,51,"r"],[434,54,415,52],[434,58,415,56,"r"],[434,59,415,57],[434,60,415,58,"track"],[434,65,415,63],[434,70,415,68,"selector"],[434,78,415,76],[434,79,415,77],[435,8,416,6],[435,14,416,12,"matches"],[435,21,416,19],[435,24,416,22,"senders"],[435,31,416,29],[435,32,416,30,"length"],[435,38,416,36],[435,41,416,39,"receivers"],[435,50,416,48],[435,51,416,49,"length"],[435,57,416,55],[436,8,417,6],[436,12,417,10,"matches"],[436,19,417,17],[436,24,417,22],[436,25,417,23],[436,27,417,25],[437,10,418,8],[437,16,418,14],[437,20,418,18,"Error"],[437,25,418,23],[437,26,418,24],[437,87,418,85],[437,88,418,86],[438,8,419,6],[438,9,419,7],[438,15,419,13],[438,19,419,17,"matches"],[438,26,419,24],[438,29,419,27],[438,30,419,28],[438,32,419,30],[439,10,420,8],[439,16,420,14],[439,20,420,18,"Error"],[439,25,420,23],[439,26,420,24],[439,83,420,81],[439,84,420,82],[440,8,421,6],[440,9,421,7],[440,15,421,13],[441,10,422,8],[441,16,422,14,"sr"],[441,18,422,16],[441,21,422,19,"senders"],[441,28,422,26],[441,29,422,27],[441,30,422,28],[441,31,422,29],[441,35,422,33,"receivers"],[441,44,422,42],[441,45,422,43],[441,46,422,44],[441,47,422,45],[442,10,423,8],[442,17,423,15,"sr"],[442,19,423,17],[442,20,423,18,"getStats"],[442,28,423,26],[442,29,423,27],[442,30,423,28],[443,8,424,6],[444,6,425,4],[445,4,426,2],[446,4,427,2,"getTransceivers"],[446,19,427,17,"getTransceivers"],[446,20,427,17],[446,22,427,20],[447,6,428,4],[447,13,428,11],[447,17,428,15],[447,18,428,16,"_transceivers"],[447,31,428,29],[447,32,428,30,"map"],[447,35,428,33],[447,36,428,34,"e"],[447,37,428,35],[447,41,428,39,"e"],[447,42,428,40],[447,43,428,41,"transceiver"],[447,54,428,52],[447,55,428,53],[448,4,429,2],[449,4,430,2,"getSenders"],[449,14,430,12,"getSenders"],[449,15,430,12],[449,17,430,15],[450,6,431,4],[450,13,431,11],[450,17,431,15],[450,18,431,16,"_transceivers"],[450,31,431,29],[450,32,431,30,"filter"],[450,38,431,36],[450,39,431,37,"e"],[450,40,431,38],[450,44,431,42],[450,45,431,43,"e"],[450,46,431,44],[450,47,431,45,"transceiver"],[450,58,431,56],[450,59,431,57,"stopped"],[450,66,431,64],[450,67,431,65],[450,68,431,66,"map"],[450,71,431,69],[450,72,431,70,"e"],[450,73,431,71],[450,77,431,75,"e"],[450,78,431,76],[450,79,431,77,"transceiver"],[450,90,431,88],[450,91,431,89,"sender"],[450,97,431,95],[450,98,431,96],[451,4,432,2],[452,4,433,2,"getReceivers"],[452,16,433,14,"getReceivers"],[452,17,433,14],[452,19,433,17],[453,6,434,4],[453,13,434,11],[453,17,434,15],[453,18,434,16,"_transceivers"],[453,31,434,29],[453,32,434,30,"filter"],[453,38,434,36],[453,39,434,37,"e"],[453,40,434,38],[453,44,434,42],[453,45,434,43,"e"],[453,46,434,44],[453,47,434,45,"transceiver"],[453,58,434,56],[453,59,434,57,"stopped"],[453,66,434,64],[453,67,434,65],[453,68,434,66,"map"],[453,71,434,69],[453,72,434,70,"e"],[453,73,434,71],[453,77,434,75,"e"],[453,78,434,76],[453,79,434,77,"transceiver"],[453,90,434,88],[453,91,434,89,"receiver"],[453,99,434,97],[453,100,434,98],[454,4,435,2],[455,4,436,2,"close"],[455,9,436,7,"close"],[455,10,436,7],[455,12,436,10],[456,6,437,4,"log"],[456,9,437,7],[456,10,437,8,"debug"],[456,15,437,13],[456,16,437,14],[456,19,437,17],[456,23,437,21],[456,24,437,22,"_pcId"],[456,29,437,27],[456,37,437,35],[456,38,437,36],[457,6,438,4],[457,10,438,8],[457,14,438,12],[457,15,438,13,"connectionState"],[457,30,438,28],[457,35,438,33],[457,43,438,41],[457,45,438,43],[458,8,439,6],[459,6,440,4],[460,6,441,4,"WebRTCModule"],[460,18,441,16],[460,19,441,17,"peerConnectionClose"],[460,38,441,36],[460,39,441,37],[460,43,441,41],[460,44,441,42,"_pcId"],[460,49,441,47],[460,50,441,48],[462,6,443,4],[463,6,444,4],[463,10,444,8],[463,11,444,9,"_transceivers"],[463,24,444,22],[463,25,444,23,"forEach"],[463,32,444,30],[463,33,444,31,"_ref"],[463,37,444,35],[463,41,444,39],[464,8,445,6],[464,12,445,10],[465,10,446,8,"transceiver"],[466,8,447,6],[466,9,447,7],[466,12,447,10,"_ref"],[466,16,447,14],[467,8,448,6,"transceiver"],[467,19,448,17],[467,20,448,18,"_setStopped"],[467,31,448,29],[467,32,448,30],[467,33,448,31],[468,6,449,4],[468,7,449,5],[468,8,449,6],[469,4,450,2],[470,4,451,2,"restartIce"],[470,14,451,12,"restartIce"],[470,15,451,12],[470,17,451,15],[471,6,452,4,"WebRTCModule"],[471,18,452,16],[471,19,452,17,"peerConnectionRestartIce"],[471,43,452,41],[471,44,452,42],[471,48,452,46],[471,49,452,47,"_pcId"],[471,54,452,52],[471,55,452,53],[472,4,453,2],[473,4,454,2,"_registerEvents"],[473,19,454,17,"_registerEvents"],[473,20,454,17],[473,22,454,20],[474,6,455,4],[474,10,455,4,"addListener"],[474,35,455,15],[474,37,455,16],[474,41,455,20],[474,43,455,22],[474,80,455,59],[474,82,455,61,"ev"],[474,84,455,63],[474,88,455,67],[475,8,456,6],[475,12,456,10,"ev"],[475,14,456,12],[475,15,456,13,"pcId"],[475,19,456,17],[475,24,456,22],[475,28,456,26],[475,29,456,27,"_pcId"],[475,34,456,32],[475,36,456,34],[476,10,457,8],[477,8,458,6],[478,8,459,6],[478,12,459,10],[478,13,459,11,"dispatchEvent"],[478,26,459,24],[478,27,459,25],[478,31,459,29,"Event"],[478,43,459,34],[478,44,459,35],[478,63,459,54],[478,64,459,55],[478,65,459,56],[479,6,460,4],[479,7,460,5],[479,8,460,6],[480,6,461,4],[480,10,461,4,"addListener"],[480,35,461,15],[480,37,461,16],[480,41,461,20],[480,43,461,22],[480,79,461,58],[480,81,461,60,"ev"],[480,83,461,62],[480,87,461,66],[481,8,462,6],[481,12,462,10,"ev"],[481,14,462,12],[481,15,462,13,"pcId"],[481,19,462,17],[481,24,462,22],[481,28,462,26],[481,29,462,27,"_pcId"],[481,34,462,32],[481,36,462,34],[482,10,463,8],[483,8,464,6],[484,8,465,6],[484,12,465,10],[484,13,465,11,"iceConnectionState"],[484,31,465,29],[484,34,465,32,"ev"],[484,36,465,34],[484,37,465,35,"iceConnectionState"],[484,55,465,53],[485,8,466,6],[485,12,466,10],[485,13,466,11,"dispatchEvent"],[485,26,466,24],[485,27,466,25],[485,31,466,29,"Event"],[485,43,466,34],[485,44,466,35],[485,70,466,61],[485,71,466,62],[485,72,466,63],[486,6,467,4],[486,7,467,5],[486,8,467,6],[487,6,468,4],[487,10,468,4,"addListener"],[487,35,468,15],[487,37,468,16],[487,41,468,20],[487,43,468,22],[487,71,468,50],[487,73,468,52,"ev"],[487,75,468,54],[487,79,468,58],[488,8,469,6],[488,12,469,10,"ev"],[488,14,469,12],[488,15,469,13,"pcId"],[488,19,469,17],[488,24,469,22],[488,28,469,26],[488,29,469,27,"_pcId"],[488,34,469,32],[488,36,469,34],[489,10,470,8],[490,8,471,6],[491,8,472,6],[491,12,472,10],[491,13,472,11,"connectionState"],[491,28,472,26],[491,31,472,29,"ev"],[491,33,472,31],[491,34,472,32,"connectionState"],[491,49,472,47],[492,8,473,6],[492,12,473,10],[492,13,473,11,"dispatchEvent"],[492,26,473,24],[492,27,473,25],[492,31,473,29,"Event"],[492,43,473,34],[492,44,473,35],[492,67,473,58],[492,68,473,59],[492,69,473,60],[493,8,474,6],[493,12,474,10,"ev"],[493,14,474,12],[493,15,474,13,"connectionState"],[493,30,474,28],[493,35,474,33],[493,43,474,41],[493,45,474,43],[494,10,475,8],[495,10,476,8],[495,14,476,8,"removeListener"],[495,42,476,22],[495,44,476,23],[495,48,476,27],[495,49,476,28],[496,10,477,8,"WebRTCModule"],[496,22,477,20],[496,23,477,21,"peerConnectionDispose"],[496,44,477,42],[496,45,477,43],[496,49,477,47],[496,50,477,48,"_pcId"],[496,55,477,53],[496,56,477,54],[497,8,478,6],[498,6,479,4],[498,7,479,5],[498,8,479,6],[499,6,480,4],[499,10,480,4,"addListener"],[499,35,480,15],[499,37,480,16],[499,41,480,20],[499,43,480,22],[499,80,480,59],[499,82,480,61,"ev"],[499,84,480,63],[499,88,480,67],[500,8,481,6],[500,12,481,10,"ev"],[500,14,481,12],[500,15,481,13,"pcId"],[500,19,481,17],[500,24,481,22],[500,28,481,26],[500,29,481,27,"_pcId"],[500,34,481,32],[500,36,481,34],[501,10,482,8],[502,8,483,6],[503,8,484,6],[503,12,484,10],[503,13,484,11,"signalingState"],[503,27,484,25],[503,30,484,28,"ev"],[503,32,484,30],[503,33,484,31,"signalingState"],[503,47,484,45],[504,8,485,6],[504,12,485,10],[504,13,485,11,"dispatchEvent"],[504,26,485,24],[504,27,485,25],[504,31,485,29,"Event"],[504,43,485,34],[504,44,485,35],[504,66,485,57],[504,67,485,58],[504,68,485,59],[505,6,486,4],[505,7,486,5],[505,8,486,6],[507,6,488,4],[508,6,489,4],[508,10,489,4,"addListener"],[508,35,489,15],[508,37,489,16],[508,41,489,20],[508,43,489,22],[508,66,489,45],[508,68,489,47,"ev"],[508,70,489,49],[508,74,489,53],[509,8,490,6],[509,12,490,10,"ev"],[509,14,490,12],[509,15,490,13,"pcId"],[509,19,490,17],[509,24,490,22],[509,28,490,26],[509,29,490,27,"_pcId"],[509,34,490,32],[509,36,490,34],[510,10,491,8],[511,8,492,6],[512,8,493,6,"log"],[512,11,493,9],[512,12,493,10,"debug"],[512,17,493,15],[512,18,493,16],[512,21,493,19],[512,25,493,23],[512,26,493,24,"_pcId"],[512,31,493,29],[512,41,493,39],[512,42,493,40],[514,8,495,6],[515,8,496,6],[516,8,497,6],[517,8,498,6],[517,12,498,10],[517,13,498,11,"_pendingTrackEvents"],[517,32,498,30],[517,33,498,31,"push"],[517,37,498,35],[517,38,498,36,"ev"],[517,40,498,38],[517,41,498,39],[518,6,499,4],[518,7,499,5],[518,8,499,6],[519,6,500,4],[519,10,500,4,"addListener"],[519,35,500,15],[519,37,500,16],[519,41,500,20],[519,43,500,22],[519,72,500,51],[519,74,500,53,"ev"],[519,76,500,55],[519,80,500,59],[520,8,501,6],[520,12,501,10,"ev"],[520,14,501,12],[520,15,501,13,"pcId"],[520,19,501,17],[520,24,501,22],[520,28,501,26],[520,29,501,27,"_pcId"],[520,34,501,32],[520,36,501,34],[521,10,502,8],[522,8,503,6],[523,8,504,6,"log"],[523,11,504,9],[523,12,504,10,"debug"],[523,17,504,15],[523,18,504,16],[523,21,504,19],[523,25,504,23],[523,26,504,24,"_pcId"],[523,31,504,29],[523,49,504,47,"ev"],[523,51,504,49],[523,52,504,50,"receiverId"],[523,62,504,60],[523,64,504,62],[523,65,504,63],[524,8,505,6],[524,14,505,12,"receiver"],[524,22,505,20],[524,25,505,23],[524,29,505,27],[524,30,505,28,"getReceivers"],[524,42,505,40],[524,43,505,41],[524,44,505,42],[524,45,505,43,"find"],[524,49,505,47],[524,50,505,48,"r"],[524,51,505,49],[524,55,505,53,"r"],[524,56,505,54],[524,57,505,55,"id"],[524,59,505,57],[524,64,505,62,"ev"],[524,66,505,64],[524,67,505,65,"receiverId"],[524,77,505,75],[524,78,505,76],[525,8,506,6],[525,14,506,12,"track"],[525,19,506,17],[525,22,506,20,"receiver"],[525,30,506,28],[525,35,506,33],[525,39,506,37],[525,43,506,41,"receiver"],[525,51,506,49],[525,56,506,54],[525,61,506,59],[525,62,506,60],[525,65,506,63],[525,70,506,68],[525,71,506,69],[525,74,506,72,"receiver"],[525,82,506,80],[525,83,506,81,"track"],[525,88,506,86],[526,8,507,6],[526,12,507,10,"receiver"],[526,20,507,18],[526,24,507,22,"track"],[526,29,507,27],[526,31,507,29],[527,10,508,8],[528,10,509,8],[529,10,510,8],[530,10,511,8],[531,10,512,8],[532,10,513,8],[532,15,513,13],[532,21,513,19,"stream"],[532,27,513,25],[532,31,513,29],[532,35,513,33],[532,36,513,34,"_remoteStreams"],[532,50,513,48],[532,51,513,49,"values"],[532,57,513,55],[532,58,513,56],[532,59,513,57],[532,61,513,59],[533,12,514,10],[533,16,514,14,"stream"],[533,22,514,20],[533,23,514,21,"_tracks"],[533,30,514,28],[533,31,514,29,"includes"],[533,39,514,37],[533,40,514,38,"track"],[533,45,514,43],[533,46,514,44],[533,48,514,46],[534,14,515,12],[534,20,515,18,"trackIdx"],[534,28,515,26],[534,31,515,29,"stream"],[534,37,515,35],[534,38,515,36,"_tracks"],[534,45,515,43],[534,46,515,44,"indexOf"],[534,53,515,51],[534,54,515,52,"track"],[534,59,515,57],[534,60,515,58],[535,14,516,12,"log"],[535,17,516,15],[535,18,516,16,"debug"],[535,23,516,21],[535,24,516,22],[535,27,516,25],[535,31,516,29],[535,32,516,30,"_pcId"],[535,37,516,35],[535,53,516,51,"track"],[535,58,516,56],[535,59,516,57,"id"],[535,61,516,59],[535,63,516,61],[535,64,516,62],[536,14,517,12,"stream"],[536,20,517,18],[536,21,517,19,"_tracks"],[536,28,517,26],[536,29,517,27,"splice"],[536,35,517,33],[536,36,517,34,"trackIdx"],[536,44,517,42],[536,46,517,44],[536,47,517,45],[536,48,517,46],[537,14,518,12,"stream"],[537,20,518,18],[537,21,518,19,"dispatchEvent"],[537,34,518,32],[537,35,518,33],[537,39,518,37,"MediaStreamTrackEvent"],[537,69,518,58],[537,70,518,59],[537,83,518,72],[537,85,518,74],[538,16,519,14,"track"],[539,14,520,12],[539,15,520,13],[539,16,520,14],[539,17,520,15],[541,14,522,12],[542,14,523,12,"track"],[542,19,523,17],[542,20,523,18,"_setMutedInternal"],[542,37,523,35],[542,38,523,36],[542,42,523,40],[542,43,523,41],[543,12,524,10],[544,10,525,8],[545,8,526,6],[546,6,527,4],[546,7,527,5],[546,8,527,6],[547,6,528,4],[547,10,528,4,"addListener"],[547,35,528,15],[547,37,528,16],[547,41,528,20],[547,43,528,22],[547,74,528,53],[547,76,528,55,"ev"],[547,78,528,57],[547,82,528,61],[548,8,529,6],[548,12,529,10,"ev"],[548,14,529,12],[548,15,529,13,"pcId"],[548,19,529,17],[548,24,529,22],[548,28,529,26],[548,29,529,27,"_pcId"],[548,34,529,32],[548,36,529,34],[549,10,530,8],[550,8,531,6],[551,8,532,6],[551,14,532,12,"sdpInfo"],[551,21,532,19],[551,24,532,22,"ev"],[551,26,532,24],[551,27,532,25,"sdp"],[551,30,532,28],[553,8,534,6],[554,8,535,6],[554,12,535,10,"sdpInfo"],[554,19,535,17],[554,20,535,18,"type"],[554,24,535,22],[554,28,535,26,"sdpInfo"],[554,35,535,33],[554,36,535,34,"sdp"],[554,39,535,37],[554,41,535,39],[555,10,536,8],[555,14,536,12],[555,15,536,13,"localDescription"],[555,31,536,29],[555,34,536,32],[555,38,536,36,"RTCSessionDescription"],[555,68,536,57],[555,69,536,58,"sdpInfo"],[555,76,536,65],[555,77,536,66],[556,8,537,6],[556,9,537,7],[556,15,537,13],[557,10,538,8],[557,14,538,12],[557,15,538,13,"localDescription"],[557,31,538,29],[557,34,538,32],[557,38,538,36],[558,8,539,6],[559,8,540,6],[559,14,540,12,"candidate"],[559,23,540,21],[559,26,540,24],[559,30,540,28,"RTCIceCandidate"],[559,54,540,43],[559,55,540,44,"ev"],[559,57,540,46],[559,58,540,47,"candidate"],[559,67,540,56],[559,68,540,57],[560,8,541,6],[560,12,541,10],[560,13,541,11,"dispatchEvent"],[560,26,541,24],[560,27,541,25],[560,31,541,29,"RTCIceCandidateEvent"],[560,60,541,49],[560,61,541,50],[560,75,541,64],[560,77,541,66],[561,10,542,8,"candidate"],[562,8,543,6],[562,9,543,7],[562,10,543,8],[562,11,543,9],[563,6,544,4],[563,7,544,5],[563,8,544,6],[564,6,545,4],[564,10,545,4,"addListener"],[564,35,545,15],[564,37,545,16],[564,41,545,20],[564,43,545,22],[564,78,545,57],[564,80,545,59,"ev"],[564,82,545,61],[564,86,545,65],[565,8,546,6],[565,12,546,10,"ev"],[565,14,546,12],[565,15,546,13,"pcId"],[565,19,546,17],[565,24,546,22],[565,28,546,26],[565,29,546,27,"_pcId"],[565,34,546,32],[565,36,546,34],[566,10,547,8],[567,8,548,6],[568,8,549,6],[568,12,549,10],[568,13,549,11,"iceGatheringState"],[568,30,549,28],[568,33,549,31,"ev"],[568,35,549,33],[568,36,549,34,"iceGatheringState"],[568,53,549,51],[569,8,550,6],[569,12,550,10],[569,16,550,14],[569,17,550,15,"iceGatheringState"],[569,34,550,32],[569,39,550,37],[569,49,550,47],[569,51,550,49],[570,10,551,8],[570,16,551,14,"sdpInfo"],[570,23,551,21],[570,26,551,24,"ev"],[570,28,551,26],[570,29,551,27,"sdp"],[570,32,551,30],[572,10,553,8],[573,10,554,8],[573,14,554,12,"sdpInfo"],[573,21,554,19],[573,22,554,20,"type"],[573,26,554,24],[573,30,554,28,"sdpInfo"],[573,37,554,35],[573,38,554,36,"sdp"],[573,41,554,39],[573,43,554,41],[574,12,555,10],[574,16,555,14],[574,17,555,15,"localDescription"],[574,33,555,31],[574,36,555,34],[574,40,555,38,"RTCSessionDescription"],[574,70,555,59],[574,71,555,60,"sdpInfo"],[574,78,555,67],[574,79,555,68],[575,10,556,8],[575,11,556,9],[575,17,556,15],[576,12,557,10],[576,16,557,14],[576,17,557,15,"localDescription"],[576,33,557,31],[576,36,557,34],[576,40,557,38],[577,10,558,8],[578,10,559,8],[578,14,559,12],[578,15,559,13,"dispatchEvent"],[578,28,559,26],[578,29,559,27],[578,33,559,31,"RTCIceCandidateEvent"],[578,62,559,51],[578,63,559,52],[578,77,559,66],[578,79,559,68],[579,12,560,10,"candidate"],[579,21,560,19],[579,23,560,21],[580,10,561,8],[580,11,561,9],[580,12,561,10],[580,13,561,11],[581,8,562,6],[582,8,563,6],[582,12,563,10],[582,13,563,11,"dispatchEvent"],[582,26,563,24],[582,27,563,25],[582,31,563,29,"Event"],[582,43,563,34],[582,44,563,35],[582,69,563,60],[582,70,563,61],[582,71,563,62],[583,6,564,4],[583,7,564,5],[583,8,564,6],[584,6,565,4],[584,10,565,4,"addListener"],[584,35,565,15],[584,37,565,16],[584,41,565,20],[584,43,565,22],[584,77,565,56],[584,79,565,58,"ev"],[584,81,565,60],[584,85,565,64],[585,8,566,6],[585,12,566,10,"ev"],[585,14,566,12],[585,15,566,13,"pcId"],[585,19,566,17],[585,24,566,22],[585,28,566,26],[585,29,566,27,"_pcId"],[585,34,566,32],[585,36,566,34],[586,10,567,8],[587,8,568,6],[588,8,569,6],[588,14,569,12,"channel"],[588,21,569,19],[588,24,569,22],[588,28,569,26,"RTCDataChannel"],[588,51,569,40],[588,52,569,41,"ev"],[588,54,569,43],[588,55,569,44,"dataChannel"],[588,66,569,55],[588,67,569,56],[589,8,570,6],[589,12,570,10],[589,13,570,11,"dispatchEvent"],[589,26,570,24],[589,27,570,25],[589,31,570,29,"RTCDataChannelEvent"],[589,59,570,48],[589,60,570,49],[589,73,570,62],[589,75,570,64],[590,10,571,8,"channel"],[591,8,572,6],[591,9,572,7],[591,10,572,8],[591,11,572,9],[593,8,574,6],[594,8,575,6],[595,8,576,6,"channel"],[595,15,576,13],[595,16,576,14,"dispatchEvent"],[595,29,576,27],[595,30,576,28],[595,34,576,32,"RTCDataChannelEvent"],[595,62,576,51],[595,63,576,52],[595,69,576,58],[595,71,576,60],[596,10,577,8,"channel"],[597,8,578,6],[597,9,578,7],[597,10,578,8],[597,11,578,9],[598,6,579,4],[598,7,579,5],[598,8,579,6],[599,6,580,4],[599,10,580,4,"addListener"],[599,35,580,15],[599,37,580,16],[599,41,580,20],[599,43,580,22],[599,72,580,51],[599,74,580,53,"ev"],[599,76,580,55],[599,80,580,59],[600,8,581,6],[600,12,581,10,"ev"],[600,14,581,12],[600,15,581,13,"pcId"],[600,19,581,17],[600,24,581,22],[600,28,581,26],[600,29,581,27,"_pcId"],[600,34,581,32],[600,36,581,34],[601,10,582,8],[602,8,583,6],[603,8,584,6],[603,14,584,12],[603,15,584,13,"track"],[603,20,584,18],[603,21,584,19],[603,24,584,22],[603,28,584,26],[603,29,584,27,"getReceivers"],[603,41,584,39],[603,42,584,40],[603,43,584,41],[603,44,584,42,"map"],[603,47,584,45],[603,48,584,46,"r"],[603,49,584,47],[603,53,584,51,"r"],[603,54,584,52],[603,55,584,53,"track"],[603,60,584,58],[603,61,584,59],[603,62,584,60,"filter"],[603,68,584,66],[603,69,584,67,"t"],[603,70,584,68],[603,74,584,72],[603,75,584,73,"t"],[603,76,584,74],[603,81,584,79],[603,85,584,83],[603,89,584,87,"t"],[603,90,584,88],[603,95,584,93],[603,100,584,98],[603,101,584,99],[603,104,584,102],[603,109,584,107],[603,110,584,108],[603,113,584,111,"t"],[603,114,584,112],[603,115,584,113,"id"],[603,117,584,115],[603,123,584,121,"ev"],[603,125,584,123],[603,126,584,124,"trackId"],[603,133,584,131],[603,134,584,132],[604,8,585,6],[604,12,585,10,"track"],[604,17,585,15],[604,19,585,17],[605,10,586,8,"track"],[605,15,586,13],[605,16,586,14,"_setMutedInternal"],[605,33,586,31],[605,34,586,32,"ev"],[605,36,586,34],[605,37,586,35,"muted"],[605,42,586,40],[605,43,586,41],[606,8,587,6],[607,6,588,4],[607,7,588,5],[607,8,588,6],[608,4,589,2],[610,4,591,2],[611,0,592,0],[612,0,593,0],[613,0,594,0],[614,0,595,0],[615,0,596,0],[616,0,597,0],[617,0,598,0],[618,0,599,0],[619,0,600,0],[620,0,601,0],[621,4,602,2,"createDataChannel"],[621,21,602,19,"createDataChannel"],[621,22,602,20,"label"],[621,27,602,25],[621,29,602,27,"dataChannelDict"],[621,44,602,42],[621,46,602,44],[622,6,603,4],[622,10,603,8,"arguments"],[622,19,603,17],[622,20,603,18,"length"],[622,26,603,24],[622,31,603,29],[622,32,603,30],[622,34,603,32],[623,8,604,6],[623,14,604,12],[623,18,604,16,"TypeError"],[623,27,604,25],[623,28,604,26],[623,64,604,62],[623,65,604,63],[624,6,605,4],[625,6,606,4],[625,10,606,8,"dataChannelDict"],[625,25,606,23],[625,29,606,27],[625,33,606,31],[625,37,606,35,"dataChannelDict"],[625,52,606,50],[625,54,606,52],[626,8,607,6],[626,14,607,12,"id"],[626,16,607,14],[626,19,607,17,"dataChannelDict"],[626,34,607,32],[626,35,607,33,"id"],[626,37,607,35],[627,8,608,6],[627,12,608,10],[627,19,608,17,"id"],[627,21,608,19],[627,26,608,24],[627,34,608,32],[627,36,608,34],[628,10,609,8],[628,16,609,14],[628,20,609,18,"TypeError"],[628,29,609,27],[628,30,609,28],[628,65,609,63],[628,68,609,66,"id"],[628,70,609,68],[628,71,609,69],[629,8,610,6],[630,6,611,4],[631,6,612,4],[631,12,612,10,"channelInfo"],[631,23,612,21],[631,26,612,24,"WebRTCModule"],[631,38,612,36],[631,39,612,37,"createDataChannel"],[631,56,612,54],[631,57,612,55],[631,61,612,59],[631,62,612,60,"_pcId"],[631,67,612,65],[631,69,612,67,"String"],[631,75,612,73],[631,76,612,74,"label"],[631,81,612,79],[631,82,612,80],[631,84,612,82,"dataChannelDict"],[631,99,612,97],[631,100,612,98],[632,6,613,4],[632,10,613,8,"channelInfo"],[632,21,613,19],[632,26,613,24],[632,30,613,28],[632,32,613,30],[633,8,614,6],[633,14,614,12],[633,18,614,16,"TypeError"],[633,27,614,25],[633,28,614,26],[633,62,614,60],[633,63,614,61],[634,6,615,4],[635,6,616,4],[635,13,616,11],[635,17,616,15,"RTCDataChannel"],[635,40,616,29],[635,41,616,30,"channelInfo"],[635,52,616,41],[635,53,616,42],[636,4,617,2],[638,4,619,2],[639,0,620,0],[640,0,621,0],[641,0,622,0],[642,4,623,2,"_trackExists"],[642,16,623,14,"_trackExists"],[642,17,623,15,"track"],[642,22,623,20],[642,24,623,22],[643,6,624,4],[643,12,624,10],[643,13,624,11,"sender"],[643,19,624,17],[643,20,624,18],[643,23,624,21],[643,27,624,25],[643,28,624,26,"getSenders"],[643,38,624,36],[643,39,624,37],[643,40,624,38],[643,41,624,39,"filter"],[643,47,624,45],[643,48,624,46,"sender"],[643,54,624,52],[643,58,624,56],[644,8,625,6],[644,12,625,10,"_sender$track"],[644,25,625,23],[645,8,626,6],[645,15,626,13],[645,16,626,14],[645,17,626,15,"_sender$track"],[645,30,626,28],[645,33,626,31,"sender"],[645,39,626,37],[645,40,626,38,"track"],[645,45,626,43],[645,51,626,49],[645,55,626,53],[645,59,626,57,"_sender$track"],[645,72,626,70],[645,77,626,75],[645,82,626,80],[645,83,626,81],[645,86,626,84],[645,91,626,89],[645,92,626,90],[645,95,626,93,"_sender$track"],[645,108,626,106],[645,109,626,107,"id"],[645,111,626,109],[645,117,626,115,"track"],[645,122,626,120],[645,123,626,121,"id"],[645,125,626,123],[646,6,627,4],[646,7,627,5],[646,8,627,6],[647,6,628,4],[647,13,628,11,"sender"],[647,19,628,17],[647,22,628,20],[647,26,628,24],[647,29,628,27],[647,34,628,32],[648,4,629,2],[650,4,631,2],[651,0,632,0],[652,0,633,0],[653,4,634,2,"_updateTransceivers"],[653,23,634,21,"_updateTransceivers"],[653,24,634,22,"transceiverUpdates"],[653,42,634,40],[653,44,634,42],[654,6,635,4],[654,10,635,8,"removeStopped"],[654,23,635,21],[654,26,635,24,"arguments"],[654,35,635,33],[654,36,635,34,"length"],[654,42,635,40],[654,45,635,43],[654,46,635,44],[654,50,635,48,"arguments"],[654,59,635,57],[654,60,635,58],[654,61,635,59],[654,62,635,60],[654,67,635,65,"undefined"],[654,76,635,74],[654,79,635,77,"arguments"],[654,88,635,86],[654,89,635,87],[654,90,635,88],[654,91,635,89],[654,94,635,92],[654,99,635,97],[655,6,636,4],[655,11,636,9],[655,17,636,15,"update"],[655,23,636,21],[655,27,636,25,"transceiverUpdates"],[655,45,636,43],[655,47,636,45],[656,8,637,6],[656,14,637,12],[656,15,637,13,"transceiver"],[656,26,637,24],[656,27,637,25],[656,30,637,28],[656,34,637,32],[656,35,637,33,"getTransceivers"],[656,50,637,48],[656,51,637,49],[656,52,637,50],[656,53,637,51,"filter"],[656,59,637,57],[656,60,637,58,"t"],[656,61,637,59],[656,65,637,63,"t"],[656,66,637,64],[656,67,637,65,"sender"],[656,73,637,71],[656,74,637,72,"id"],[656,76,637,74],[656,81,637,79,"update"],[656,87,637,85],[656,88,637,86,"transceiverId"],[656,101,637,99],[656,102,637,100],[657,8,638,6],[657,12,638,10],[657,13,638,11,"transceiver"],[657,24,638,22],[657,26,638,24],[658,10,639,8],[659,8,640,6],[660,8,641,6],[660,12,641,10,"update"],[660,18,641,16],[660,19,641,17,"currentDirection"],[660,35,641,33],[660,37,641,35],[661,10,642,8,"transceiver"],[661,21,642,19],[661,22,642,20,"_currentDirection"],[661,39,642,37],[661,42,642,40,"update"],[661,48,642,46],[661,49,642,47,"currentDirection"],[661,65,642,63],[662,8,643,6],[663,8,644,6,"transceiver"],[663,19,644,17],[663,20,644,18,"_mid"],[663,24,644,22],[663,27,644,25,"update"],[663,33,644,31],[663,34,644,32,"mid"],[663,37,644,35],[664,8,645,6,"transceiver"],[664,19,645,17],[664,20,645,18,"_stopped"],[664,28,645,26],[664,31,645,29,"Boolean"],[664,38,645,36],[664,39,645,37,"update"],[664,45,645,43],[664,46,645,44,"isStopped"],[664,55,645,53],[664,56,645,54],[665,8,646,6,"transceiver"],[665,19,646,17],[665,20,646,18,"_sender"],[665,27,646,25],[665,28,646,26,"_rtpParameters"],[665,42,646,40],[665,45,646,43],[665,49,646,47,"RTCRtpSendParameters"],[665,78,646,67],[665,79,646,68,"update"],[665,85,646,74],[665,86,646,75,"senderRtpParameters"],[665,105,646,94],[665,106,646,95],[666,8,647,6,"transceiver"],[666,19,647,17],[666,20,647,18,"_receiver"],[666,29,647,27],[666,30,647,28,"_rtpParameters"],[666,44,647,42],[666,47,647,45],[666,51,647,49,"RTCRtpReceiveParameters"],[666,83,647,72],[666,84,647,73,"update"],[666,90,647,79],[666,91,647,80,"receiverRtpParameters"],[666,112,647,101],[666,113,647,102],[667,6,648,4],[668,6,649,4],[668,10,649,8,"removeStopped"],[668,23,649,21],[668,25,649,23],[669,8,650,6],[669,14,650,12,"stopped"],[669,21,650,19],[669,24,650,22],[669,28,650,26],[669,29,650,27,"getTransceivers"],[669,44,650,42],[669,45,650,43],[669,46,650,44],[669,47,650,45,"filter"],[669,53,650,51],[669,54,650,52,"t"],[669,55,650,53],[669,59,650,57,"t"],[669,60,650,58],[669,61,650,59,"stopped"],[669,68,650,66],[669,69,650,67],[670,8,651,6],[670,14,651,12,"newTransceivers"],[670,29,651,27],[670,32,651,30],[670,36,651,34],[670,37,651,35,"_transceivers"],[670,50,651,48],[670,51,651,49,"filter"],[670,57,651,55],[670,58,651,56,"t"],[670,59,651,57],[670,63,651,61],[670,64,651,62,"stopped"],[670,71,651,69],[670,72,651,70,"includes"],[670,80,651,78],[670,81,651,79,"t"],[670,82,651,80],[670,83,651,81,"transceiver"],[670,94,651,92],[670,95,651,93],[670,96,651,94],[671,8,652,6],[671,12,652,10],[671,13,652,11,"_transceivers"],[671,26,652,24],[671,29,652,27,"newTransceivers"],[671,44,652,42],[672,6,653,4],[673,4,654,2],[675,4,656,2],[676,0,657,0],[677,0,658,0],[678,0,659,0],[679,0,660,0],[680,4,661,2,"_insertTransceiverSorted"],[680,28,661,26,"_insertTransceiverSorted"],[680,29,661,27,"order"],[680,34,661,32],[680,36,661,34,"transceiver"],[680,47,661,45],[680,49,661,47],[681,6,662,4],[681,10,662,8],[681,11,662,9,"_transceivers"],[681,24,662,22],[681,25,662,23,"push"],[681,29,662,27],[681,30,662,28],[682,8,663,6,"order"],[682,13,663,11],[683,8,664,6,"transceiver"],[684,6,665,4],[684,7,665,5],[684,8,665,6],[685,6,666,4],[685,10,666,8],[685,11,666,9,"_transceivers"],[685,24,666,22],[685,25,666,23,"sort"],[685,29,666,27],[685,30,666,28],[685,31,666,29,"a"],[685,32,666,30],[685,34,666,32,"b"],[685,35,666,33],[685,40,666,38,"a"],[685,41,666,39],[685,42,666,40,"order"],[685,47,666,45],[685,50,666,48,"b"],[685,51,666,49],[685,52,666,50,"order"],[685,57,666,55],[685,58,666,56],[686,4,667,2],[687,2,668,0],[689,2,670,0],[690,0,671,0],[691,0,672,0],[692,2,670,0,"exports"],[692,9,670,0],[692,10,670,0,"default"],[692,17,670,0],[692,20,670,0,"RTCPeerConnection"],[692,37,670,0],[693,2,673,0],[693,8,673,6,"proto"],[693,13,673,11],[693,16,673,14,"RTCPeerConnection"],[693,33,673,31],[693,34,673,32,"prototype"],[693,43,673,41],[694,2,674,0],[694,6,674,0,"defineEventAttribute"],[694,33,674,20],[694,35,674,21,"proto"],[694,40,674,26],[694,42,674,28],[694,65,674,51],[694,66,674,52],[695,2,675,0],[695,6,675,0,"defineEventAttribute"],[695,33,675,20],[695,35,675,21,"proto"],[695,40,675,26],[695,42,675,28],[695,56,675,42],[695,57,675,43],[696,2,676,0],[696,6,676,0,"defineEventAttribute"],[696,33,676,20],[696,35,676,21,"proto"],[696,40,676,26],[696,42,676,28],[696,61,676,47],[696,62,676,48],[697,2,677,0],[697,6,677,0,"defineEventAttribute"],[697,33,677,20],[697,35,677,21,"proto"],[697,40,677,26],[697,42,677,28],[697,68,677,54],[697,69,677,55],[698,2,678,0],[698,6,678,0,"defineEventAttribute"],[698,33,678,20],[698,35,678,21,"proto"],[698,40,678,26],[698,42,678,28],[698,67,678,53],[698,68,678,54],[699,2,679,0],[699,6,679,0,"defineEventAttribute"],[699,33,679,20],[699,35,679,21,"proto"],[699,40,679,26],[699,42,679,28],[699,61,679,47],[699,62,679,48],[700,2,680,0],[700,6,680,0,"defineEventAttribute"],[700,33,680,20],[700,35,680,21,"proto"],[700,40,680,26],[700,42,680,28],[700,64,680,50],[700,65,680,51],[701,2,681,0],[701,6,681,0,"defineEventAttribute"],[701,33,681,20],[701,35,681,21,"proto"],[701,40,681,26],[701,42,681,28],[701,55,681,41],[701,56,681,42],[702,2,682,0],[702,6,682,0,"defineEventAttribute"],[702,33,682,20],[702,35,682,21,"proto"],[702,40,682,26],[702,42,682,28],[702,49,682,35],[702,50,682,36],[703,2,683,0],[703,6,683,0,"defineEventAttribute"],[703,33,683,20],[703,35,683,21,"proto"],[703,40,683,26],[703,42,683,28],[703,49,683,35],[703,50,683,36],[704,0,683,37],[704,3]],"functionMap":{"names":["_defineProperty","<global>","RTCPeerConnection","constructor","urls.map$argument_0","servers.filter$argument_0","createOffer","newTransceivers.forEach$argument_0","createAnswer","setConfiguration","setLocalDescription","setRemoteDescription","getTransceivers.filter$argument_0","ev.streams.map$argument_0","streams.forEach$argument_0","addIceCandidate","addTrack","streams.map$argument_0","getSenders.filter$argument_0","addTransceiver","init.streams.map$argument_0","removeTrack","getSenders.find$argument_0","getStats","getReceivers.filter$argument_0","getTransceivers","_transceivers.map$argument_0","getSenders","_transceivers.filter$argument_0","_transceivers.filter.map$argument_0","getReceivers","close","_transceivers.forEach$argument_0","restartIce","_registerEvents","addListener$argument_2","getReceivers.find$argument_0","getReceivers.map$argument_0","getReceivers.map.filter$argument_0","createDataChannel","_trackExists","_updateTransceivers","_insertTransceiverSorted","_transceivers.sort$argument_0"],"mappings":"AAA,iNC;eCyB;ECC;+BC8B,wBD;gDEI,WF;GDU;EIC;8FCQ;KDoB;GJG;EMC;GNQ;EOC;GPE;EQC;GR2B;ESC;8FJuB;KIoB;0DCO,qCD;qCEa;OFgB;sBGQ;OHI;GTM;EaC;GbW;EcU;kCCW,SD;sDEe,uBF;kEJM,sCI;GduB;EiBC;wCCmB,mBD;GjBqC;EmBC;kDCQ,iBD;gETW,sCS;GnBE;EqBC;+CLgB,yBK;mDCC,yBD;GrBW;EuBC;kCCC,kBD;GvBC;EyBC;qCCC,2BD,ME,yBF;GzBC;E4BC;qCFC,2BE,MD,2BC;G5BC;E6BC;+BCQ;KDK;G7BC;E+BC;G/BE;EgCC;6DCC;KDK;4DCC;KDM;oDCC;KDW;6DCC;KDM;+CCG;KDU;qDCC;gDCK,2BD;KDsB;uDCC;KDgB;2DCC;KDmB;0DCC;KDc;qDCC;8CEI,YF,SG,gEH;KDI;GhCC;EqCa;GrCe;EsCM;8CtBC;KsBG;GtCE;EuCK;0D7BG,yC6B;oD7Ba,c6B;wDbC,qCa;GvCG;EwCO;4BCK,2BD;GxCC;CDC"}},"type":"js/module"}]}